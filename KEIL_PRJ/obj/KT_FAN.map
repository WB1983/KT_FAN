Component: ARM Compiler 6.10.1 Tool: armlink [5d142800]

==============================================================================

Section Cross References

    delay.o(.text.DELAY_Init) refers to uidiv.o(.text) for __aeabi_uidiv
    delay.o(.text.DELAY_Init) refers to delay.o(.text.SysTick_Config) for SysTick_Config
    delay.o(.text.DELAY_Init) refers to delay.o(.text.__NVIC_SetPriority) for __NVIC_SetPriority
    delay.o(.text.DELAY_Init) refers to system_mm32spin0280.o(.data.SystemCoreClock) for SystemCoreClock
    delay.o(.ARM.exidx.text.DELAY_Init) refers to delay.o(.text.DELAY_Init) for [Anonymous Symbol]
    delay.o(.text.SysTick_Config) refers to delay.o(.text.__NVIC_SetPriority) for __NVIC_SetPriority
    delay.o(.ARM.exidx.text.SysTick_Config) refers to delay.o(.text.SysTick_Config) for [Anonymous Symbol]
    delay.o(.ARM.exidx.text.__NVIC_SetPriority) refers to delay.o(.text.__NVIC_SetPriority) for [Anonymous Symbol]
    delay.o(.text.DELAY_Ms) refers to delay.o(.bss.sTimingDelay) for [Anonymous Symbol]
    delay.o(.ARM.exidx.text.DELAY_Ms) refers to delay.o(.text.DELAY_Ms) for [Anonymous Symbol]
    main.o(.text.WDG_Init) refers to iec60730_b_aux.o(.text.Iwdg_Init) for Iwdg_Init
    main.o(.ARM.exidx.text.WDG_Init) refers to main.o(.text.WDG_Init) for [Anonymous Symbol]
    main.o(.text.WDG_Refresh) refers to hal_iwdg.o(.text.IWDG_ReloadCounter) for IWDG_ReloadCounter
    main.o(.ARM.exidx.text.WDG_Refresh) refers to main.o(.text.WDG_Refresh) for [Anonymous Symbol]
    main.o(.text.main) refers to uart_classb.o(.text.CBUart_Init) for CBUart_Init
    main.o(.text.main) refers to system_mm32spin0280.o(.text.SystemCoreClockUpdate) for SystemCoreClockUpdate
    main.o(.text.main) refers to printfa.o(i.__0printf) for printf
    main.o(.text.main) refers to main.o(.text.WDG_Init) for WDG_Init
    main.o(.text.main) refers to iec60730_b_runtimetest.o(.text.IEC60730_InitRunTimeChecks) for IEC60730_InitRunTimeChecks
    main.o(.text.main) refers to fsclock.o(.text.FCK_vInitSafeTime) for FCK_vInitSafeTime
    main.o(.text.main) refers to user_function.o(.text.Init_Parameter) for Init_Parameter
    main.o(.text.main) refers to board.o(.text.Bsp_Gpio_Init) for Bsp_Gpio_Init
    main.o(.text.main) refers to board.o(.text.Peripheral_Init) for Peripheral_Init
    main.o(.text.main) refers to mm32_it.o(.text.Interrupt_Init) for Interrupt_Init
    main.o(.text.main) refers to modbus.o(.text.MOS_vModbusInit) for MOS_vModbusInit
    main.o(.text.main) refers to iec60730_b_runtimetest.o(.text.IEC60730_DoRunTimeChecks) for IEC60730_DoRunTimeChecks
    main.o(.text.main) refers to main.o(.text.WDG_Refresh) for WDG_Refresh
    main.o(.text.main) refers to modbus.o(.text.MOS_vModBusHandler_2) for MOS_vModBusHandler_2
    main.o(.text.main) refers to timeslice.o(.text.TSE_vSliceTaskHandle) for TSE_vSliceTaskHandle
    main.o(.text.main) refers to fshandle.o(.text.FHE_vFunctionSafetyCheck) for FHE_vFunctionSafetyCheck
    main.o(.text.main) refers to speedcontrol.o(.text.SCL_vSpeedControlHandle) for SCL_vSpeedControlHandle
    main.o(.text.main) refers to main.o(.rodata.str1.1) for .L.str
    main.o(.text.main) refers to main.o(.bss.Motor_1st) for Motor_1st
    main.o(.ARM.exidx.text.main) refers to main.o(.text.main) for [Anonymous Symbol]
    sys.o(.text.exRCC_ClkPrescaler_Init) refers to sys.o(.rodata.cRCC_ClockPrescalerTable) for cRCC_ClockPrescalerTable
    sys.o(.ARM.exidx.text.exRCC_ClkPrescaler_Init) refers to sys.o(.text.exRCC_ClkPrescaler_Init) for [Anonymous Symbol]
    sys.o(.text.SYSCLK_Init) refers to memcpya.o(.text) for __aeabi_memcpy
    sys.o(.text.SYSCLK_Init) refers to sys.o(.text.DELAY_xUs) for DELAY_xUs
    sys.o(.text.SYSCLK_Init) refers to sys.o(.text.exRCC_ClkPrescaler_Init) for exRCC_ClkPrescaler_Init
    sys.o(.text.SYSCLK_Init) refers to uidiv.o(.text) for __aeabi_uidiv
    sys.o(.text.SYSCLK_Init) refers to sys.o(.rodata..LSYSCLK_Init.latency_pllmul_plldiv_sysclksrc_pllsrc_table) for [Anonymous Symbol]
    sys.o(.text.SYSCLK_Init) refers to sys.o(.data.gSystemClockValue) for gSystemClockValue
    sys.o(.ARM.exidx.text.SYSCLK_Init) refers to sys.o(.text.SYSCLK_Init) for [Anonymous Symbol]
    sys.o(.ARM.exidx.text.DELAY_xUs) refers to sys.o(.text.DELAY_xUs) for [Anonymous Symbol]
    sys.o(.ARM.exidx.text.RCC_SetDefault) refers to sys.o(.text.RCC_SetDefault) for [Anonymous Symbol]
    sys.o(.text.SystemReInit) refers to sys.o(.text.RCC_SetDefault) for RCC_SetDefault
    sys.o(.text.SystemReInit) refers to sys.o(.text.SYSCLK_Init) for SYSCLK_Init
    sys.o(.ARM.exidx.text.SystemReInit) refers to sys.o(.text.SystemReInit) for [Anonymous Symbol]
    board.o(.text.Bsp_Op_Init) refers to hal_gpio.o(.text.GPIO_StructInit) for GPIO_StructInit
    board.o(.text.Bsp_Op_Init) refers to hal_rcc.o(.text.RCC_AHBPeriphClockCmd) for RCC_AHBPeriphClockCmd
    board.o(.text.Bsp_Op_Init) refers to hal_gpio.o(.text.GPIO_Init) for GPIO_Init
    board.o(.ARM.exidx.text.Bsp_Op_Init) refers to board.o(.text.Bsp_Op_Init) for [Anonymous Symbol]
    board.o(.text.Bsp_Adc_Init) refers to hal_gpio.o(.text.GPIO_StructInit) for GPIO_StructInit
    board.o(.text.Bsp_Adc_Init) refers to hal_rcc.o(.text.RCC_AHBPeriphClockCmd) for RCC_AHBPeriphClockCmd
    board.o(.text.Bsp_Adc_Init) refers to hal_gpio.o(.text.GPIO_Init) for GPIO_Init
    board.o(.ARM.exidx.text.Bsp_Adc_Init) refers to board.o(.text.Bsp_Adc_Init) for [Anonymous Symbol]
    board.o(.text.Bsp_Comp_Init) refers to hal_gpio.o(.text.GPIO_StructInit) for GPIO_StructInit
    board.o(.text.Bsp_Comp_Init) refers to hal_rcc.o(.text.RCC_AHBPeriphClockCmd) for RCC_AHBPeriphClockCmd
    board.o(.text.Bsp_Comp_Init) refers to hal_gpio.o(.text.GPIO_Init) for GPIO_Init
    board.o(.ARM.exidx.text.Bsp_Comp_Init) refers to board.o(.text.Bsp_Comp_Init) for [Anonymous Symbol]
    board.o(.text.Bsp_Led_Init) refers to hal_gpio.o(.text.GPIO_StructInit) for GPIO_StructInit
    board.o(.text.Bsp_Led_Init) refers to hal_rcc.o(.text.RCC_AHBPeriphClockCmd) for RCC_AHBPeriphClockCmd
    board.o(.text.Bsp_Led_Init) refers to hal_gpio.o(.text.GPIO_Init) for GPIO_Init
    board.o(.ARM.exidx.text.Bsp_Led_Init) refers to board.o(.text.Bsp_Led_Init) for [Anonymous Symbol]
    board.o(.text.Bsp_Pwm_Init) refers to hal_gpio.o(.text.GPIO_StructInit) for GPIO_StructInit
    board.o(.text.Bsp_Pwm_Init) refers to hal_rcc.o(.text.RCC_AHBPeriphClockCmd) for RCC_AHBPeriphClockCmd
    board.o(.text.Bsp_Pwm_Init) refers to hal_gpio.o(.text.GPIO_Init) for GPIO_Init
    board.o(.text.Bsp_Pwm_Init) refers to hal_gpio.o(.text.GPIO_PinAFConfig) for GPIO_PinAFConfig
    board.o(.ARM.exidx.text.Bsp_Pwm_Init) refers to board.o(.text.Bsp_Pwm_Init) for [Anonymous Symbol]
    board.o(.text.BSP_vIdlePortInit) refers to hal_gpio.o(.text.GPIO_StructInit) for GPIO_StructInit
    board.o(.text.BSP_vIdlePortInit) refers to hal_rcc.o(.text.RCC_AHBPeriphClockCmd) for RCC_AHBPeriphClockCmd
    board.o(.text.BSP_vIdlePortInit) refers to hal_gpio.o(.text.GPIO_Init) for GPIO_Init
    board.o(.ARM.exidx.text.BSP_vIdlePortInit) refers to board.o(.text.BSP_vIdlePortInit) for [Anonymous Symbol]
    board.o(.text.BSP_vIICInit) refers to hal_rcc.o(.text.RCC_AHBPeriphClockCmd) for RCC_AHBPeriphClockCmd
    board.o(.text.BSP_vIICInit) refers to hal_gpio.o(.text.GPIO_StructInit) for GPIO_StructInit
    board.o(.text.BSP_vIICInit) refers to hal_gpio.o(.text.GPIO_Init) for GPIO_Init
    board.o(.ARM.exidx.text.BSP_vIICInit) refers to board.o(.text.BSP_vIICInit) for [Anonymous Symbol]
    board.o(.text.BSP_vExti9Config) refers to hal_gpio.o(.text.GPIO_StructInit) for GPIO_StructInit
    board.o(.text.BSP_vExti9Config) refers to hal_rcc.o(.text.RCC_AHBPeriphClockCmd) for RCC_AHBPeriphClockCmd
    board.o(.text.BSP_vExti9Config) refers to hal_gpio.o(.text.GPIO_Init) for GPIO_Init
    board.o(.ARM.exidx.text.BSP_vExti9Config) refers to board.o(.text.BSP_vExti9Config) for [Anonymous Symbol]
    board.o(.text.BSP_vExti7Config) refers to hal_gpio.o(.text.GPIO_StructInit) for GPIO_StructInit
    board.o(.text.BSP_vExti7Config) refers to hal_rcc.o(.text.RCC_AHBPeriphClockCmd) for RCC_AHBPeriphClockCmd
    board.o(.text.BSP_vExti7Config) refers to hal_gpio.o(.text.GPIO_Init) for GPIO_Init
    board.o(.ARM.exidx.text.BSP_vExti7Config) refers to board.o(.text.BSP_vExti7Config) for [Anonymous Symbol]
    board.o(.text.BSP_vUARTInit) refers to hal_rcc.o(.text.RCC_AHBPeriphClockCmd) for RCC_AHBPeriphClockCmd
    board.o(.text.BSP_vUARTInit) refers to hal_gpio.o(.text.GPIO_StructInit) for GPIO_StructInit
    board.o(.text.BSP_vUARTInit) refers to hal_gpio.o(.text.GPIO_Init) for GPIO_Init
    board.o(.ARM.exidx.text.BSP_vUARTInit) refers to board.o(.text.BSP_vUARTInit) for [Anonymous Symbol]
    board.o(.text.Bsp_Capture_Init) refers to hal_gpio.o(.text.GPIO_StructInit) for GPIO_StructInit
    board.o(.text.Bsp_Capture_Init) refers to hal_rcc.o(.text.RCC_AHBPeriphClockCmd) for RCC_AHBPeriphClockCmd
    board.o(.text.Bsp_Capture_Init) refers to hal_gpio.o(.text.GPIO_Init) for GPIO_Init
    board.o(.text.Bsp_Capture_Init) refers to hal_gpio.o(.text.GPIO_PinAFConfig) for GPIO_PinAFConfig
    board.o(.ARM.exidx.text.Bsp_Capture_Init) refers to board.o(.text.Bsp_Capture_Init) for [Anonymous Symbol]
    board.o(.text.Bsp_PWM_Output_Init) refers to hal_gpio.o(.text.GPIO_StructInit) for GPIO_StructInit
    board.o(.text.Bsp_PWM_Output_Init) refers to hal_rcc.o(.text.RCC_AHBPeriphClockCmd) for RCC_AHBPeriphClockCmd
    board.o(.text.Bsp_PWM_Output_Init) refers to hal_gpio.o(.text.GPIO_Init) for GPIO_Init
    board.o(.text.Bsp_PWM_Output_Init) refers to hal_gpio.o(.text.GPIO_PinAFConfig) for GPIO_PinAFConfig
    board.o(.ARM.exidx.text.Bsp_PWM_Output_Init) refers to board.o(.text.Bsp_PWM_Output_Init) for [Anonymous Symbol]
    board.o(.text.BSP_vDirectionDetect_Init) refers to hal_gpio.o(.text.GPIO_StructInit) for GPIO_StructInit
    board.o(.text.BSP_vDirectionDetect_Init) refers to hal_rcc.o(.text.RCC_AHBPeriphClockCmd) for RCC_AHBPeriphClockCmd
    board.o(.text.BSP_vDirectionDetect_Init) refers to hal_gpio.o(.text.GPIO_Init) for GPIO_Init
    board.o(.ARM.exidx.text.BSP_vDirectionDetect_Init) refers to board.o(.text.BSP_vDirectionDetect_Init) for [Anonymous Symbol]
    board.o(.text.Bsp_Gpio_Init) refers to board.o(.text.Bsp_Led_Init) for Bsp_Led_Init
    board.o(.text.Bsp_Gpio_Init) refers to board.o(.text.Bsp_Op_Init) for Bsp_Op_Init
    board.o(.text.Bsp_Gpio_Init) refers to board.o(.text.Bsp_Adc_Init) for Bsp_Adc_Init
    board.o(.text.Bsp_Gpio_Init) refers to board.o(.text.Bsp_Comp_Init) for Bsp_Comp_Init
    board.o(.text.Bsp_Gpio_Init) refers to board.o(.text.Bsp_Pwm_Init) for Bsp_Pwm_Init
    board.o(.text.Bsp_Gpio_Init) refers to board.o(.text.BSP_vUARTInit) for BSP_vUARTInit
    board.o(.text.Bsp_Gpio_Init) refers to board.o(.text.Bsp_Capture_Init) for Bsp_Capture_Init
    board.o(.text.Bsp_Gpio_Init) refers to board.o(.text.Bsp_PWM_Output_Init) for Bsp_PWM_Output_Init
    board.o(.text.Bsp_Gpio_Init) refers to board.o(.text.BSP_vDirectionDetect_Init) for BSP_vDirectionDetect_Init
    board.o(.ARM.exidx.text.Bsp_Gpio_Init) refers to board.o(.text.Bsp_Gpio_Init) for [Anonymous Symbol]
    board.o(.text.Board_ADC_Init) refers to drv_adc.o(.text.Drv_Adc_Basic_Init) for Drv_Adc_Basic_Init
    board.o(.text.Board_ADC_Init) refers to drv_adc.o(.text.Drv_Adc_Channel_Init) for Drv_Adc_Channel_Init
    board.o(.text.Board_ADC_Init) refers to hal_adc.o(.text.ADC_Cmd) for ADC_Cmd
    board.o(.ARM.exidx.text.Board_ADC_Init) refers to board.o(.text.Board_ADC_Init) for [Anonymous Symbol]
    board.o(.text.Board_Comp_Init) refers to drv_comp.o(.text.Drv_Comp_Init) for Drv_Comp_Init
    board.o(.ARM.exidx.text.Board_Comp_Init) refers to board.o(.text.Board_Comp_Init) for [Anonymous Symbol]
    board.o(.ARM.exidx.text.BOD_vI2CConfig) refers to board.o(.text.BOD_vI2CConfig) for [Anonymous Symbol]
    board.o(.text.BOD_vExti9Config) refers to board.o(.text.EXTI9_NVIC_Config) for EXTI9_NVIC_Config
    board.o(.text.BOD_vExti9Config) refers to board.o(.text.EXTI_NVIC_Init) for EXTI_NVIC_Init
    board.o(.ARM.exidx.text.BOD_vExti9Config) refers to board.o(.text.BOD_vExti9Config) for [Anonymous Symbol]
    board.o(.text.EXTI9_NVIC_Config) refers to hal_rcc.o(.text.RCC_APB2PeriphClockCmd) for RCC_APB2PeriphClockCmd
    board.o(.text.EXTI9_NVIC_Config) refers to hal_exti.o(.text.EXTI_LineConfig) for EXTI_LineConfig
    board.o(.text.EXTI9_NVIC_Config) refers to hal_exti.o(.text.EXTI_Init) for EXTI_Init
    board.o(.ARM.exidx.text.EXTI9_NVIC_Config) refers to board.o(.text.EXTI9_NVIC_Config) for [Anonymous Symbol]
    board.o(.text.EXTI_NVIC_Init) refers to hal_misc.o(.text.NVIC_Init) for NVIC_Init
    board.o(.ARM.exidx.text.EXTI_NVIC_Init) refers to board.o(.text.EXTI_NVIC_Init) for [Anonymous Symbol]
    board.o(.text.BOD_vExti7Config) refers to board.o(.text.EXTI7_NVIC_Config) for EXTI7_NVIC_Config
    board.o(.text.BOD_vExti7Config) refers to board.o(.text.EXTI_NVIC_Init) for EXTI_NVIC_Init
    board.o(.ARM.exidx.text.BOD_vExti7Config) refers to board.o(.text.BOD_vExti7Config) for [Anonymous Symbol]
    board.o(.text.EXTI7_NVIC_Config) refers to hal_rcc.o(.text.RCC_APB2PeriphClockCmd) for RCC_APB2PeriphClockCmd
    board.o(.text.EXTI7_NVIC_Config) refers to hal_exti.o(.text.EXTI_LineConfig) for EXTI_LineConfig
    board.o(.text.EXTI7_NVIC_Config) refers to hal_exti.o(.text.EXTI_Init) for EXTI_Init
    board.o(.ARM.exidx.text.EXTI7_NVIC_Config) refers to board.o(.text.EXTI7_NVIC_Config) for [Anonymous Symbol]
    board.o(.text.Peripheral_Init) refers to board.o(.text.Board_ADC_Init) for Board_ADC_Init
    board.o(.text.Peripheral_Init) refers to board.o(.text.Board_Comp_Init) for Board_Comp_Init
    board.o(.text.Peripheral_Init) refers to drv_opamp.o(.text.Drv_Opamp_Init) for Drv_Opamp_Init
    board.o(.text.Peripheral_Init) refers to drv_pwm.o(.text.Drv_Pwm_Init) for Drv_Pwm_Init
    board.o(.text.Peripheral_Init) refers to drv_iwdg.o(.text.Drv_Iwdg_Init) for Drv_Iwdg_Init
    board.o(.text.Peripheral_Init) refers to drv_div.o(.text.Drv_Hwdiv_Init) for Drv_Hwdiv_Init
    board.o(.text.Peripheral_Init) refers to drv_sqrt.o(.text.Drv_Sqrt_Init) for Drv_Sqrt_Init
    board.o(.text.Peripheral_Init) refers to drv_sci.o(.text.UART_vCONSOLE_Init) for UART_vCONSOLE_Init
    board.o(.text.Peripheral_Init) refers to drv_capture.o(.text.Drv_vCaptureInit) for Drv_vCaptureInit
    board.o(.text.Peripheral_Init) refers to drv_output.o(.text.Drv_vPwmOutputInit) for Drv_vPwmOutputInit
    board.o(.text.Peripheral_Init) refers to main.o(.bss.Motor_1st) for Motor_1st
    board.o(.ARM.exidx.text.Peripheral_Init) refers to board.o(.text.Peripheral_Init) for [Anonymous Symbol]
    mm32_it.o(.text.NVIC_Configure) refers to hal_misc.o(.text.NVIC_Init) for NVIC_Init
    mm32_it.o(.ARM.exidx.text.NVIC_Configure) refers to mm32_it.o(.text.NVIC_Configure) for [Anonymous Symbol]
    mm32_it.o(.text.Interrupt_Init) refers to mm32_it.o(.text.__NVIC_SetPriority) for __NVIC_SetPriority
    mm32_it.o(.text.Interrupt_Init) refers to mm32_it.o(.text.NVIC_Configure) for NVIC_Configure
    mm32_it.o(.text.Interrupt_Init) refers to hal_adc.o(.text.ADC_ITConfig) for ADC_ITConfig
    mm32_it.o(.text.Interrupt_Init) refers to hal_adc.o(.text.ADC_ClearITPendingBit) for ADC_ClearITPendingBit
    mm32_it.o(.text.Interrupt_Init) refers to hal_tim.o(.text.TIM_ClearFlag) for TIM_ClearFlag
    mm32_it.o(.text.Interrupt_Init) refers to hal_tim.o(.text.TIM_ITConfig) for TIM_ITConfig
    mm32_it.o(.ARM.exidx.text.Interrupt_Init) refers to mm32_it.o(.text.Interrupt_Init) for [Anonymous Symbol]
    mm32_it.o(.ARM.exidx.text.__NVIC_SetPriority) refers to mm32_it.o(.text.__NVIC_SetPriority) for [Anonymous Symbol]
    mm32_it.o(.ARM.exidx.text.WWDG_IRQHandler) refers to mm32_it.o(.text.WWDG_IRQHandler) for [Anonymous Symbol]
    mm32_it.o(.ARM.exidx.text.PVD_IRQHandler) refers to mm32_it.o(.text.PVD_IRQHandler) for [Anonymous Symbol]
    mm32_it.o(.ARM.exidx.text.PWM_IRQHandler) refers to mm32_it.o(.text.PWM_IRQHandler) for [Anonymous Symbol]
    mm32_it.o(.ARM.exidx.text.FLASH_IRQHandler) refers to mm32_it.o(.text.FLASH_IRQHandler) for [Anonymous Symbol]
    mm32_it.o(.ARM.exidx.text.RCC_IRQHandler) refers to mm32_it.o(.text.RCC_IRQHandler) for [Anonymous Symbol]
    mm32_it.o(.ARM.exidx.text.EXTI0_1_IRQHandler) refers to mm32_it.o(.text.EXTI0_1_IRQHandler) for [Anonymous Symbol]
    mm32_it.o(.ARM.exidx.text.EXTI2_3_IRQHandler) refers to mm32_it.o(.text.EXTI2_3_IRQHandler) for [Anonymous Symbol]
    mm32_it.o(.text.EXTI4_15_IRQHandler) refers to hal_exti.o(.text.EXTI_GetFlagStatus) for EXTI_GetFlagStatus
    mm32_it.o(.text.EXTI4_15_IRQHandler) refers to hal_exti.o(.text.EXTI_ClearFlag) for EXTI_ClearFlag
    mm32_it.o(.text.EXTI4_15_IRQHandler) refers to fsmcu.o(.text.FMC_u32GetSystickTimerCounter) for FMC_u32GetSystickTimerCounter
    mm32_it.o(.text.EXTI4_15_IRQHandler) refers to uidiv.o(.text) for __aeabi_uidiv
    mm32_it.o(.text.EXTI4_15_IRQHandler) refers to mm32_it.o(.bss.MIT_tInputCapture) for [Anonymous Symbol]
    mm32_it.o(.text.EXTI4_15_IRQHandler) refers to mm32_it.o(.bss.u16Test2) for [Anonymous Symbol]
    mm32_it.o(.text.EXTI4_15_IRQHandler) refers to mm32_it.o(.bss.u16Test1) for [Anonymous Symbol]
    mm32_it.o(.text.EXTI4_15_IRQHandler) refers to mm32_it.o(.bss.u16Test4) for [Anonymous Symbol]
    mm32_it.o(.text.EXTI4_15_IRQHandler) refers to mm32_it.o(.bss.u16Test3) for [Anonymous Symbol]
    mm32_it.o(.text.EXTI4_15_IRQHandler) refers to mm32_it.o(.bss.u16Test5) for [Anonymous Symbol]
    mm32_it.o(.text.EXTI4_15_IRQHandler) refers to mm32_it.o(.bss.u16Test6) for [Anonymous Symbol]
    mm32_it.o(.ARM.exidx.text.EXTI4_15_IRQHandler) refers to mm32_it.o(.text.EXTI4_15_IRQHandler) for [Anonymous Symbol]
    mm32_it.o(.ARM.exidx.text.HWDIV_IRQHandler) refers to mm32_it.o(.text.HWDIV_IRQHandler) for [Anonymous Symbol]
    mm32_it.o(.ARM.exidx.text.DMA1_Channel1_IRQHandler) refers to mm32_it.o(.text.DMA1_Channel1_IRQHandler) for [Anonymous Symbol]
    mm32_it.o(.ARM.exidx.text.DMA1_Channel2_3_IRQHandler) refers to mm32_it.o(.text.DMA1_Channel2_3_IRQHandler) for [Anonymous Symbol]
    mm32_it.o(.ARM.exidx.text.DMA1_Channel4_5_IRQHandler) refers to mm32_it.o(.text.DMA1_Channel4_5_IRQHandler) for [Anonymous Symbol]
    mm32_it.o(.ARM.exidx.text.ADC1_IRQHandler) refers to mm32_it.o(.text.ADC1_IRQHandler) for [Anonymous Symbol]
    mm32_it.o(.ARM.exidx.text.TIM1_BRK_UP_TRG_COM_IRQHandler) refers to mm32_it.o(.text.TIM1_BRK_UP_TRG_COM_IRQHandler) for [Anonymous Symbol]
    mm32_it.o(.ARM.exidx.text.TIM1_CC_IRQHandler) refers to mm32_it.o(.text.TIM1_CC_IRQHandler) for [Anonymous Symbol]
    mm32_it.o(.text.TIM3_IRQHandler) refers to hal_tim.o(.text.TIM_GetITStatus) for TIM_GetITStatus
    mm32_it.o(.text.TIM3_IRQHandler) refers to hal_tim.o(.text.TIM_GetCapture1) for TIM_GetCapture1
    mm32_it.o(.text.TIM3_IRQHandler) refers to hal_tim.o(.text.TIM_GetCapture2) for TIM_GetCapture2
    mm32_it.o(.text.TIM3_IRQHandler) refers to hal_tim.o(.text.TIM_ClearITPendingBit) for TIM_ClearITPendingBit
    mm32_it.o(.text.TIM3_IRQHandler) refers to mm32_it.o(.bss.MIT_tInputCapture) for [Anonymous Symbol]
    mm32_it.o(.ARM.exidx.text.TIM3_IRQHandler) refers to mm32_it.o(.text.TIM3_IRQHandler) for [Anonymous Symbol]
    mm32_it.o(.ARM.exidx.text.TIM8_BRK_UP_TRG_COM_IRQHandler) refers to mm32_it.o(.text.TIM8_BRK_UP_TRG_COM_IRQHandler) for [Anonymous Symbol]
    mm32_it.o(.ARM.exidx.text.TIM8_CC_IRQHandler) refers to mm32_it.o(.text.TIM8_CC_IRQHandler) for [Anonymous Symbol]
    mm32_it.o(.ARM.exidx.text.TIM14_IRQHandler) refers to mm32_it.o(.text.TIM14_IRQHandler) for [Anonymous Symbol]
    mm32_it.o(.text.ADC2_IRQHandler) refers to fsmcu.o(.text.FMC_u32GetSystickTimerCounter) for FMC_u32GetSystickTimerCounter
    mm32_it.o(.text.ADC2_IRQHandler) refers to fsclock.o(.text.STK_vTriggerSafeTime) for STK_vTriggerSafeTime
    mm32_it.o(.text.ADC2_IRQHandler) refers to current.o(.text.CUR_vSetOffsetMeasState) for CUR_vSetOffsetMeasState
    mm32_it.o(.text.ADC2_IRQHandler) refers to foc_pmsm.o(.text.Get_ADC_Result) for Get_ADC_Result
    mm32_it.o(.text.ADC2_IRQHandler) refers to mm32_it.o(.text.MIT_vReadNormalADCValue) for MIT_vReadNormalADCValue
    mm32_it.o(.text.ADC2_IRQHandler) refers to fshandle.o(.text.FHE_vHandleTask) for FHE_vHandleTask
    mm32_it.o(.text.ADC2_IRQHandler) refers to mm32_it.o(.bss.MIT_TEST) for [Anonymous Symbol]
    mm32_it.o(.text.ADC2_IRQHandler) refers to mm32_it.o(.bss.MIT_Start_time) for [Anonymous Symbol]
    mm32_it.o(.text.ADC2_IRQHandler) refers to mm32_it.o(.bss.ADC2_IRQHandler.u16Cnt) for [Anonymous Symbol]
    mm32_it.o(.text.ADC2_IRQHandler) refers to main.o(.bss.Motor_1st) for Motor_1st
    mm32_it.o(.text.ADC2_IRQHandler) refers to statemachine.o(.data.eM1_MainState) for eM1_MainState
    mm32_it.o(.text.ADC2_IRQHandler) refers to statemachine.o(.rodata.s_STATE_FAST) for s_STATE_FAST
    mm32_it.o(.text.ADC2_IRQHandler) refers to mm32_it.o(.bss.ADC2_IRQHandler.u8ADCTimeCnt) for [Anonymous Symbol]
    mm32_it.o(.text.ADC2_IRQHandler) refers to mm32_it.o(.bss.ADC2_IRQHandler.u8ADCTimeCnt2) for [Anonymous Symbol]
    mm32_it.o(.text.ADC2_IRQHandler) refers to mm32_it.o(.bss.ADC2_IRQHandler.u32IaSum) for [Anonymous Symbol]
    mm32_it.o(.text.ADC2_IRQHandler) refers to mm32_it.o(.bss.ADC2_IRQHandler.u32IbSum) for [Anonymous Symbol]
    mm32_it.o(.text.ADC2_IRQHandler) refers to mm32_it.o(.bss.MIT_Stop_time) for [Anonymous Symbol]
    mm32_it.o(.text.ADC2_IRQHandler) refers to mm32_it.o(.bss.MIT_Dure_Time) for [Anonymous Symbol]
    mm32_it.o(.ARM.exidx.text.ADC2_IRQHandler) refers to mm32_it.o(.text.ADC2_IRQHandler) for [Anonymous Symbol]
    mm32_it.o(.text.MIT_vReadNormalADCValue) refers to mm32_it.o(.bss.MIT_eADCReadId) for [Anonymous Symbol]
    mm32_it.o(.text.MIT_vReadNormalADCValue) refers to mm32_it.o(.bss.MIT_u16NormalAdcValueArray) for [Anonymous Symbol]
    mm32_it.o(.ARM.exidx.text.MIT_vReadNormalADCValue) refers to mm32_it.o(.text.MIT_vReadNormalADCValue) for [Anonymous Symbol]
    mm32_it.o(.ARM.exidx.text.TIM16_IRQHandler) refers to mm32_it.o(.text.TIM16_IRQHandler) for [Anonymous Symbol]
    mm32_it.o(.ARM.exidx.text.TIM17_IRQHandler) refers to mm32_it.o(.text.TIM17_IRQHandler) for [Anonymous Symbol]
    mm32_it.o(.ARM.exidx.text.I2C1_IRQHandler) refers to mm32_it.o(.text.I2C1_IRQHandler) for [Anonymous Symbol]
    mm32_it.o(.ARM.exidx.text.COMP1_2_3_4_5_IRQHandler) refers to mm32_it.o(.text.COMP1_2_3_4_5_IRQHandler) for [Anonymous Symbol]
    mm32_it.o(.ARM.exidx.text.SPI1_IRQHandler) refers to mm32_it.o(.text.SPI1_IRQHandler) for [Anonymous Symbol]
    mm32_it.o(.ARM.exidx.text.SPI2_IRQHandler) refers to mm32_it.o(.text.SPI2_IRQHandler) for [Anonymous Symbol]
    mm32_it.o(.ARM.exidx.text.UART1_IRQHandler) refers to mm32_it.o(.text.UART1_IRQHandler) for [Anonymous Symbol]
    mm32_it.o(.text.UART2_IRQHandler) refers to hal_uart.o(.text.UART_GetITStatus) for UART_GetITStatus
    mm32_it.o(.text.UART2_IRQHandler) refers to hal_uart.o(.text.UART_ClearITPendingBit) for UART_ClearITPendingBit
    mm32_it.o(.text.UART2_IRQHandler) refers to mm32_it.o(.bss.UART_pfReceivedCallback) for [Anonymous Symbol]
    mm32_it.o(.ARM.exidx.text.UART2_IRQHandler) refers to mm32_it.o(.text.UART2_IRQHandler) for [Anonymous Symbol]
    mm32_it.o(.ARM.exidx.text.CSM_IRQn_IRQHan) refers to mm32_it.o(.text.CSM_IRQn_IRQHan) for [Anonymous Symbol]
    mm32_it.o(.ARM.exidx.text.UART3_IRQHandler) refers to mm32_it.o(.text.UART3_IRQHandler) for [Anonymous Symbol]
    mm32_it.o(.text.STK_vSetGenericTimerCallbackFunc) refers to mm32_it.o(.bss.STK_pfGeneralTimerCallback) for STK_pfGeneralTimerCallback
    mm32_it.o(.ARM.exidx.text.STK_vSetGenericTimerCallbackFunc) refers to mm32_it.o(.text.STK_vSetGenericTimerCallbackFunc) for [Anonymous Symbol]
    mm32_it.o(.text.UART_vSetUartReceiveCallbackFunc) refers to mm32_it.o(.bss.UART_pfReceivedCallback) for [Anonymous Symbol]
    mm32_it.o(.ARM.exidx.text.UART_vSetUartReceiveCallbackFunc) refers to mm32_it.o(.text.UART_vSetUartReceiveCallbackFunc) for [Anonymous Symbol]
    mm32_it.o(.text.MIT_ptGetCaptureData) refers to mm32_it.o(.bss.MIT_tInputCapture) for [Anonymous Symbol]
    mm32_it.o(.ARM.exidx.text.MIT_ptGetCaptureData) refers to mm32_it.o(.text.MIT_ptGetCaptureData) for [Anonymous Symbol]
    user_function.o(.text.Init_Parameter) refers to uidiv.o(.text) for __aeabi_uidiv
    user_function.o(.text.Init_Parameter) refers to user_function.o(.text.MLIB_Neg_Q15) for MLIB_Neg_Q15
    user_function.o(.ARM.exidx.text.Init_Parameter) refers to user_function.o(.text.Init_Parameter) for [Anonymous Symbol]
    user_function.o(.ARM.exidx.text.MLIB_Neg_Q15) refers to user_function.o(.text.MLIB_Neg_Q15) for [Anonymous Symbol]
    user_function.o(.text.variable_reset) refers to main.o(.bss.Motor_1st) for Motor_1st
    user_function.o(.ARM.exidx.text.variable_reset) refers to user_function.o(.text.variable_reset) for [Anonymous Symbol]
    user_function.o(.text.Var_Filt) refers to user_function.o(.text.MLIB_FilterMA_Q15) for MLIB_FilterMA_Q15
    user_function.o(.text.Var_Filt) refers to main.o(.bss.Motor_1st) for Motor_1st
    user_function.o(.ARM.exidx.text.Var_Filt) refers to user_function.o(.text.Var_Filt) for [Anonymous Symbol]
    user_function.o(.text.MLIB_FilterMA_Q15) refers to user_function.o(.text.MLIB_AddSat_Q31) for MLIB_AddSat_Q31
    user_function.o(.text.MLIB_FilterMA_Q15) refers to user_function.o(.text.MLIB_ShR_Q31) for MLIB_ShR_Q31
    user_function.o(.text.MLIB_FilterMA_Q15) refers to user_function.o(.text.MLIB_SubSat_Q31) for MLIB_SubSat_Q31
    user_function.o(.text.MLIB_FilterMA_Q15) refers to user_function.o(.text.MLIB_Sat_Q15) for MLIB_Sat_Q15
    user_function.o(.ARM.exidx.text.MLIB_FilterMA_Q15) refers to user_function.o(.text.MLIB_FilterMA_Q15) for [Anonymous Symbol]
    user_function.o(.text.UFN_vBackwardParamStartupInit) refers to main.o(.bss.Motor_1st) for Motor_1st
    user_function.o(.ARM.exidx.text.UFN_vBackwardParamStartupInit) refers to user_function.o(.text.UFN_vBackwardParamStartupInit) for [Anonymous Symbol]
    user_function.o(.text.UFN_vForwardParamStartupInit) refers to main.o(.bss.Motor_1st) for Motor_1st
    user_function.o(.ARM.exidx.text.UFN_vForwardParamStartupInit) refers to user_function.o(.text.UFN_vForwardParamStartupInit) for [Anonymous Symbol]
    user_function.o(.ARM.exidx.text.MLIB_AddSat_Q31) refers to user_function.o(.text.MLIB_AddSat_Q31) for [Anonymous Symbol]
    user_function.o(.ARM.exidx.text.MLIB_ShR_Q31) refers to user_function.o(.text.MLIB_ShR_Q31) for [Anonymous Symbol]
    user_function.o(.ARM.exidx.text.MLIB_SubSat_Q31) refers to user_function.o(.text.MLIB_SubSat_Q31) for [Anonymous Symbol]
    user_function.o(.ARM.exidx.text.MLIB_Sat_Q15) refers to user_function.o(.text.MLIB_Sat_Q15) for [Anonymous Symbol]
    modbus.o(.text.MOS_vTriggerEvent) refers to modbus.o(.bss.MOS_u8EventRegister) for [Anonymous Symbol]
    modbus.o(.ARM.exidx.text.MOS_vTriggerEvent) refers to modbus.o(.text.MOS_vTriggerEvent) for [Anonymous Symbol]
    modbus.o(.text.MOS_vEventHandler) refers to modbus.o(.text.MOS_vRegisterHandler) for MOS_vRegisterHandler
    modbus.o(.text.MOS_vEventHandler) refers to modbus.o(.bss.MOS_u8EventRegister) for [Anonymous Symbol]
    modbus.o(.ARM.exidx.text.MOS_vEventHandler) refers to modbus.o(.text.MOS_vEventHandler) for [Anonymous Symbol]
    modbus.o(.text.MOS_vRegisterHandler) refers to modbus.o(.text.MOS_vSlaveAddressUpdate) for MOS_vSlaveAddressUpdate
    modbus.o(.ARM.exidx.text.MOS_vRegisterHandler) refers to modbus.o(.text.MOS_vRegisterHandler) for [Anonymous Symbol]
    modbus.o(.ARM.exidx.text.MOS_vWriteDataIntoEEP) refers to modbus.o(.text.MOS_vWriteDataIntoEEP) for [Anonymous Symbol]
    modbus.o(.text.MOS_vSlaveAddressUpdate) refers to modbus.o(.text.MOS_vWriteDataIntoEEP) for MOS_vWriteDataIntoEEP
    modbus.o(.text.MOS_vSlaveAddressUpdate) refers to modbus.o(.data.RegData) for RegData
    modbus.o(.ARM.exidx.text.MOS_vSlaveAddressUpdate) refers to modbus.o(.text.MOS_vSlaveAddressUpdate) for [Anonymous Symbol]
    modbus.o(.text.MOS_vCallbackInit) refers to mm32_it.o(.text.STK_vSetGenericTimerCallbackFunc) for STK_vSetGenericTimerCallbackFunc
    modbus.o(.text.MOS_vCallbackInit) refers to mm32_it.o(.text.UART_vSetUartReceiveCallbackFunc) for UART_vSetUartReceiveCallbackFunc
    modbus.o(.text.MOS_vCallbackInit) refers to modbus.o(.text.MOS_vTimeoutInterrupt) for MOS_vTimeoutInterrupt
    modbus.o(.text.MOS_vCallbackInit) refers to modbus.o(.text.MOS_vDataReceiveInterrupt) for MOS_vDataReceiveInterrupt
    modbus.o(.ARM.exidx.text.MOS_vCallbackInit) refers to modbus.o(.text.MOS_vCallbackInit) for [Anonymous Symbol]
    modbus.o(.text.MOS_vTimeoutInterrupt) refers to modbus.o(.bss.MOS_tModbusData) for MOS_tModbusData
    modbus.o(.text.MOS_vTimeoutInterrupt) refers to modbus.o(.data.MOS_u8IntervalTime) for [Anonymous Symbol]
    modbus.o(.ARM.exidx.text.MOS_vTimeoutInterrupt) refers to modbus.o(.text.MOS_vTimeoutInterrupt) for [Anonymous Symbol]
    modbus.o(.text.MOS_vDataReceiveInterrupt) refers to drv_sci.o(.text.UART_vGetUARTData) for UART_vGetUARTData
    modbus.o(.text.MOS_vDataReceiveInterrupt) refers to modbus.o(.bss.MOS_tModbusData) for MOS_tModbusData
    modbus.o(.ARM.exidx.text.MOS_vDataReceiveInterrupt) refers to modbus.o(.text.MOS_vDataReceiveInterrupt) for [Anonymous Symbol]
    modbus.o(.text.MOS_vModbusInit) refers to modbus.o(.text.MOS_vCallbackInit) for MOS_vCallbackInit
    modbus.o(.text.MOS_vModbusInit) refers to modbus.o(.text.MOS_vModbusProtocalConfig) for MOS_vModbusProtocalConfig
    modbus.o(.text.MOS_vModbusInit) refers to modbus.o(.text.MOS_vConfigureSlaveAddress) for MOS_vConfigureSlaveAddress
    modbus.o(.text.MOS_vModbusInit) refers to modbus.o(.bss.MOS_tModbusData) for MOS_tModbusData
    modbus.o(.text.MOS_vModbusInit) refers to modbus.o(.bss.MOS_bInitFinished) for [Anonymous Symbol]
    modbus.o(.ARM.exidx.text.MOS_vModbusInit) refers to modbus.o(.text.MOS_vModbusInit) for [Anonymous Symbol]
    modbus.o(.text.MOS_vModbusProtocalConfig) refers to modbus.o(.data.RegData) for RegData
    modbus.o(.ARM.exidx.text.MOS_vModbusProtocalConfig) refers to modbus.o(.text.MOS_vModbusProtocalConfig) for [Anonymous Symbol]
    modbus.o(.text.MOS_vConfigureSlaveAddress) refers to modbus.o(.data.RegData) for RegData
    modbus.o(.text.MOS_vConfigureSlaveAddress) refers to modbus.o(.bss.MOS_tModbusPara) for [Anonymous Symbol]
    modbus.o(.ARM.exidx.text.MOS_vConfigureSlaveAddress) refers to modbus.o(.text.MOS_vConfigureSlaveAddress) for [Anonymous Symbol]
    modbus.o(.ARM.exidx.text.MOS_vModbusTransmitEnalbe) refers to modbus.o(.text.MOS_vModbusTransmitEnalbe) for [Anonymous Symbol]
    modbus.o(.text.MOS_vCheckWriteDataCommand) refers to modbus.o(.bss.MOS_tModbusData) for MOS_tModbusData
    modbus.o(.text.MOS_vCheckWriteDataCommand) refers to modbus.o(.data.MOS_aucWriteData) for MOS_aucWriteData
    modbus.o(.ARM.exidx.text.MOS_vCheckWriteDataCommand) refers to modbus.o(.text.MOS_vCheckWriteDataCommand) for [Anonymous Symbol]
    modbus.o(.text.MOS_vModbudFun6) refers to modbus.o(.text.MOS_vTriggerEvent) for MOS_vTriggerEvent
    modbus.o(.text.MOS_vModbudFun6) refers to modbuscrc.o(.text.crc16) for crc16
    modbus.o(.text.MOS_vModbudFun6) refers to drv_sci.o(.text.UART_vWriteData) for UART_vWriteData
    modbus.o(.text.MOS_vModbudFun6) refers to drv_sci.o(.text.UART_bUARTTXBUFEMPT) for UART_bUARTTXBUFEMPT
    modbus.o(.text.MOS_vModbudFun6) refers to drv_sci.o(.text.UART_vModbusTxDisable) for UART_vModbusTxDisable
    modbus.o(.text.MOS_vModbudFun6) refers to modbus.o(.bss.MOS_tModbusData) for MOS_tModbusData
    modbus.o(.text.MOS_vModbudFun6) refers to modbus.o(.data.RegData) for RegData
    modbus.o(.text.MOS_vModbudFun6) refers to modbus.o(.bss.MOS_tModbusPara) for [Anonymous Symbol]
    modbus.o(.ARM.exidx.text.MOS_vModbudFun6) refers to modbus.o(.text.MOS_vModbudFun6) for [Anonymous Symbol]
    modbus.o(.text.MOS_vCheckReadAllDataCommand) refers to modbus.o(.bss.MOS_tModbusData) for MOS_tModbusData
    modbus.o(.text.MOS_vCheckReadAllDataCommand) refers to modbus.o(.data.MOS_aucReadAllData) for MOS_aucReadAllData
    modbus.o(.ARM.exidx.text.MOS_vCheckReadAllDataCommand) refers to modbus.o(.text.MOS_vCheckReadAllDataCommand) for [Anonymous Symbol]
    modbus.o(.text.MOS_vModbusFun4) refers to modbuscrc.o(.text.crc16) for crc16
    modbus.o(.text.MOS_vModbusFun4) refers to drv_sci.o(.text.UART_vWriteData) for UART_vWriteData
    modbus.o(.text.MOS_vModbusFun4) refers to drv_sci.o(.text.UART_bUARTTXBUFEMPT) for UART_bUARTTXBUFEMPT
    modbus.o(.text.MOS_vModbusFun4) refers to drv_sci.o(.text.UART_vModbusTxDisable) for UART_vModbusTxDisable
    modbus.o(.text.MOS_vModbusFun4) refers to modbus.o(.bss.MOS_tModbusData) for MOS_tModbusData
    modbus.o(.text.MOS_vModbusFun4) refers to modbus.o(.bss.MOS_tModbusPara) for [Anonymous Symbol]
    modbus.o(.text.MOS_vModbusFun4) refers to modbus.o(.data.RegData) for RegData
    modbus.o(.ARM.exidx.text.MOS_vModbusFun4) refers to modbus.o(.text.MOS_vModbusFun4) for [Anonymous Symbol]
    modbus.o(.text.MOS_vReadWriteDataCommon) refers to modbus.o(.text.MOS_vModbusFun4) for MOS_vModbusFun4
    modbus.o(.text.MOS_vReadWriteDataCommon) refers to modbus.o(.text.MOS_vModbudFun6) for MOS_vModbudFun6
    modbus.o(.text.MOS_vReadWriteDataCommon) refers to modbus.o(.bss.MOS_tModbusData) for MOS_tModbusData
    modbus.o(.text.MOS_vReadWriteDataCommon) refers to modbus.o(.bss.MOS_tModbusPara) for [Anonymous Symbol]
    modbus.o(.ARM.exidx.text.MOS_vReadWriteDataCommon) refers to modbus.o(.text.MOS_vReadWriteDataCommon) for [Anonymous Symbol]
    modbus.o(.text.MOS_vModBusHandler_2) refers to modbus.o(.text.MOS_vCheckReadAllDataCommand) for MOS_vCheckReadAllDataCommand
    modbus.o(.text.MOS_vModBusHandler_2) refers to modbus.o(.text.MOS_vCheckWriteDataCommand) for MOS_vCheckWriteDataCommand
    modbus.o(.text.MOS_vModBusHandler_2) refers to modbuscrc.o(.text.crc16) for crc16
    modbus.o(.text.MOS_vModBusHandler_2) refers to modbus.o(.text.MOS_vReadWriteDataCommon) for MOS_vReadWriteDataCommon
    modbus.o(.text.MOS_vModBusHandler_2) refers to modbus.o(.text.MOS_vEventHandler) for MOS_vEventHandler
    modbus.o(.text.MOS_vModBusHandler_2) refers to modbus.o(.bss.MOS_tModbusData) for MOS_tModbusData
    modbus.o(.text.MOS_vModBusHandler_2) refers to modbus.o(.bss.MOS_vModBusHandler_2.u16CalculateCRC) for [Anonymous Symbol]
    modbus.o(.text.MOS_vModBusHandler_2) refers to modbus.o(.bss.MOS_vModBusHandler_2.u16ReceivedCRC) for [Anonymous Symbol]
    modbus.o(.ARM.exidx.text.MOS_vModBusHandler_2) refers to modbus.o(.text.MOS_vModBusHandler_2) for [Anonymous Symbol]
    modbus.o(.text.MOS_bGetInitStatus) refers to modbus.o(.bss.MOS_bInitFinished) for [Anonymous Symbol]
    modbus.o(.ARM.exidx.text.MOS_bGetInitStatus) refers to modbus.o(.text.MOS_bGetInitStatus) for [Anonymous Symbol]
    modbuscrc.o(.text.crc16) refers to modbuscrc.o(.rodata.auchCRCHi) for auchCRCHi
    modbuscrc.o(.text.crc16) refers to modbuscrc.o(.rodata.auchCRCLo) for auchCRCLo
    modbuscrc.o(.ARM.exidx.text.crc16) refers to modbuscrc.o(.text.crc16) for [Anonymous Symbol]
    timeslice.o(.text.TSE_vAdaptInterfaceFromFlag2TaskCall) refers to main.o(.bss.Motor_1st) for Motor_1st
    timeslice.o(.text.TSE_vAdaptInterfaceFromFlag2TaskCall) refers to timeslice.o(.bss.TSE_u16EventFlag) for [Anonymous Symbol]
    timeslice.o(.ARM.exidx.text.TSE_vAdaptInterfaceFromFlag2TaskCall) refers to timeslice.o(.text.TSE_vAdaptInterfaceFromFlag2TaskCall) for [Anonymous Symbol]
    timeslice.o(.text.TSE_vRegisterHandler) refers to statemachine.o(.data.eM1_MainState) for eM1_MainState
    timeslice.o(.text.TSE_vRegisterHandler) refers to statemachine.o(.rodata.s_STATE_SLOW) for s_STATE_SLOW
    timeslice.o(.ARM.exidx.text.TSE_vRegisterHandler) refers to timeslice.o(.text.TSE_vRegisterHandler) for [Anonymous Symbol]
    timeslice.o(.text.TSE_vSliceTaskHandle) refers to timeslice.o(.text.TSE_vAdaptInterfaceFromFlag2TaskCall) for TSE_vAdaptInterfaceFromFlag2TaskCall
    timeslice.o(.text.TSE_vSliceTaskHandle) refers to timeslice.o(.text.TSE_vRegisterHandler) for TSE_vRegisterHandler
    timeslice.o(.text.TSE_vSliceTaskHandle) refers to timeslice.o(.bss.TSE_u16EventFlag) for [Anonymous Symbol]
    timeslice.o(.ARM.exidx.text.TSE_vSliceTaskHandle) refers to timeslice.o(.text.TSE_vSliceTaskHandle) for [Anonymous Symbol]
    speedcontrol.o(.text.SCL_vMotorDirectionCheck) refers to hal_gpio.o(.text.GPIO_ReadInputDataBit) for GPIO_ReadInputDataBit
    speedcontrol.o(.text.SCL_vMotorDirectionCheck) refers to statemachine.o(.data.eM1_MainState) for eM1_MainState
    speedcontrol.o(.text.SCL_vMotorDirectionCheck) refers to statemachine.o(.bss.eM1_RunSubState) for eM1_RunSubState
    speedcontrol.o(.text.SCL_vMotorDirectionCheck) refers to speedcontrol.o(.data.SCL_tSpeedControlData) for [Anonymous Symbol]
    speedcontrol.o(.text.SCL_vMotorDirectionCheck) refers to speedcontrol.o(.data.SCL_tSpeedControlPara) for [Anonymous Symbol]
    speedcontrol.o(.ARM.exidx.text.SCL_vMotorDirectionCheck) refers to speedcontrol.o(.text.SCL_vMotorDirectionCheck) for [Anonymous Symbol]
    speedcontrol.o(.text.SCL_bDataFilter) refers to speedcontrol.o(.data.SCL_tSpeedControlData) for [Anonymous Symbol]
    speedcontrol.o(.text.SCL_bDataFilter) refers to speedcontrol.o(.data.SCL_tSpeedControlPara) for [Anonymous Symbol]
    speedcontrol.o(.text.SCL_bDataFilter) refers to speedcontrol.o(.bss.SCL_tInputCaptureData) for [Anonymous Symbol]
    speedcontrol.o(.ARM.exidx.text.SCL_bDataFilter) refers to speedcontrol.o(.text.SCL_bDataFilter) for [Anonymous Symbol]
    speedcontrol.o(.text.SCL_vCalculateActualSpeedFromPU) refers to dflti.o(.text) for __aeabi_i2d
    speedcontrol.o(.text.SCL_vCalculateActualSpeedFromPU) refers to dmul.o(.text) for __aeabi_dmul
    speedcontrol.o(.text.SCL_vCalculateActualSpeedFromPU) refers to ddiv.o(.text) for __aeabi_ddiv
    speedcontrol.o(.text.SCL_vCalculateActualSpeedFromPU) refers to dfixi.o(.text) for __aeabi_d2iz
    speedcontrol.o(.text.SCL_vCalculateActualSpeedFromPU) refers to siabs.o(.text) for abs
    speedcontrol.o(.text.SCL_vCalculateActualSpeedFromPU) refers to drv_output.o(.text.Drv_vSetOutputFreq) for Drv_vSetOutputFreq
    speedcontrol.o(.text.SCL_vCalculateActualSpeedFromPU) refers to main.o(.bss.Motor_1st) for Motor_1st
    speedcontrol.o(.text.SCL_vCalculateActualSpeedFromPU) refers to speedcontrol.o(.data.SCL_tSpeedControlData) for [Anonymous Symbol]
    speedcontrol.o(.ARM.exidx.text.SCL_vCalculateActualSpeedFromPU) refers to speedcontrol.o(.text.SCL_vCalculateActualSpeedFromPU) for [Anonymous Symbol]
    speedcontrol.o(.text.SCL_vCalcualteTargetSpeed) refers to hal_gpio.o(.text.GPIO_ReadInputDataBit) for GPIO_ReadInputDataBit
    speedcontrol.o(.text.SCL_vCalcualteTargetSpeed) refers to uidiv.o(.text) for __aeabi_uidiv
    speedcontrol.o(.text.SCL_vCalcualteTargetSpeed) refers to dflti.o(.text) for __aeabi_i2d
    speedcontrol.o(.text.SCL_vCalcualteTargetSpeed) refers to speedcontrol.o(.text.MLIB_Mul_Q15) for MLIB_Mul_Q15
    speedcontrol.o(.text.SCL_vCalcualteTargetSpeed) refers to dadd.o(.text) for __aeabi_dadd
    speedcontrol.o(.text.SCL_vCalcualteTargetSpeed) refers to dmul.o(.text) for __aeabi_dmul
    speedcontrol.o(.text.SCL_vCalcualteTargetSpeed) refers to dfixi.o(.text) for __aeabi_d2iz
    speedcontrol.o(.text.SCL_vCalcualteTargetSpeed) refers to ddiv.o(.text) for __aeabi_ddiv
    speedcontrol.o(.text.SCL_vCalcualteTargetSpeed) refers to dcmpge.o(.text) for __aeabi_dcmpge
    speedcontrol.o(.text.SCL_vCalcualteTargetSpeed) refers to dcmplt.o(.text) for __aeabi_dcmplt
    speedcontrol.o(.text.SCL_vCalcualteTargetSpeed) refers to speedcontrol.o(.data.SCL_tSpeedControlData) for [Anonymous Symbol]
    speedcontrol.o(.text.SCL_vCalcualteTargetSpeed) refers to speedcontrol.o(.data.SCL_tSpeedControlPara) for [Anonymous Symbol]
    speedcontrol.o(.text.SCL_vCalcualteTargetSpeed) refers to main.o(.bss.Motor_1st) for Motor_1st
    speedcontrol.o(.ARM.exidx.text.SCL_vCalcualteTargetSpeed) refers to speedcontrol.o(.text.SCL_vCalcualteTargetSpeed) for [Anonymous Symbol]
    speedcontrol.o(.ARM.exidx.text.MLIB_Mul_Q15) refers to speedcontrol.o(.text.MLIB_Mul_Q15) for [Anonymous Symbol]
    speedcontrol.o(.text.SCL_vSpeedControlPWMHandle) refers to speedcontrol.o(.text.SCL_vMotorDirectionCheck) for SCL_vMotorDirectionCheck
    speedcontrol.o(.text.SCL_vSpeedControlPWMHandle) refers to mm32_it.o(.text.MIT_ptGetCaptureData) for MIT_ptGetCaptureData
    speedcontrol.o(.text.SCL_vSpeedControlPWMHandle) refers to speedcontrol.o(.text.SCL_bDataFilter) for SCL_bDataFilter
    speedcontrol.o(.text.SCL_vSpeedControlPWMHandle) refers to speedcontrol.o(.text.SCL_vCalcualteTargetSpeed) for SCL_vCalcualteTargetSpeed
    speedcontrol.o(.text.SCL_vSpeedControlPWMHandle) refers to speedcontrol.o(.text.SCL_vCalculateActualSpeedFromPU) for SCL_vCalculateActualSpeedFromPU
    speedcontrol.o(.text.SCL_vSpeedControlPWMHandle) refers to speedcontrol.o(.data.SCL_tSpeedControlData) for [Anonymous Symbol]
    speedcontrol.o(.text.SCL_vSpeedControlPWMHandle) refers to speedcontrol.o(.bss.SCL_tInputCaptureData) for [Anonymous Symbol]
    speedcontrol.o(.ARM.exidx.text.SCL_vSpeedControlPWMHandle) refers to speedcontrol.o(.text.SCL_vSpeedControlPWMHandle) for [Anonymous Symbol]
    speedcontrol.o(.text.SCL_vSpeedControlModbusHandle) refers to siabs.o(.text) for abs
    speedcontrol.o(.text.SCL_vSpeedControlModbusHandle) refers to dflti.o(.text) for __aeabi_i2d
    speedcontrol.o(.text.SCL_vSpeedControlModbusHandle) refers to dcmpge.o(.text) for __aeabi_dcmpge
    speedcontrol.o(.text.SCL_vSpeedControlModbusHandle) refers to ddiv.o(.text) for __aeabi_ddiv
    speedcontrol.o(.text.SCL_vSpeedControlModbusHandle) refers to dcmplt.o(.text) for __aeabi_dcmplt
    speedcontrol.o(.text.SCL_vSpeedControlModbusHandle) refers to dmul.o(.text) for __aeabi_dmul
    speedcontrol.o(.text.SCL_vSpeedControlModbusHandle) refers to dfixi.o(.text) for __aeabi_d2iz
    speedcontrol.o(.text.SCL_vSpeedControlModbusHandle) refers to speedcontrol.o(.text.SCL_vCalculateActualSpeedFromPU) for SCL_vCalculateActualSpeedFromPU
    speedcontrol.o(.text.SCL_vSpeedControlModbusHandle) refers to speedcontrol.o(.data.SCL_tSpeedControlData) for [Anonymous Symbol]
    speedcontrol.o(.text.SCL_vSpeedControlModbusHandle) refers to main.o(.bss.Motor_1st) for Motor_1st
    speedcontrol.o(.ARM.exidx.text.SCL_vSpeedControlModbusHandle) refers to speedcontrol.o(.text.SCL_vSpeedControlModbusHandle) for [Anonymous Symbol]
    speedcontrol.o(.text.SCL_vSpeedControlHandle) refers to speedcontrol.o(.text.SCL_vSpeedControlPWMHandle) for SCL_vSpeedControlPWMHandle
    speedcontrol.o(.text.SCL_vSpeedControlHandle) refers to speedcontrol.o(.text.SCL_vSpeedControlModbusHandle) for SCL_vSpeedControlModbusHandle
    speedcontrol.o(.text.SCL_vSpeedControlHandle) refers to user_function.o(.text.UFN_vForwardParamStartupInit) for UFN_vForwardParamStartupInit
    speedcontrol.o(.text.SCL_vSpeedControlHandle) refers to user_function.o(.text.UFN_vBackwardParamStartupInit) for UFN_vBackwardParamStartupInit
    speedcontrol.o(.text.SCL_vSpeedControlHandle) refers to modbus.o(.data.RegData) for RegData
    speedcontrol.o(.text.SCL_vSpeedControlHandle) refers to speedcontrol.o(.data.SCL_tSpeedControlData) for [Anonymous Symbol]
    speedcontrol.o(.text.SCL_vSpeedControlHandle) refers to main.o(.bss.Motor_1st) for Motor_1st
    speedcontrol.o(.text.SCL_vSpeedControlHandle) refers to speedcontrol.o(.bss.SCL_bDirectionDetAvailable) for [Anonymous Symbol]
    speedcontrol.o(.ARM.exidx.text.SCL_vSpeedControlHandle) refers to speedcontrol.o(.text.SCL_vSpeedControlHandle) for [Anonymous Symbol]
    speedcontrol.o(.text.SCL_bGetMotorDirection) refers to speedcontrol.o(.data.SCL_tSpeedControlData) for [Anonymous Symbol]
    speedcontrol.o(.ARM.exidx.text.SCL_bGetMotorDirection) refers to speedcontrol.o(.text.SCL_bGetMotorDirection) for [Anonymous Symbol]
    foc_pmsm.o(.text.DcBus_Ripple_suppress) refers to drv_div.o(.text.Division) for Division
    foc_pmsm.o(.ARM.exidx.text.DcBus_Ripple_suppress) refers to foc_pmsm.o(.text.DcBus_Ripple_suppress) for [Anonymous Symbol]
    foc_pmsm.o(.ARM.exidx.text.Get_ADC_Result) refers to foc_pmsm.o(.text.Get_ADC_Result) for [Anonymous Symbol]
    foc_pmsm.o(.text.PMSM_Obs) refers to mlib.o(.text) for MLIB_SMO
    foc_pmsm.o(.text.PMSM_Obs) refers to foc_pmsm.o(.text.MLIB_Mul_Q15) for MLIB_Mul_Q15
    foc_pmsm.o(.ARM.exidx.text.PMSM_Obs) refers to foc_pmsm.o(.text.PMSM_Obs) for [Anonymous Symbol]
    foc_pmsm.o(.ARM.exidx.text.MLIB_Mul_Q15) refers to foc_pmsm.o(.text.MLIB_Mul_Q15) for [Anonymous Symbol]
    foc_pmsm.o(.text.FOC_Current_Controller) refers to mlib.o(.text) for MLIB_SinCos
    foc_pmsm.o(.text.FOC_Current_Controller) refers to foc_pmsm.o(.text.MCFLIB_Park_S16) for MCFLIB_Park_S16
    foc_pmsm.o(.text.FOC_Current_Controller) refers to foc_pmsm.o(.text.MLIB_Mul_Q15) for MLIB_Mul_Q15
    foc_pmsm.o(.text.FOC_Current_Controller) refers to foc_pmsm.o(.text.MLIB_Neg_Q15) for MLIB_Neg_Q15
    foc_pmsm.o(.text.FOC_Current_Controller) refers to drv_sqrt.o(.text.Hw_Sqrt) for Hw_Sqrt
    foc_pmsm.o(.text.FOC_Current_Controller) refers to foc_pmsm.o(.text.MCFLIB_InvPark_S16) for MCFLIB_InvPark_S16
    foc_pmsm.o(.text.FOC_Current_Controller) refers to foc_pmsm.o(.text.DcBus_Ripple_suppress) for DcBus_Ripple_suppress
    foc_pmsm.o(.ARM.exidx.text.FOC_Current_Controller) refers to foc_pmsm.o(.text.FOC_Current_Controller) for [Anonymous Symbol]
    foc_pmsm.o(.ARM.exidx.text.MCFLIB_Park_S16) refers to foc_pmsm.o(.text.MCFLIB_Park_S16) for [Anonymous Symbol]
    foc_pmsm.o(.ARM.exidx.text.MLIB_Neg_Q15) refers to foc_pmsm.o(.text.MLIB_Neg_Q15) for [Anonymous Symbol]
    foc_pmsm.o(.ARM.exidx.text.MCFLIB_InvPark_S16) refers to foc_pmsm.o(.text.MCFLIB_InvPark_S16) for [Anonymous Symbol]
    foc_pmsm.o(.text.MOT_u16GetVariantResistorDigitalValue) refers to foc_pmsm.o(.bss.MOT_s16SpdAdcValue) for MOT_s16SpdAdcValue
    foc_pmsm.o(.ARM.exidx.text.MOT_u16GetVariantResistorDigitalValue) refers to foc_pmsm.o(.text.MOT_u16GetVariantResistorDigitalValue) for [Anonymous Symbol]
    ramp.o(.text.QMATH_sin) refers to ramp.o(.rodata.QMATH_SineTable512) for QMATH_SineTable512
    ramp.o(.ARM.exidx.text.QMATH_sin) refers to ramp.o(.text.QMATH_sin) for [Anonymous Symbol]
    ramp.o(.text.RMP_vCalTrapezoidalCurve) refers to math.o(.text.QMATH_limit) for QMATH_limit
    ramp.o(.text.RMP_vCalTrapezoidalCurve) refers to ramp.o(.bss.RMP_tMotorPara) for [Anonymous Symbol]
    ramp.o(.ARM.exidx.text.RMP_vCalTrapezoidalCurve) refers to ramp.o(.text.RMP_vCalTrapezoidalCurve) for [Anonymous Symbol]
    ramp.o(.text.RMP_vCalcSmootherSinusoidalSpeedRampCurve) refers to math.o(.text.QMATH_limit) for QMATH_limit
    ramp.o(.text.RMP_vCalcSmootherSinusoidalSpeedRampCurve) refers to ramp.o(.text.QMATH_sin) for QMATH_sin
    ramp.o(.text.RMP_vCalcSmootherSinusoidalSpeedRampCurve) refers to ramp.o(.text.MLIB_Mul_Q15) for MLIB_Mul_Q15
    ramp.o(.text.RMP_vCalcSmootherSinusoidalSpeedRampCurve) refers to ramp.o(.bss.RMP_tMotorPara) for [Anonymous Symbol]
    ramp.o(.text.RMP_vCalcSmootherSinusoidalSpeedRampCurve) refers to ramp.o(.bss.RMP_tMotorData) for [Anonymous Symbol]
    ramp.o(.ARM.exidx.text.RMP_vCalcSmootherSinusoidalSpeedRampCurve) refers to ramp.o(.text.RMP_vCalcSmootherSinusoidalSpeedRampCurve) for [Anonymous Symbol]
    ramp.o(.ARM.exidx.text.MLIB_Mul_Q15) refers to ramp.o(.text.MLIB_Mul_Q15) for [Anonymous Symbol]
    ramp.o(.text.RMP_vUpdateSwitchSpeed) refers to ramp.o(.bss.RMP_tMotorData) for [Anonymous Symbol]
    ramp.o(.text.RMP_vUpdateSwitchSpeed) refers to main.o(.bss.Motor_1st) for Motor_1st
    ramp.o(.ARM.exidx.text.RMP_vUpdateSwitchSpeed) refers to ramp.o(.text.RMP_vUpdateSwitchSpeed) for [Anonymous Symbol]
    ramp.o(.text.RMP_vConfigureStartupAlgorithm) refers to main.o(.bss.Motor_1st) for Motor_1st
    ramp.o(.text.RMP_vConfigureStartupAlgorithm) refers to ramp.o(.bss.RMP_tMotorData) for [Anonymous Symbol]
    ramp.o(.ARM.exidx.text.RMP_vConfigureStartupAlgorithm) refers to ramp.o(.text.RMP_vConfigureStartupAlgorithm) for [Anonymous Symbol]
    ramp.o(.text.RMP_ptGetRampDataPointer) refers to ramp.o(.bss.RMP_tMotorData) for [Anonymous Symbol]
    ramp.o(.ARM.exidx.text.RMP_ptGetRampDataPointer) refers to ramp.o(.text.RMP_ptGetRampDataPointer) for [Anonymous Symbol]
    statemachine.o(.text.M1_Fault_Fast) refers to statemachine.o(.text.M1_FaultDetection) for M1_FaultDetection
    statemachine.o(.ARM.exidx.text.M1_Fault_Fast) refers to statemachine.o(.text.M1_Fault_Fast) for [Anonymous Symbol]
    statemachine.o(.text.M1_Init_Fast) refers to user_function.o(.text.variable_reset) for variable_reset
    statemachine.o(.text.M1_Init_Fast) refers to statemachine.o(.text.M1_SwitchInitStop) for M1_SwitchInitStop
    statemachine.o(.text.M1_Init_Fast) refers to main.o(.bss.Motor_1st) for Motor_1st
    statemachine.o(.ARM.exidx.text.M1_Init_Fast) refers to statemachine.o(.text.M1_Init_Fast) for [Anonymous Symbol]
    statemachine.o(.text.M1_Stop_Fast) refers to statemachine.o(.text.M1_FaultDetection) for M1_FaultDetection
    statemachine.o(.text.M1_Stop_Fast) refers to statemachine.o(.text.M1_SwitchStopFault) for M1_SwitchStopFault
    statemachine.o(.text.M1_Stop_Fast) refers to main.o(.bss.Motor_1st) for Motor_1st
    statemachine.o(.text.M1_Stop_Fast) refers to main.o(.bss.M1FaultID) for M1FaultID
    statemachine.o(.ARM.exidx.text.M1_Stop_Fast) refers to statemachine.o(.text.M1_Stop_Fast) for [Anonymous Symbol]
    statemachine.o(.text.M1_Run_Fast) refers to statemachine.o(.text.M1_FaultDetection) for M1_FaultDetection
    statemachine.o(.text.M1_Run_Fast) refers to statemachine.o(.text.M1_SwitchRunFault) for M1_SwitchRunFault
    statemachine.o(.text.M1_Run_Fast) refers to statemachine.o(.bss.eM1_RunSubState) for eM1_RunSubState
    statemachine.o(.text.M1_Run_Fast) refers to statemachine.o(.rodata.s_M1_STATE_RUN_TABLE_FAST) for [Anonymous Symbol]
    statemachine.o(.text.M1_Run_Fast) refers to main.o(.bss.M1FaultID) for M1FaultID
    statemachine.o(.text.M1_Run_Fast) refers to statemachine.o(.bss.ucErrorCount) for [Anonymous Symbol]
    statemachine.o(.ARM.exidx.text.M1_Run_Fast) refers to statemachine.o(.text.M1_Run_Fast) for [Anonymous Symbol]
    statemachine.o(.text.M1_Fault_Slow) refers to user_function.o(.text.Var_Filt) for Var_Filt
    statemachine.o(.text.M1_Fault_Slow) refers to statemachine.o(.text.Fault_LED_Disp) for Fault_LED_Disp
    statemachine.o(.text.M1_Fault_Slow) refers to statemachine.o(.text.M1_SwitchFaultStop) for M1_SwitchFaultStop
    statemachine.o(.text.M1_Fault_Slow) refers to main.o(.bss.Motor_1st) for Motor_1st
    statemachine.o(.text.M1_Fault_Slow) refers to main.o(.bss.M1FaultID) for M1FaultID
    statemachine.o(.text.M1_Fault_Slow) refers to statemachine.o(.bss.M1_Fault_Slow.u16FaultTimeCnt) for [Anonymous Symbol]
    statemachine.o(.ARM.exidx.text.M1_Fault_Slow) refers to statemachine.o(.text.M1_Fault_Slow) for [Anonymous Symbol]
    statemachine.o(.text.M1_Init_Slow) refers to user_function.o(.text.Var_Filt) for Var_Filt
    statemachine.o(.text.M1_Init_Slow) refers to main.o(.bss.Motor_1st) for Motor_1st
    statemachine.o(.ARM.exidx.text.M1_Init_Slow) refers to statemachine.o(.text.M1_Init_Slow) for [Anonymous Symbol]
    statemachine.o(.text.M1_Stop_Slow) refers to siabs.o(.text) for abs
    statemachine.o(.text.M1_Stop_Slow) refers to statemachine.o(.text.M1_SwitchStopRun) for M1_SwitchStopRun
    statemachine.o(.text.M1_Stop_Slow) refers to user_function.o(.text.Var_Filt) for Var_Filt
    statemachine.o(.text.M1_Stop_Slow) refers to main.o(.bss.Motor_1st) for Motor_1st
    statemachine.o(.ARM.exidx.text.M1_Stop_Slow) refers to statemachine.o(.text.M1_Stop_Slow) for [Anonymous Symbol]
    statemachine.o(.text.M1_Run_Slow) refers to main.o(.bss.Motor_1st) for Motor_1st
    statemachine.o(.text.M1_Run_Slow) refers to statemachine.o(.bss.eM1_RunSubState) for eM1_RunSubState
    statemachine.o(.text.M1_Run_Slow) refers to statemachine.o(.rodata.s_M1_STATE_RUN_TABLE_SLOW) for [Anonymous Symbol]
    statemachine.o(.ARM.exidx.text.M1_Run_Slow) refers to statemachine.o(.text.M1_Run_Slow) for [Anonymous Symbol]
    statemachine.o(.text.M1_FaultDetection) refers to hal_tim.o(.text.TIM_ITConfig) for TIM_ITConfig
    statemachine.o(.text.M1_FaultDetection) refers to main.o(.bss.M1FaultID) for M1FaultID
    statemachine.o(.text.M1_FaultDetection) refers to main.o(.bss.Motor_1st) for Motor_1st
    statemachine.o(.text.M1_FaultDetection) refers to statemachine.o(.bss.M1_FaultDetection.u16OvCntr) for [Anonymous Symbol]
    statemachine.o(.text.M1_FaultDetection) refers to statemachine.o(.bss.M1_FaultDetection.u16UvCntr) for [Anonymous Symbol]
    statemachine.o(.text.M1_FaultDetection) refers to statemachine.o(.bss.Motor_u8UnderErrorTest) for [Anonymous Symbol]
    statemachine.o(.text.M1_FaultDetection) refers to main.o(.bss.M1FaultID_Record) for M1FaultID_Record
    statemachine.o(.ARM.exidx.text.M1_FaultDetection) refers to statemachine.o(.text.M1_FaultDetection) for [Anonymous Symbol]
    statemachine.o(.text.M1_SwitchInitStop) refers to statemachine.o(.data.eM1_MainState) for eM1_MainState
    statemachine.o(.ARM.exidx.text.M1_SwitchInitStop) refers to statemachine.o(.text.M1_SwitchInitStop) for [Anonymous Symbol]
    statemachine.o(.text.M1_SwitchStopFault) refers to statemachine.o(.data.eM1_MainState) for eM1_MainState
    statemachine.o(.ARM.exidx.text.M1_SwitchStopFault) refers to statemachine.o(.text.M1_SwitchStopFault) for [Anonymous Symbol]
    statemachine.o(.text.M1_SwitchRunFault) refers to user_function.o(.text.variable_reset) for variable_reset
    statemachine.o(.text.M1_SwitchRunFault) refers to statemachine.o(.data.eM1_MainState) for eM1_MainState
    statemachine.o(.text.M1_SwitchRunFault) refers to statemachine.o(.bss.eM1_RunSubState) for eM1_RunSubState
    statemachine.o(.text.M1_SwitchRunFault) refers to main.o(.bss.Motor_1st) for Motor_1st
    statemachine.o(.ARM.exidx.text.M1_SwitchRunFault) refers to statemachine.o(.text.M1_SwitchRunFault) for [Anonymous Symbol]
    statemachine.o(.text.Fault_LED_Disp) refers to main.o(.bss.M1FaultID) for M1FaultID
    statemachine.o(.text.Fault_LED_Disp) refers to statemachine.o(.bss.Fault_LED_Disp.u16FaultCnt) for [Anonymous Symbol]
    statemachine.o(.text.Fault_LED_Disp) refers to statemachine.o(.bss.Fault_LED_Disp.u16FaultTimeCnt) for [Anonymous Symbol]
    statemachine.o(.text.Fault_LED_Disp) refers to statemachine.o(.bss.Fault_LED_Disp.u16FalultNumber) for [Anonymous Symbol]
    statemachine.o(.ARM.exidx.text.Fault_LED_Disp) refers to statemachine.o(.text.Fault_LED_Disp) for [Anonymous Symbol]
    statemachine.o(.text.M1_SwitchFaultStop) refers to statemachine.o(.data.eM1_MainState) for eM1_MainState
    statemachine.o(.ARM.exidx.text.M1_SwitchFaultStop) refers to statemachine.o(.text.M1_SwitchFaultStop) for [Anonymous Symbol]
    statemachine.o(.text.M1_SwitchStopRun) refers to statemachine.o(.bss.eM1_RunSubState) for eM1_RunSubState
    statemachine.o(.text.M1_SwitchStopRun) refers to statemachine.o(.data.eM1_MainState) for eM1_MainState
    statemachine.o(.ARM.exidx.text.M1_SwitchStopRun) refers to statemachine.o(.text.M1_SwitchStopRun) for [Anonymous Symbol]
    statemachine.o(.text.M1_SwitchRunReadyWindDet) refers to statemachine.o(.bss.eM1_RunSubState) for eM1_RunSubState
    statemachine.o(.ARM.exidx.text.M1_SwitchRunReadyWindDet) refers to statemachine.o(.text.M1_SwitchRunReadyWindDet) for [Anonymous Symbol]
    statemachine.o(.text.M1_SwitchRunWindDetBrake) refers to statemachine.o(.bss.eM1_RunSubState) for eM1_RunSubState
    statemachine.o(.ARM.exidx.text.M1_SwitchRunWindDetBrake) refers to statemachine.o(.text.M1_SwitchRunWindDetBrake) for [Anonymous Symbol]
    statemachine.o(.text.M1_SwitchRunWindDetAlign) refers to statemachine.o(.bss.eM1_RunSubState) for eM1_RunSubState
    statemachine.o(.ARM.exidx.text.M1_SwitchRunWindDetAlign) refers to statemachine.o(.text.M1_SwitchRunWindDetAlign) for [Anonymous Symbol]
    statemachine.o(.text.M1_SwitchRunBrakeReady) refers to statemachine.o(.bss.eM1_RunSubState) for eM1_RunSubState
    statemachine.o(.ARM.exidx.text.M1_SwitchRunBrakeReady) refers to statemachine.o(.text.M1_SwitchRunBrakeReady) for [Anonymous Symbol]
    statemachine.o(.text.M1_SwitchRunWindDetReady) refers to statemachine.o(.bss.eM1_RunSubState) for eM1_RunSubState
    statemachine.o(.ARM.exidx.text.M1_SwitchRunWindDetReady) refers to statemachine.o(.text.M1_SwitchRunWindDetReady) for [Anonymous Symbol]
    statemachine.o(.text.M1_SwitchRunWindDetSpin) refers to main.o(.bss.Motor_1st) for Motor_1st
    statemachine.o(.text.M1_SwitchRunWindDetSpin) refers to statemachine.o(.bss.eM1_RunSubState) for eM1_RunSubState
    statemachine.o(.ARM.exidx.text.M1_SwitchRunWindDetSpin) refers to statemachine.o(.text.M1_SwitchRunWindDetSpin) for [Anonymous Symbol]
    statemachine.o(.text.PWM_Update) refers to statemachine.o(.text.MLIB_Mul_Q15) for MLIB_Mul_Q15
    statemachine.o(.ARM.exidx.text.PWM_Update) refers to statemachine.o(.text.PWM_Update) for [Anonymous Symbol]
    statemachine.o(.ARM.exidx.text.MLIB_Mul_Q15) refers to statemachine.o(.text.MLIB_Mul_Q15) for [Anonymous Symbol]
    statemachine.o(.text.MOT_vAngleSmoothSwitch) refers to dflti.o(.text) for __aeabi_i2d
    statemachine.o(.text.MOT_vAngleSmoothSwitch) refers to dcmple.o(.text) for __aeabi_dcmple
    statemachine.o(.text.MOT_vAngleSmoothSwitch) refers to dadd.o(.text) for __aeabi_dadd
    statemachine.o(.text.MOT_vAngleSmoothSwitch) refers to dfixi.o(.text) for __aeabi_d2iz
    statemachine.o(.text.MOT_vAngleSmoothSwitch) refers to dcmpge.o(.text) for __aeabi_dcmpge
    statemachine.o(.text.MOT_vAngleSmoothSwitch) refers to statemachine.o(.bss.Motor_s16DeltaAngle) for [Anonymous Symbol]
    statemachine.o(.text.MOT_vAngleSmoothSwitch) refers to main.o(.bss.Motor_1st) for Motor_1st
    statemachine.o(.ARM.exidx.text.MOT_vAngleSmoothSwitch) refers to statemachine.o(.text.MOT_vAngleSmoothSwitch) for [Anonymous Symbol]
    statemachine.o(.text.M1_RunCalibFast) refers to statemachine.o(.text.M1_SwitchRunCalibReady) for M1_SwitchRunCalibReady
    statemachine.o(.ARM.exidx.text.M1_RunCalibFast) refers to statemachine.o(.text.M1_RunCalibFast) for [Anonymous Symbol]
    statemachine.o(.text.M1_RunReadyFast) refers to siabs.o(.text) for abs
    statemachine.o(.text.M1_RunReadyFast) refers to winddetection.o(.text.WDN_vInitWindDetection) for WDN_vInitWindDetection
    statemachine.o(.text.M1_RunReadyFast) refers to statemachine.o(.text.M1_SwitchRunReadyWindDet) for M1_SwitchRunReadyWindDet
    statemachine.o(.text.M1_RunReadyFast) refers to mcflib.o(.text) for MCF_Svm_7
    statemachine.o(.text.M1_RunReadyFast) refers to statemachine.o(.text.PWM_Update) for PWM_Update
    statemachine.o(.text.M1_RunReadyFast) refers to main.o(.bss.Motor_1st) for Motor_1st
    statemachine.o(.ARM.exidx.text.M1_RunReadyFast) refers to statemachine.o(.text.M1_RunReadyFast) for [Anonymous Symbol]
    statemachine.o(.text.M1_RunWindDetFast) refers to siabs.o(.text) for abs
    statemachine.o(.text.M1_RunWindDetFast) refers to winddetection.o(.text.WDN_vWindDetection) for WDN_vWindDetection
    statemachine.o(.text.M1_RunWindDetFast) refers to statemachine.o(.text.M1_SwitchRunWindDetReady) for M1_SwitchRunWindDetReady
    statemachine.o(.text.M1_RunWindDetFast) refers to user_function.o(.text.Var_Filt) for Var_Filt
    statemachine.o(.text.M1_RunWindDetFast) refers to main.o(.bss.Motor_1st) for Motor_1st
    statemachine.o(.ARM.exidx.text.M1_RunWindDetFast) refers to statemachine.o(.text.M1_RunWindDetFast) for [Anonymous Symbol]
    statemachine.o(.text.M1_RunBrakeFast) refers to drv_pwm.o(.text.TIM_bBrakeUpdate) for TIM_bBrakeUpdate
    statemachine.o(.text.M1_RunBrakeFast) refers to siabs.o(.text) for abs
    statemachine.o(.text.M1_RunBrakeFast) refers to statemachine.o(.text.M1_SwitchRunWindDetAlign) for M1_SwitchRunWindDetAlign
    statemachine.o(.text.M1_RunBrakeFast) refers to main.o(.bss.Motor_1st) for Motor_1st
    statemachine.o(.ARM.exidx.text.M1_RunBrakeFast) refers to statemachine.o(.text.M1_RunBrakeFast) for [Anonymous Symbol]
    statemachine.o(.text.M1_RunAlignFast) refers to statemachine.o(.text.MCFLIB_Clark_Sat_S16) for MCFLIB_Clark_Sat_S16
    statemachine.o(.text.M1_RunAlignFast) refers to foc_pmsm.o(.text.FOC_Current_Controller) for FOC_Current_Controller
    statemachine.o(.text.M1_RunAlignFast) refers to mcflib.o(.text) for MCF_Svm_7
    statemachine.o(.text.M1_RunAlignFast) refers to statemachine.o(.text.PWM_Update) for PWM_Update
    statemachine.o(.text.M1_RunAlignFast) refers to main.o(.bss.Motor_1st) for Motor_1st
    statemachine.o(.ARM.exidx.text.M1_RunAlignFast) refers to statemachine.o(.text.M1_RunAlignFast) for [Anonymous Symbol]
    statemachine.o(.text.M1_RunStartupFast) refers to statemachine.o(.text.MCFLIB_Clark_Sat_S16) for MCFLIB_Clark_Sat_S16
    statemachine.o(.text.M1_RunStartupFast) refers to statemachine.o(.text.MLIB_Mul_Q15) for MLIB_Mul_Q15
    statemachine.o(.text.M1_RunStartupFast) refers to foc_pmsm.o(.text.FOC_Current_Controller) for FOC_Current_Controller
    statemachine.o(.text.M1_RunStartupFast) refers to mcflib.o(.text) for MCF_Svm_7
    statemachine.o(.text.M1_RunStartupFast) refers to statemachine.o(.text.PWM_Update) for PWM_Update
    statemachine.o(.text.M1_RunStartupFast) refers to mlib.o(.text) for MLIB_SMO
    statemachine.o(.text.M1_RunStartupFast) refers to main.o(.bss.Motor_1st) for Motor_1st
    statemachine.o(.text.M1_RunStartupFast) refers to statemachine.o(.bss.M1_RunStartupFast.s16PosElEst) for [Anonymous Symbol]
    statemachine.o(.text.M1_RunStartupFast) refers to statemachine.o(.bss.M1_RunStartupFast.sAngle_temp) for [Anonymous Symbol]
    statemachine.o(.text.M1_RunStartupFast) refers to statemachine.o(.bss.M1_RunStartupFast.s16ThetaErr) for [Anonymous Symbol]
    statemachine.o(.text.M1_RunStartupFast) refers to statemachine.o(.bss.s16PosElEst_SMO) for s16PosElEst_SMO
    statemachine.o(.text.M1_RunStartupFast) refers to statemachine.o(.bss.Motor_s16DeltaAngle) for [Anonymous Symbol]
    statemachine.o(.text.M1_RunStartupFast) refers to statemachine.o(.bss.Motor_s32DebugAngle1) for [Anonymous Symbol]
    statemachine.o(.text.M1_RunStartupFast) refers to statemachine.o(.bss.Motor_s32DebugAngle2) for [Anonymous Symbol]
    statemachine.o(.ARM.exidx.text.M1_RunStartupFast) refers to statemachine.o(.text.M1_RunStartupFast) for [Anonymous Symbol]
    statemachine.o(.text.M1_RunSpinFast) refers to statemachine.o(.text.MCFLIB_Clark_Sat_S16) for MCFLIB_Clark_Sat_S16
    statemachine.o(.text.M1_RunSpinFast) refers to foc_pmsm.o(.text.PMSM_Obs) for PMSM_Obs
    statemachine.o(.text.M1_RunSpinFast) refers to statemachine.o(.text.MOT_vAngleSmoothSwitch) for MOT_vAngleSmoothSwitch
    statemachine.o(.text.M1_RunSpinFast) refers to foc_pmsm.o(.text.FOC_Current_Controller) for FOC_Current_Controller
    statemachine.o(.text.M1_RunSpinFast) refers to mcflib.o(.text) for MCF_Svm_7
    statemachine.o(.text.M1_RunSpinFast) refers to statemachine.o(.text.PWM_Update) for PWM_Update
    statemachine.o(.text.M1_RunSpinFast) refers to main.o(.bss.Motor_1st) for Motor_1st
    statemachine.o(.ARM.exidx.text.M1_RunSpinFast) refers to statemachine.o(.text.M1_RunSpinFast) for [Anonymous Symbol]
    statemachine.o(.text.M1_RunFreewheelFast) refers to statemachine.o(.text.MCFLIB_Clark_Sat_S16) for MCFLIB_Clark_Sat_S16
    statemachine.o(.text.M1_RunFreewheelFast) refers to mcflib.o(.text) for MCF_Svm_7
    statemachine.o(.text.M1_RunFreewheelFast) refers to statemachine.o(.text.PWM_Update) for PWM_Update
    statemachine.o(.text.M1_RunFreewheelFast) refers to main.o(.bss.Motor_1st) for Motor_1st
    statemachine.o(.ARM.exidx.text.M1_RunFreewheelFast) refers to statemachine.o(.text.M1_RunFreewheelFast) for [Anonymous Symbol]
    statemachine.o(.text.M1_SwitchRunCalibReady) refers to main.o(.bss.Motor_1st) for Motor_1st
    statemachine.o(.text.M1_SwitchRunCalibReady) refers to statemachine.o(.bss.eM1_RunSubState) for eM1_RunSubState
    statemachine.o(.ARM.exidx.text.M1_SwitchRunCalibReady) refers to statemachine.o(.text.M1_SwitchRunCalibReady) for [Anonymous Symbol]
    statemachine.o(.ARM.exidx.text.MCFLIB_Clark_Sat_S16) refers to statemachine.o(.text.MCFLIB_Clark_Sat_S16) for [Anonymous Symbol]
    statemachine.o(.text.M1_RunCalibSlow) refers to user_function.o(.text.Var_Filt) for Var_Filt
    statemachine.o(.text.M1_RunCalibSlow) refers to main.o(.bss.Motor_1st) for Motor_1st
    statemachine.o(.ARM.exidx.text.M1_RunCalibSlow) refers to statemachine.o(.text.M1_RunCalibSlow) for [Anonymous Symbol]
    statemachine.o(.text.M1_RunReadySlow) refers to user_function.o(.text.Var_Filt) for Var_Filt
    statemachine.o(.text.M1_RunReadySlow) refers to main.o(.bss.Motor_1st) for Motor_1st
    statemachine.o(.ARM.exidx.text.M1_RunReadySlow) refers to statemachine.o(.text.M1_RunReadySlow) for [Anonymous Symbol]
    statemachine.o(.text.M1_RunWindDetSlow) refers to user_function.o(.text.Var_Filt) for Var_Filt
    statemachine.o(.text.M1_RunWindDetSlow) refers to main.o(.bss.Motor_1st) for Motor_1st
    statemachine.o(.ARM.exidx.text.M1_RunWindDetSlow) refers to statemachine.o(.text.M1_RunWindDetSlow) for [Anonymous Symbol]
    statemachine.o(.ARM.exidx.text.M1_RunBrakeSlow) refers to statemachine.o(.text.M1_RunBrakeSlow) for [Anonymous Symbol]
    statemachine.o(.text.M1_RunAlignSlow) refers to user_function.o(.text.Var_Filt) for Var_Filt
    statemachine.o(.text.M1_RunAlignSlow) refers to siabs.o(.text) for abs
    statemachine.o(.text.M1_RunAlignSlow) refers to statemachine.o(.text.M1_SwitchRunAlignReady) for M1_SwitchRunAlignReady
    statemachine.o(.text.M1_RunAlignSlow) refers to statemachine.o(.text.M1_SwitchRunAlignStartup) for M1_SwitchRunAlignStartup
    statemachine.o(.text.M1_RunAlignSlow) refers to main.o(.bss.Motor_1st) for Motor_1st
    statemachine.o(.ARM.exidx.text.M1_RunAlignSlow) refers to statemachine.o(.text.M1_RunAlignSlow) for [Anonymous Symbol]
    statemachine.o(.text.M1_RunStartupSlow) refers to statemachine.o(.text.MLIB_Conv_Q31s) for MLIB_Conv_Q31s
    statemachine.o(.text.M1_RunStartupSlow) refers to mlib.o(.text) for MLIB_Ramp_Q31
    statemachine.o(.text.M1_RunStartupSlow) refers to statemachine.o(.text.MLIB_Conv_Q15l) for MLIB_Conv_Q15l
    statemachine.o(.text.M1_RunStartupSlow) refers to user_function.o(.text.Var_Filt) for Var_Filt
    statemachine.o(.text.M1_RunStartupSlow) refers to siabs.o(.text) for abs
    statemachine.o(.text.M1_RunStartupSlow) refers to statemachine.o(.text.M1_SwitchRunStartupFreewheel) for M1_SwitchRunStartupFreewheel
    statemachine.o(.text.M1_RunStartupSlow) refers to statemachine.o(.text.M1_SwitchRunStartupSpin) for M1_SwitchRunStartupSpin
    statemachine.o(.text.M1_RunStartupSlow) refers to main.o(.bss.Motor_1st) for Motor_1st
    statemachine.o(.text.M1_RunStartupSlow) refers to main.o(.bss.M1FaultID) for M1FaultID
    statemachine.o(.text.M1_RunStartupSlow) refers to statemachine.o(.data.Motor_bStartClose) for [Anonymous Symbol]
    statemachine.o(.ARM.exidx.text.M1_RunStartupSlow) refers to statemachine.o(.text.M1_RunStartupSlow) for [Anonymous Symbol]
    statemachine.o(.text.M1_RunSpinSlow) refers to user_function.o(.text.Var_Filt) for Var_Filt
    statemachine.o(.text.M1_RunSpinSlow) refers to mlib.o(.text) for MLIB_PIControl_Q15
    statemachine.o(.text.M1_RunSpinSlow) refers to statemachine.o(.text.MLIB_Conv_Q31s) for MLIB_Conv_Q31s
    statemachine.o(.text.M1_RunSpinSlow) refers to statemachine.o(.text.MLIB_Conv_Q15l) for MLIB_Conv_Q15l
    statemachine.o(.text.M1_RunSpinSlow) refers to siabs.o(.text) for abs
    statemachine.o(.text.M1_RunSpinSlow) refers to statemachine.o(.text.M1_SwitchRunSpinFreewheel) for M1_SwitchRunSpinFreewheel
    statemachine.o(.text.M1_RunSpinSlow) refers to main.o(.bss.Motor_1st) for Motor_1st
    statemachine.o(.ARM.exidx.text.M1_RunSpinSlow) refers to statemachine.o(.text.M1_RunSpinSlow) for [Anonymous Symbol]
    statemachine.o(.text.M1_RunFreewheelSlow) refers to user_function.o(.text.Var_Filt) for Var_Filt
    statemachine.o(.text.M1_RunFreewheelSlow) refers to statemachine.o(.text.M1_SwitchRunFreewheelReady) for M1_SwitchRunFreewheelReady
    statemachine.o(.text.M1_RunFreewheelSlow) refers to siabs.o(.text) for abs
    statemachine.o(.text.M1_RunFreewheelSlow) refers to statemachine.o(.bss.M1_RunFreewheelSlow.u16FreeWheelTimeCnt) for [Anonymous Symbol]
    statemachine.o(.text.M1_RunFreewheelSlow) refers to main.o(.bss.Motor_1st) for Motor_1st
    statemachine.o(.ARM.exidx.text.M1_RunFreewheelSlow) refers to statemachine.o(.text.M1_RunFreewheelSlow) for [Anonymous Symbol]
    statemachine.o(.text.M1_SwitchRunAlignReady) refers to main.o(.bss.Motor_1st) for Motor_1st
    statemachine.o(.text.M1_SwitchRunAlignReady) refers to statemachine.o(.bss.eM1_RunSubState) for eM1_RunSubState
    statemachine.o(.ARM.exidx.text.M1_SwitchRunAlignReady) refers to statemachine.o(.text.M1_SwitchRunAlignReady) for [Anonymous Symbol]
    statemachine.o(.text.M1_SwitchRunAlignStartup) refers to main.o(.bss.Motor_1st) for Motor_1st
    statemachine.o(.text.M1_SwitchRunAlignStartup) refers to statemachine.o(.bss.eM1_RunSubState) for eM1_RunSubState
    statemachine.o(.ARM.exidx.text.M1_SwitchRunAlignStartup) refers to statemachine.o(.text.M1_SwitchRunAlignStartup) for [Anonymous Symbol]
    statemachine.o(.ARM.exidx.text.MLIB_Conv_Q31s) refers to statemachine.o(.text.MLIB_Conv_Q31s) for [Anonymous Symbol]
    statemachine.o(.ARM.exidx.text.MLIB_Conv_Q15l) refers to statemachine.o(.text.MLIB_Conv_Q15l) for [Anonymous Symbol]
    statemachine.o(.text.M1_SwitchRunStartupFreewheel) refers to statemachine.o(.bss.eM1_RunSubState) for eM1_RunSubState
    statemachine.o(.ARM.exidx.text.M1_SwitchRunStartupFreewheel) refers to statemachine.o(.text.M1_SwitchRunStartupFreewheel) for [Anonymous Symbol]
    statemachine.o(.text.M1_SwitchRunStartupSpin) refers to main.o(.bss.Motor_1st) for Motor_1st
    statemachine.o(.text.M1_SwitchRunStartupSpin) refers to statemachine.o(.bss.eM1_RunSubState) for eM1_RunSubState
    statemachine.o(.ARM.exidx.text.M1_SwitchRunStartupSpin) refers to statemachine.o(.text.M1_SwitchRunStartupSpin) for [Anonymous Symbol]
    statemachine.o(.text.M1_SwitchRunSpinFreewheel) refers to statemachine.o(.bss.eM1_RunSubState) for eM1_RunSubState
    statemachine.o(.ARM.exidx.text.M1_SwitchRunSpinFreewheel) refers to statemachine.o(.text.M1_SwitchRunSpinFreewheel) for [Anonymous Symbol]
    statemachine.o(.text.M1_SwitchRunFreewheelReady) refers to user_function.o(.text.variable_reset) for variable_reset
    statemachine.o(.text.M1_SwitchRunFreewheelReady) refers to main.o(.bss.Motor_1st) for Motor_1st
    statemachine.o(.text.M1_SwitchRunFreewheelReady) refers to statemachine.o(.bss.eM1_RunSubState) for eM1_RunSubState
    statemachine.o(.ARM.exidx.text.M1_SwitchRunFreewheelReady) refers to statemachine.o(.text.M1_SwitchRunFreewheelReady) for [Anonymous Symbol]
    statemachine.o(.rodata.s_STATE_FAST) refers to statemachine.o(.text.M1_Fault_Fast) for M1_Fault_Fast
    statemachine.o(.rodata.s_STATE_FAST) refers to statemachine.o(.text.M1_Init_Fast) for M1_Init_Fast
    statemachine.o(.rodata.s_STATE_FAST) refers to statemachine.o(.text.M1_Stop_Fast) for M1_Stop_Fast
    statemachine.o(.rodata.s_STATE_FAST) refers to statemachine.o(.text.M1_Run_Fast) for M1_Run_Fast
    statemachine.o(.rodata.s_STATE_SLOW) refers to statemachine.o(.text.M1_Fault_Slow) for M1_Fault_Slow
    statemachine.o(.rodata.s_STATE_SLOW) refers to statemachine.o(.text.M1_Init_Slow) for M1_Init_Slow
    statemachine.o(.rodata.s_STATE_SLOW) refers to statemachine.o(.text.M1_Stop_Slow) for M1_Stop_Slow
    statemachine.o(.rodata.s_STATE_SLOW) refers to statemachine.o(.text.M1_Run_Slow) for M1_Run_Slow
    statemachine.o(.rodata.s_M1_STATE_RUN_TABLE_FAST) refers to statemachine.o(.text.M1_RunCalibFast) for M1_RunCalibFast
    statemachine.o(.rodata.s_M1_STATE_RUN_TABLE_FAST) refers to statemachine.o(.text.M1_RunReadyFast) for M1_RunReadyFast
    statemachine.o(.rodata.s_M1_STATE_RUN_TABLE_FAST) refers to statemachine.o(.text.M1_RunWindDetFast) for M1_RunWindDetFast
    statemachine.o(.rodata.s_M1_STATE_RUN_TABLE_FAST) refers to statemachine.o(.text.M1_RunBrakeFast) for M1_RunBrakeFast
    statemachine.o(.rodata.s_M1_STATE_RUN_TABLE_FAST) refers to statemachine.o(.text.M1_RunAlignFast) for M1_RunAlignFast
    statemachine.o(.rodata.s_M1_STATE_RUN_TABLE_FAST) refers to statemachine.o(.text.M1_RunStartupFast) for M1_RunStartupFast
    statemachine.o(.rodata.s_M1_STATE_RUN_TABLE_FAST) refers to statemachine.o(.text.M1_RunSpinFast) for M1_RunSpinFast
    statemachine.o(.rodata.s_M1_STATE_RUN_TABLE_FAST) refers to statemachine.o(.text.M1_RunFreewheelFast) for M1_RunFreewheelFast
    statemachine.o(.rodata.s_M1_STATE_RUN_TABLE_SLOW) refers to statemachine.o(.text.M1_RunCalibSlow) for M1_RunCalibSlow
    statemachine.o(.rodata.s_M1_STATE_RUN_TABLE_SLOW) refers to statemachine.o(.text.M1_RunReadySlow) for M1_RunReadySlow
    statemachine.o(.rodata.s_M1_STATE_RUN_TABLE_SLOW) refers to statemachine.o(.text.M1_RunWindDetSlow) for M1_RunWindDetSlow
    statemachine.o(.rodata.s_M1_STATE_RUN_TABLE_SLOW) refers to statemachine.o(.text.M1_RunBrakeSlow) for M1_RunBrakeSlow
    statemachine.o(.rodata.s_M1_STATE_RUN_TABLE_SLOW) refers to statemachine.o(.text.M1_RunAlignSlow) for M1_RunAlignSlow
    statemachine.o(.rodata.s_M1_STATE_RUN_TABLE_SLOW) refers to statemachine.o(.text.M1_RunStartupSlow) for M1_RunStartupSlow
    statemachine.o(.rodata.s_M1_STATE_RUN_TABLE_SLOW) refers to statemachine.o(.text.M1_RunSpinSlow) for M1_RunSpinSlow
    statemachine.o(.rodata.s_M1_STATE_RUN_TABLE_SLOW) refers to statemachine.o(.text.M1_RunFreewheelSlow) for M1_RunFreewheelSlow
    winddetection.o(.text.WDN_vInitWindDetection) refers to winddetection.o(.text.MCFLIB_Clark_Sat_S16) for MCFLIB_Clark_Sat_S16
    winddetection.o(.text.WDN_vInitWindDetection) refers to mlib.o(.text) for MLIB_SinCos
    winddetection.o(.text.WDN_vInitWindDetection) refers to winddetection.o(.text.MCFLIB_Park_S16) for MCFLIB_Park_S16
    winddetection.o(.text.WDN_vInitWindDetection) refers to winddetection.o(.text.MCFLIB_InvPark_S16) for MCFLIB_InvPark_S16
    winddetection.o(.text.WDN_vInitWindDetection) refers to foc_pmsm.o(.text.DcBus_Ripple_suppress) for DcBus_Ripple_suppress
    winddetection.o(.text.WDN_vInitWindDetection) refers to mcflib.o(.text) for MCF_Svm_7
    winddetection.o(.text.WDN_vInitWindDetection) refers to statemachine.o(.text.PWM_Update) for PWM_Update
    winddetection.o(.text.WDN_vInitWindDetection) refers to main.o(.bss.Motor_1st) for Motor_1st
    winddetection.o(.text.WDN_vInitWindDetection) refers to winddetection.o(.bss.WDN_tWindDetectionData) for WDN_tWindDetectionData
    winddetection.o(.ARM.exidx.text.WDN_vInitWindDetection) refers to winddetection.o(.text.WDN_vInitWindDetection) for [Anonymous Symbol]
    winddetection.o(.ARM.exidx.text.MCFLIB_Clark_Sat_S16) refers to winddetection.o(.text.MCFLIB_Clark_Sat_S16) for [Anonymous Symbol]
    winddetection.o(.ARM.exidx.text.MCFLIB_Park_S16) refers to winddetection.o(.text.MCFLIB_Park_S16) for [Anonymous Symbol]
    winddetection.o(.ARM.exidx.text.MCFLIB_InvPark_S16) refers to winddetection.o(.text.MCFLIB_InvPark_S16) for [Anonymous Symbol]
    winddetection.o(.text.WDN_vWindDetection) refers to winddetection.o(.text.WDN_AlignInit) for WDN_AlignInit
    winddetection.o(.text.WDN_vWindDetection) refers to drv_pwm.o(.text.TIM_vBrakeInit) for TIM_vBrakeInit
    winddetection.o(.text.WDN_vWindDetection) refers to winddetection.o(.text.MCFLIB_Clark_Sat_S16) for MCFLIB_Clark_Sat_S16
    winddetection.o(.text.WDN_vWindDetection) refers to foc_pmsm.o(.text.PMSM_Obs) for PMSM_Obs
    winddetection.o(.text.WDN_vWindDetection) refers to winddetection.o(.text.WDN_vCalculateBemfPeak) for WDN_vCalculateBemfPeak
    winddetection.o(.text.WDN_vWindDetection) refers to foc_pmsm.o(.text.FOC_Current_Controller) for FOC_Current_Controller
    winddetection.o(.text.WDN_vWindDetection) refers to mcflib.o(.text) for MCF_Svm_7
    winddetection.o(.text.WDN_vWindDetection) refers to statemachine.o(.text.PWM_Update) for PWM_Update
    winddetection.o(.text.WDN_vWindDetection) refers to winddetection.o(.bss.WDN_tWindDetectionData) for WDN_tWindDetectionData
    winddetection.o(.text.WDN_vWindDetection) refers to winddetection.o(.data.WDN_tWindDetectionPara) for WDN_tWindDetectionPara
    winddetection.o(.text.WDN_vWindDetection) refers to main.o(.bss.Motor_1st) for Motor_1st
    winddetection.o(.text.WDN_vWindDetection) refers to winddetection.o(.bss.WDN_u8TestSec_5) for [Anonymous Symbol]
    winddetection.o(.text.WDN_vWindDetection) refers to winddetection.o(.bss.WDN_u8TestSec_4) for [Anonymous Symbol]
    winddetection.o(.text.WDN_vWindDetection) refers to winddetection.o(.bss.WDN_u8TestSec_3) for [Anonymous Symbol]
    winddetection.o(.text.WDN_vWindDetection) refers to winddetection.o(.bss.WDN_u8TestSec_2) for [Anonymous Symbol]
    winddetection.o(.text.WDN_vWindDetection) refers to winddetection.o(.bss.WDN_u8TestSec_1) for [Anonymous Symbol]
    winddetection.o(.ARM.exidx.text.WDN_vWindDetection) refers to winddetection.o(.text.WDN_vWindDetection) for [Anonymous Symbol]
    winddetection.o(.text.WDN_AlignInit) refers to statemachine.o(.text.M1_SwitchRunWindDetAlign) for M1_SwitchRunWindDetAlign
    winddetection.o(.ARM.exidx.text.WDN_AlignInit) refers to winddetection.o(.text.WDN_AlignInit) for [Anonymous Symbol]
    winddetection.o(.text.WDN_vCalculateBemfPeak) refers to main.o(.bss.Motor_1st) for Motor_1st
    winddetection.o(.text.WDN_vCalculateBemfPeak) refers to winddetection.o(.bss.WDN_tWindDetectionData) for WDN_tWindDetectionData
    winddetection.o(.ARM.exidx.text.WDN_vCalculateBemfPeak) refers to winddetection.o(.text.WDN_vCalculateBemfPeak) for [Anonymous Symbol]
    winddetection.o(.text.WDN_vConfigureStartupParam) refers to f2d.o(.text) for __aeabi_f2d
    winddetection.o(.text.WDN_vConfigureStartupParam) refers to ddiv.o(.text) for __aeabi_ddiv
    winddetection.o(.text.WDN_vConfigureStartupParam) refers to dcmpge.o(.text) for __aeabi_dcmpge
    winddetection.o(.text.WDN_vConfigureStartupParam) refers to dcmplt.o(.text) for __aeabi_dcmplt
    winddetection.o(.text.WDN_vConfigureStartupParam) refers to dmul.o(.text) for __aeabi_dmul
    winddetection.o(.text.WDN_vConfigureStartupParam) refers to dfixi.o(.text) for __aeabi_d2iz
    winddetection.o(.text.WDN_vConfigureStartupParam) refers to fmul.o(.text) for __aeabi_fmul
    winddetection.o(.text.WDN_vConfigureStartupParam) refers to ffixui.o(.text) for __aeabi_f2uiz
    winddetection.o(.text.WDN_vConfigureStartupParam) refers to main.o(.bss.Motor_1st) for Motor_1st
    winddetection.o(.ARM.exidx.text.WDN_vConfigureStartupParam) refers to winddetection.o(.text.WDN_vConfigureStartupParam) for [Anonymous Symbol]
    fshandle.o(.text.FHE_vHandleTask) refers to fscommon.o(.text.FCN_vGetPhaseVoltage) for FCN_vGetPhaseVoltage
    fshandle.o(.text.FHE_vHandleTask) refers to speedmonitor.o(.text.SMR_vSpeedEvaluation) for SMR_vSpeedEvaluation
    fshandle.o(.text.FHE_vHandleTask) refers to fsrotorlock.o(.text.FRK_vLockedRotorEvaluation) for FRK_vLockedRotorEvaluation
    fshandle.o(.text.FHE_vHandleTask) refers to fsphaseloss.o(.text.FPL_vPhaseLossEvaluation) for FPL_vPhaseLossEvaluation
    fshandle.o(.text.FHE_vHandleTask) refers to fshandle.o(.bss.FHE_eCurrentCallId) for FHE_eCurrentCallId
    fshandle.o(.ARM.exidx.text.FHE_vHandleTask) refers to fshandle.o(.text.FHE_vHandleTask) for [Anonymous Symbol]
    fshandle.o(.text.FHE_vFunctionSafetyCheck) refers to speedmonitor.o(.text.SMR_vCheckSpeedMonitor) for SMR_vCheckSpeedMonitor
    fshandle.o(.text.FHE_vFunctionSafetyCheck) refers to fsrotorlock.o(.text.FRK_vCheckMotorLock) for FRK_vCheckMotorLock
    fshandle.o(.text.FHE_vFunctionSafetyCheck) refers to fsphaseloss.o(.text.FPL_vPhaseLossCheck) for FPL_vPhaseLossCheck
    fshandle.o(.ARM.exidx.text.FHE_vFunctionSafetyCheck) refers to fshandle.o(.text.FHE_vFunctionSafetyCheck) for [Anonymous Symbol]
    fsmcu.o(.text.FMC_vSetSystickTimerRegisters) refers to drv_counter.o(.text.Drv_Tim16_Counter_Init) for Drv_Tim16_Counter_Init
    fsmcu.o(.ARM.exidx.text.FMC_vSetSystickTimerRegisters) refers to fsmcu.o(.text.FMC_vSetSystickTimerRegisters) for [Anonymous Symbol]
    fsmcu.o(.text.FMC_vEnDisAbleSystickTimer) refers to drv_counter.o(.text.Drv_Tim16_EnDisable) for Drv_Tim16_EnDisable
    fsmcu.o(.ARM.exidx.text.FMC_vEnDisAbleSystickTimer) refers to fsmcu.o(.text.FMC_vEnDisAbleSystickTimer) for [Anonymous Symbol]
    fsmcu.o(.text.FMC_u32GetSystickTimerCounter) refers to drv_counter.o(.text.Drv_u32GetTim16CountVal) for Drv_u32GetTim16CountVal
    fsmcu.o(.ARM.exidx.text.FMC_u32GetSystickTimerCounter) refers to fsmcu.o(.text.FMC_u32GetSystickTimerCounter) for [Anonymous Symbol]
    fsphaseloss.o(.text.FPL_vPhaselossprepareSamples) refers to current.o(.text.CUR_vGetThreePhaseCur) for CUR_vGetThreePhaseCur
    fsphaseloss.o(.text.FPL_vPhaselossprepareSamples) refers to fscommon.o(.text.FCN_vGetThreePhaseVol) for FCN_vGetThreePhaseVol
    fsphaseloss.o(.text.FPL_vPhaselossprepareSamples) refers to drv_div.o(.text.Division) for Division
    fsphaseloss.o(.text.FPL_vPhaselossprepareSamples) refers to fsphaseloss.o(.bss.FPL_tPhaseLossData) for [Anonymous Symbol]
    fsphaseloss.o(.text.FPL_vPhaselossprepareSamples) refers to statemachine.o(.data.eM1_MainState) for eM1_MainState
    fsphaseloss.o(.text.FPL_vPhaselossprepareSamples) refers to statemachine.o(.bss.eM1_RunSubState) for eM1_RunSubState
    fsphaseloss.o(.ARM.exidx.text.FPL_vPhaselossprepareSamples) refers to fsphaseloss.o(.text.FPL_vPhaselossprepareSamples) for [Anonymous Symbol]
    fsphaseloss.o(.text.FPL_vPhaseLossEvaluation) refers to fsphaseloss.o(.text.FPL_vPhaselossprepareSamples) for FPL_vPhaselossprepareSamples
    fsphaseloss.o(.text.FPL_vPhaseLossEvaluation) refers to current.o(.text.CUR_updatePhaseCurrentBuffer) for CUR_updatePhaseCurrentBuffer
    fsphaseloss.o(.text.FPL_vPhaseLossEvaluation) refers to statemachine.o(.data.eM1_MainState) for eM1_MainState
    fsphaseloss.o(.text.FPL_vPhaseLossEvaluation) refers to statemachine.o(.bss.eM1_RunSubState) for eM1_RunSubState
    fsphaseloss.o(.ARM.exidx.text.FPL_vPhaseLossEvaluation) refers to fsphaseloss.o(.text.FPL_vPhaseLossEvaluation) for [Anonymous Symbol]
    fsphaseloss.o(.text.RMP_vOpenPhaseCheckSimple) refers to fsphaseloss.o(.text.RMP_vOpenPhaseCheckSimpleImplementation) for RMP_vOpenPhaseCheckSimpleImplementation
    fsphaseloss.o(.text.RMP_vOpenPhaseCheckSimple) refers to statemachine.o(.data.eM1_MainState) for eM1_MainState
    fsphaseloss.o(.text.RMP_vOpenPhaseCheckSimple) refers to statemachine.o(.bss.eM1_RunSubState) for eM1_RunSubState
    fsphaseloss.o(.text.RMP_vOpenPhaseCheckSimple) refers to main.o(.bss.Motor_1st) for Motor_1st
    fsphaseloss.o(.ARM.exidx.text.RMP_vOpenPhaseCheckSimple) refers to fsphaseloss.o(.text.RMP_vOpenPhaseCheckSimple) for [Anonymous Symbol]
    fsphaseloss.o(.text.RMP_vOpenPhaseCheckSimpleImplementation) refers to current.o(.text.CUR_vGetThreePhaseRawValue) for CUR_vGetThreePhaseRawValue
    fsphaseloss.o(.text.RMP_vOpenPhaseCheckSimpleImplementation) refers to fsphaseloss.o(.bss.FPL_tPhaseLossDataSimple) for [Anonymous Symbol]
    fsphaseloss.o(.text.RMP_vOpenPhaseCheckSimpleImplementation) refers to main.o(.bss.Motor_1st) for Motor_1st
    fsphaseloss.o(.text.RMP_vOpenPhaseCheckSimpleImplementation) refers to fsphaseloss.o(.data.FPL_tPhaseLossParaSimple) for [Anonymous Symbol]
    fsphaseloss.o(.text.RMP_vOpenPhaseCheckSimpleImplementation) refers to fsphaseloss.o(.bss.RMP_tPhaseOpenPresentCount) for [Anonymous Symbol]
    fsphaseloss.o(.text.RMP_vOpenPhaseCheckSimpleImplementation) refers to main.o(.bss.M1FaultID) for M1FaultID
    fsphaseloss.o(.ARM.exidx.text.RMP_vOpenPhaseCheckSimpleImplementation) refers to fsphaseloss.o(.text.RMP_vOpenPhaseCheckSimpleImplementation) for [Anonymous Symbol]
    fsphaseloss.o(.text.RMP_vOpenPhaseCheckComplex) refers to fsclock.o(.text.STK_tGetSafeTime) for STK_tGetSafeTime
    fsphaseloss.o(.text.RMP_vOpenPhaseCheckComplex) refers to current.o(.text.CUR_vGetPhaseCurrentBufferSamples) for CUR_vGetPhaseCurrentBufferSamples
    fsphaseloss.o(.text.RMP_vOpenPhaseCheckComplex) refers to fsphaseloss.o(.text.FPL_vEvaluateStaticVector) for FPL_vEvaluateStaticVector
    fsphaseloss.o(.text.RMP_vOpenPhaseCheckComplex) refers to fsphaseloss.o(.text.FPL_vEvaluateCurrentAsymmetry) for FPL_vEvaluateCurrentAsymmetry
    fsphaseloss.o(.text.RMP_vOpenPhaseCheckComplex) refers to fsphaseloss.o(.text.FPL_vEvaluateVoltageAsymmetry) for FPL_vEvaluateVoltageAsymmetry
    fsphaseloss.o(.text.RMP_vOpenPhaseCheckComplex) refers to fsphaseloss.o(.bss.FPL_tPhaseLossData) for [Anonymous Symbol]
    fsphaseloss.o(.text.RMP_vOpenPhaseCheckComplex) refers to statemachine.o(.data.eM1_MainState) for eM1_MainState
    fsphaseloss.o(.text.RMP_vOpenPhaseCheckComplex) refers to statemachine.o(.bss.eM1_RunSubState) for eM1_RunSubState
    fsphaseloss.o(.text.RMP_vOpenPhaseCheckComplex) refers to fsphaseloss.o(.data.FPL_tPhaseLossPara) for [Anonymous Symbol]
    fsphaseloss.o(.ARM.exidx.text.RMP_vOpenPhaseCheckComplex) refers to fsphaseloss.o(.text.RMP_vOpenPhaseCheckComplex) for [Anonymous Symbol]
    fsphaseloss.o(.text.FPL_vEvaluateStaticVector) refers to current.o(.text.CUR_tGetPhaseCurrentCalPointer) for CUR_tGetPhaseCurrentCalPointer
    fsphaseloss.o(.text.FPL_vEvaluateStaticVector) refers to fsphaseloss.o(.bss.FPL_ptCurBufferCal) for [Anonymous Symbol]
    fsphaseloss.o(.ARM.exidx.text.FPL_vEvaluateStaticVector) refers to fsphaseloss.o(.text.FPL_vEvaluateStaticVector) for [Anonymous Symbol]
    fsphaseloss.o(.text.FPL_vEvaluateCurrentAsymmetry) refers to idiv.o(.text) for __aeabi_idiv
    fsphaseloss.o(.text.FPL_vEvaluateCurrentAsymmetry) refers to fsphaseloss.o(.data.FPL_tPhaseLossPara) for [Anonymous Symbol]
    fsphaseloss.o(.text.FPL_vEvaluateCurrentAsymmetry) refers to fsphaseloss.o(.bss.FPL_tPhaseLossData) for [Anonymous Symbol]
    fsphaseloss.o(.ARM.exidx.text.FPL_vEvaluateCurrentAsymmetry) refers to fsphaseloss.o(.text.FPL_vEvaluateCurrentAsymmetry) for [Anonymous Symbol]
    fsphaseloss.o(.text.FPL_vEvaluateVoltageAsymmetry) refers to idiv.o(.text) for __aeabi_idiv
    fsphaseloss.o(.text.FPL_vEvaluateVoltageAsymmetry) refers to fsphaseloss.o(.data.FPL_tPhaseLossPara) for [Anonymous Symbol]
    fsphaseloss.o(.text.FPL_vEvaluateVoltageAsymmetry) refers to fsphaseloss.o(.bss.FPL_tPhaseLossData) for [Anonymous Symbol]
    fsphaseloss.o(.ARM.exidx.text.FPL_vEvaluateVoltageAsymmetry) refers to fsphaseloss.o(.text.FPL_vEvaluateVoltageAsymmetry) for [Anonymous Symbol]
    fsphaseloss.o(.text.FPL_vPhaseLossCheck) refers to fsphaseloss.o(.text.RMP_vOpenPhaseCheckComplex) for RMP_vOpenPhaseCheckComplex
    fsphaseloss.o(.ARM.exidx.text.FPL_vPhaseLossCheck) refers to fsphaseloss.o(.text.FPL_vPhaseLossCheck) for [Anonymous Symbol]
    fsrotorlock.o(.text.FRK_vcalcCurrentVector) refers to current.o(.text.CUR_vGetThreePhaseCur) for CUR_vGetThreePhaseCur
    fsrotorlock.o(.text.FRK_vcalcCurrentVector) refers to drv_div.o(.text.Division) for Division
    fsrotorlock.o(.text.FRK_vcalcCurrentVector) refers to fsrotorlock.o(.bss.FRK_tDataRotorLock) for [Anonymous Symbol]
    fsrotorlock.o(.text.FRK_vcalcCurrentVector) refers to main.o(.bss.Motor_1st) for Motor_1st
    fsrotorlock.o(.ARM.exidx.text.FRK_vcalcCurrentVector) refers to fsrotorlock.o(.text.FRK_vcalcCurrentVector) for [Anonymous Symbol]
    fsrotorlock.o(.text.FRK_vcalcVoltageVector) refers to fscommon.o(.text.FCN_vGetThreePhaseVol) for FCN_vGetThreePhaseVol
    fsrotorlock.o(.text.FRK_vcalcVoltageVector) refers to drv_div.o(.text.Division) for Division
    fsrotorlock.o(.text.FRK_vcalcVoltageVector) refers to fsrotorlock.o(.bss.FRK_tDataRotorLock) for [Anonymous Symbol]
    fsrotorlock.o(.ARM.exidx.text.FRK_vcalcVoltageVector) refers to fsrotorlock.o(.text.FRK_vcalcVoltageVector) for [Anonymous Symbol]
    fsrotorlock.o(.text.FRK_vcalcBemf) refers to fsrotorlock.o(.text.FRK_vcalcCurrentVector) for FRK_vcalcCurrentVector
    fsrotorlock.o(.text.FRK_vcalcBemf) refers to fsrotorlock.o(.text.FRK_vcalcVoltageVector) for FRK_vcalcVoltageVector
    fsrotorlock.o(.text.FRK_vcalcBemf) refers to fsrotorlock.o(.text.MLIB_Mul_Q15) for MLIB_Mul_Q15
    fsrotorlock.o(.text.FRK_vcalcBemf) refers to drv_div.o(.text.Division) for Division
    fsrotorlock.o(.text.FRK_vcalcBemf) refers to statemachine.o(.data.eM1_MainState) for eM1_MainState
    fsrotorlock.o(.text.FRK_vcalcBemf) refers to statemachine.o(.bss.eM1_RunSubState) for eM1_RunSubState
    fsrotorlock.o(.text.FRK_vcalcBemf) refers to fsrotorlock.o(.bss.FRK_tDataRotorLock) for [Anonymous Symbol]
    fsrotorlock.o(.text.FRK_vcalcBemf) refers to fsrotorlock.o(.data.FRK_u32CurrentImpedance) for [Anonymous Symbol]
    fsrotorlock.o(.ARM.exidx.text.FRK_vcalcBemf) refers to fsrotorlock.o(.text.FRK_vcalcBemf) for [Anonymous Symbol]
    fsrotorlock.o(.ARM.exidx.text.MLIB_Mul_Q15) refers to fsrotorlock.o(.text.MLIB_Mul_Q15) for [Anonymous Symbol]
    fsrotorlock.o(.text.FRK_vLockedRotorEvaluation) refers to fsrotorlock.o(.text.FRK_vcalcBemf) for FRK_vcalcBemf
    fsrotorlock.o(.ARM.exidx.text.FRK_vLockedRotorEvaluation) refers to fsrotorlock.o(.text.FRK_vLockedRotorEvaluation) for [Anonymous Symbol]
    fsrotorlock.o(.text.FRK_vCheckMotorLockComplex) refers to fsclock.o(.text.STK_tGetSafeTime) for STK_tGetSafeTime
    fsrotorlock.o(.text.FRK_vCheckMotorLockComplex) refers to uidiv.o(.text) for __aeabi_uidiv
    fsrotorlock.o(.text.FRK_vCheckMotorLockComplex) refers to dflti.o(.text) for __aeabi_i2d
    fsrotorlock.o(.text.FRK_vCheckMotorLockComplex) refers to dmul.o(.text) for __aeabi_dmul
    fsrotorlock.o(.text.FRK_vCheckMotorLockComplex) refers to ddiv.o(.text) for __aeabi_ddiv
    fsrotorlock.o(.text.FRK_vCheckMotorLockComplex) refers to dfixi.o(.text) for __aeabi_d2iz
    fsrotorlock.o(.text.FRK_vCheckMotorLockComplex) refers to idiv.o(.text) for __aeabi_idiv
    fsrotorlock.o(.text.FRK_vCheckMotorLockComplex) refers to statemachine.o(.data.eM1_MainState) for eM1_MainState
    fsrotorlock.o(.text.FRK_vCheckMotorLockComplex) refers to statemachine.o(.bss.eM1_RunSubState) for eM1_RunSubState
    fsrotorlock.o(.text.FRK_vCheckMotorLockComplex) refers to fsrotorlock.o(.bss.FRK_tDataRotorLock) for [Anonymous Symbol]
    fsrotorlock.o(.text.FRK_vCheckMotorLockComplex) refers to main.o(.bss.Motor_1st) for Motor_1st
    fsrotorlock.o(.text.FRK_vCheckMotorLockComplex) refers to fsrotorlock.o(.data.FRK_tParaRotorLock) for [Anonymous Symbol]
    fsrotorlock.o(.ARM.exidx.text.FRK_vCheckMotorLockComplex) refers to fsrotorlock.o(.text.FRK_vCheckMotorLockComplex) for [Anonymous Symbol]
    fsrotorlock.o(.text.FRK_bCheckLockedRotorSimple) refers to drv_sqrt.o(.text.Hw_Sqrt) for Hw_Sqrt
    fsrotorlock.o(.text.FRK_bCheckLockedRotorSimple) refers to dflti.o(.text) for __aeabi_i2d
    fsrotorlock.o(.text.FRK_bCheckLockedRotorSimple) refers to dmul.o(.text) for __aeabi_dmul
    fsrotorlock.o(.text.FRK_bCheckLockedRotorSimple) refers to dfixi.o(.text) for __aeabi_d2iz
    fsrotorlock.o(.text.FRK_bCheckLockedRotorSimple) refers to drv_div.o(.text.Division) for Division
    fsrotorlock.o(.text.FRK_bCheckLockedRotorSimple) refers to statemachine.o(.data.eM1_MainState) for eM1_MainState
    fsrotorlock.o(.text.FRK_bCheckLockedRotorSimple) refers to statemachine.o(.bss.eM1_RunSubState) for eM1_RunSubState
    fsrotorlock.o(.text.FRK_bCheckLockedRotorSimple) refers to main.o(.bss.Motor_1st) for Motor_1st
    fsrotorlock.o(.text.FRK_bCheckLockedRotorSimple) refers to fsrotorlock.o(.bss.FRK_tSimpleRotorLockData) for FRK_tSimpleRotorLockData
    fsrotorlock.o(.text.FRK_bCheckLockedRotorSimple) refers to fsrotorlock.o(.data.FRK_tSimpleRotorLockPara) for FRK_tSimpleRotorLockPara
    fsrotorlock.o(.text.FRK_bCheckLockedRotorSimple) refers to main.o(.bss.M1FaultID) for M1FaultID
    fsrotorlock.o(.ARM.exidx.text.FRK_bCheckLockedRotorSimple) refers to fsrotorlock.o(.text.FRK_bCheckLockedRotorSimple) for [Anonymous Symbol]
    fsrotorlock.o(.text.FRK_vCheckMotorLock) refers to fsrotorlock.o(.text.FRK_vCheckMotorLockComplex) for FRK_vCheckMotorLockComplex
    fsrotorlock.o(.ARM.exidx.text.FRK_vCheckMotorLock) refers to fsrotorlock.o(.text.FRK_vCheckMotorLock) for [Anonymous Symbol]
    speedmonitor.o(.text.SMR_vInitModelCalculation) refers to speedmonitor.o(.bss.SMR_u32SpeedErrorCounter) for [Anonymous Symbol]
    speedmonitor.o(.text.SMR_vInitModelCalculation) refers to speedmonitor.o(.bss.SMR_tSpeedDiff) for [Anonymous Symbol]
    speedmonitor.o(.ARM.exidx.text.SMR_vInitModelCalculation) refers to speedmonitor.o(.text.SMR_vInitModelCalculation) for [Anonymous Symbol]
    speedmonitor.o(.text.SMR_vMotorModelCalculation) refers to filter.o(.text.FIR_vCalcFilter) for FIR_vCalcFilter
    speedmonitor.o(.text.SMR_vMotorModelCalculation) refers to math.o(.text.FPM_vCart2Pol) for FPM_vCart2Pol
    speedmonitor.o(.text.SMR_vMotorModelCalculation) refers to fsclock.o(.text.STK_tGetSafeTime) for STK_tGetSafeTime
    speedmonitor.o(.text.SMR_vMotorModelCalculation) refers to speedmonitor.o(.bss.SMR_tFluxAlfa) for [Anonymous Symbol]
    speedmonitor.o(.text.SMR_vMotorModelCalculation) refers to speedmonitor.o(.bss.SMR_tFluxBeta) for [Anonymous Symbol]
    speedmonitor.o(.text.SMR_vMotorModelCalculation) refers to speedmonitor.o(.data.SMR_tPT1CoefFlx) for [Anonymous Symbol]
    speedmonitor.o(.text.SMR_vMotorModelCalculation) refers to speedmonitor.o(.bss.SMR_tPsiCart) for [Anonymous Symbol]
    speedmonitor.o(.text.SMR_vMotorModelCalculation) refers to speedmonitor.o(.bss.SMR_tPsiPol) for [Anonymous Symbol]
    speedmonitor.o(.text.SMR_vMotorModelCalculation) refers to speedmonitor.o(.bss.SMR_tFluxVoltPsiCalc) for [Anonymous Symbol]
    speedmonitor.o(.text.SMR_vMotorModelCalculation) refers to speedmonitor.o(.bss.SMR_tFluxVoltPsiLast) for [Anonymous Symbol]
    speedmonitor.o(.text.SMR_vMotorModelCalculation) refers to speedmonitor.o(.bss.SMR_tStepDeltaPsiActu) for [Anonymous Symbol]
    speedmonitor.o(.text.SMR_vMotorModelCalculation) refers to speedmonitor.o(.data.SMR_tFltCoefDPsi) for [Anonymous Symbol]
    speedmonitor.o(.text.SMR_vMotorModelCalculation) refers to speedmonitor.o(.bss.SMR_tSpeedDiff) for [Anonymous Symbol]
    speedmonitor.o(.text.SMR_vMotorModelCalculation) refers to speedmonitor.o(.data.SMR_tSpeedDiffLimitPos) for [Anonymous Symbol]
    speedmonitor.o(.text.SMR_vMotorModelCalculation) refers to speedmonitor.o(.data.SMR_tSpeedDiffLimitNeg) for [Anonymous Symbol]
    speedmonitor.o(.text.SMR_vMotorModelCalculation) refers to speedmonitor.o(.bss.SMR_u32SpeedErrorCounter) for [Anonymous Symbol]
    speedmonitor.o(.text.SMR_vMotorModelCalculation) refers to speedmonitor.o(.bss.SMR_tActualTime) for [Anonymous Symbol]
    speedmonitor.o(.text.SMR_vMotorModelCalculation) refers to speedmonitor.o(.bss.SMR_tCycleStartTime) for [Anonymous Symbol]
    speedmonitor.o(.text.SMR_vMotorModelCalculation) refers to speedmonitor.o(.data.SMR_u32CycleTimeCheck) for [Anonymous Symbol]
    speedmonitor.o(.text.SMR_vMotorModelCalculation) refers to speedmonitor.o(.data.SMR_u32SpeedErrorLimit) for [Anonymous Symbol]
    speedmonitor.o(.ARM.exidx.text.SMR_vMotorModelCalculation) refers to speedmonitor.o(.text.SMR_vMotorModelCalculation) for [Anonymous Symbol]
    speedmonitor.o(.text.SMR_tgetPWMDutyValues) refers to hal_adc.o(.text.ADC_GetSoftwareStartConvStatus) for ADC_GetSoftwareStartConvStatus
    speedmonitor.o(.text.SMR_tgetPWMDutyValues) refers to uidiv.o(.text) for __aeabi_uidiv
    speedmonitor.o(.text.SMR_tgetPWMDutyValues) refers to speedmonitor.o(.bss.SMR_tgetPWMDutyValues.ptTemp) for [Anonymous Symbol]
    speedmonitor.o(.text.SMR_tgetPWMDutyValues) refers to speedmonitor.o(.bss.SMR_tFSVDataSecond) for [Anonymous Symbol]
    speedmonitor.o(.text.SMR_tgetPWMDutyValues) refers to speedmonitor.o(.bss.SMR_tgetPWMDutyValues.Temp) for [Anonymous Symbol]
    speedmonitor.o(.ARM.exidx.text.SMR_tgetPWMDutyValues) refers to speedmonitor.o(.text.SMR_tgetPWMDutyValues) for [Anonymous Symbol]
    speedmonitor.o(.text.SMR_vGetPhaseVoltage) refers to voltage.o(.text.VOL_tGetDclVolRawSampleQ) for VOL_tGetDclVolRawSampleQ
    speedmonitor.o(.text.SMR_vGetPhaseVoltage) refers to idiv.o(.text) for __aeabi_idiv
    speedmonitor.o(.text.SMR_vGetPhaseVoltage) refers to speedmonitor.o(.text.MLIB_Mul_Q15) for MLIB_Mul_Q15
    speedmonitor.o(.text.SMR_vGetPhaseVoltage) refers to main.o(.bss.Motor_1st) for Motor_1st
    speedmonitor.o(.text.SMR_vGetPhaseVoltage) refers to speedmonitor.o(.bss.SMR_tFSVDataSecond) for [Anonymous Symbol]
    speedmonitor.o(.text.SMR_vGetPhaseVoltage) refers to speedmonitor.o(.bss.SMR_u16TestValue) for [Anonymous Symbol]
    speedmonitor.o(.ARM.exidx.text.SMR_vGetPhaseVoltage) refers to speedmonitor.o(.text.SMR_vGetPhaseVoltage) for [Anonymous Symbol]
    speedmonitor.o(.ARM.exidx.text.MLIB_Mul_Q15) refers to speedmonitor.o(.text.MLIB_Mul_Q15) for [Anonymous Symbol]
    speedmonitor.o(.text.SMR_vIndependentMotorModelCalculation) refers to current.o(.text.CUR_vGetThreePhaseCur) for CUR_vGetThreePhaseCur
    speedmonitor.o(.text.SMR_vIndependentMotorModelCalculation) refers to fscommon.o(.text.FCN_vGetThreePhaseVol) for FCN_vGetThreePhaseVol
    speedmonitor.o(.text.SMR_vIndependentMotorModelCalculation) refers to transfer.o(.text.TRR_vClarkeTrans) for TRR_vClarkeTrans
    speedmonitor.o(.text.SMR_vIndependentMotorModelCalculation) refers to speedmonitor.o(.text.MLIB_Mul_Q15) for MLIB_Mul_Q15
    speedmonitor.o(.text.SMR_vIndependentMotorModelCalculation) refers to filter.o(.text.FIR_vCalcFilter) for FIR_vCalcFilter
    speedmonitor.o(.text.SMR_vIndependentMotorModelCalculation) refers to math.o(.text.FPM_vCart2Pol) for FPM_vCart2Pol
    speedmonitor.o(.text.SMR_vIndependentMotorModelCalculation) refers to dflti.o(.text) for __aeabi_i2d
    speedmonitor.o(.text.SMR_vIndependentMotorModelCalculation) refers to ddiv.o(.text) for __aeabi_ddiv
    speedmonitor.o(.text.SMR_vIndependentMotorModelCalculation) refers to dcmpge.o(.text) for __aeabi_dcmpge
    speedmonitor.o(.text.SMR_vIndependentMotorModelCalculation) refers to dcmplt.o(.text) for __aeabi_dcmplt
    speedmonitor.o(.text.SMR_vIndependentMotorModelCalculation) refers to dmul.o(.text) for __aeabi_dmul
    speedmonitor.o(.text.SMR_vIndependentMotorModelCalculation) refers to dfixi.o(.text) for __aeabi_d2iz
    speedmonitor.o(.text.SMR_vIndependentMotorModelCalculation) refers to speedmonitor.o(.bss.SMR_tFSVDataSecond) for [Anonymous Symbol]
    speedmonitor.o(.text.SMR_vIndependentMotorModelCalculation) refers to speedmonitor.o(.data.SMR_tFilterCoeEmf) for [Anonymous Symbol]
    speedmonitor.o(.text.SMR_vIndependentMotorModelCalculation) refers to speedmonitor.o(.bss.SMR_s32Re) for [Anonymous Symbol]
    speedmonitor.o(.text.SMR_vIndependentMotorModelCalculation) refers to speedmonitor.o(.bss.SMR_s32Im) for [Anonymous Symbol]
    speedmonitor.o(.text.SMR_vIndependentMotorModelCalculation) refers to speedmonitor.o(.data.SMR_tFilterCoeSpd) for [Anonymous Symbol]
    speedmonitor.o(.ARM.exidx.text.SMR_vIndependentMotorModelCalculation) refers to speedmonitor.o(.text.SMR_vIndependentMotorModelCalculation) for [Anonymous Symbol]
    speedmonitor.o(.text.SMR_tGetFSVData) refers to speedmonitor.o(.bss.SMR_tFSVDataSecond) for [Anonymous Symbol]
    speedmonitor.o(.ARM.exidx.text.SMR_tGetFSVData) refers to speedmonitor.o(.text.SMR_tGetFSVData) for [Anonymous Symbol]
    speedmonitor.o(.text.SMR_vSpeedEvaluationSimple) refers to dflti.o(.text) for __aeabi_i2d
    speedmonitor.o(.text.SMR_vSpeedEvaluationSimple) refers to dmul.o(.text) for __aeabi_dmul
    speedmonitor.o(.text.SMR_vSpeedEvaluationSimple) refers to ddiv.o(.text) for __aeabi_ddiv
    speedmonitor.o(.text.SMR_vSpeedEvaluationSimple) refers to dfixi.o(.text) for __aeabi_d2iz
    speedmonitor.o(.text.SMR_vSpeedEvaluationSimple) refers to idiv.o(.text) for __aeabi_idiv
    speedmonitor.o(.text.SMR_vSpeedEvaluationSimple) refers to speedmonitor.o(.text.SMR_vMotorModelCalculation) for SMR_vMotorModelCalculation
    speedmonitor.o(.text.SMR_vSpeedEvaluationSimple) refers to statemachine.o(.data.eM1_MainState) for eM1_MainState
    speedmonitor.o(.text.SMR_vSpeedEvaluationSimple) refers to statemachine.o(.bss.eM1_RunSubState) for eM1_RunSubState
    speedmonitor.o(.text.SMR_vSpeedEvaluationSimple) refers to main.o(.bss.Motor_1st) for Motor_1st
    speedmonitor.o(.text.SMR_vSpeedEvaluationSimple) refers to speedmonitor.o(.bss.BackupModel) for [Anonymous Symbol]
    speedmonitor.o(.ARM.exidx.text.SMR_vSpeedEvaluationSimple) refers to speedmonitor.o(.text.SMR_vSpeedEvaluationSimple) for [Anonymous Symbol]
    speedmonitor.o(.text.SMR_vSpeedEvaluationComplex) refers to speedmonitor.o(.text.SMR_vIndependentMotorModelCalculation) for SMR_vIndependentMotorModelCalculation
    speedmonitor.o(.text.SMR_vSpeedEvaluationComplex) refers to statemachine.o(.data.eM1_MainState) for eM1_MainState
    speedmonitor.o(.text.SMR_vSpeedEvaluationComplex) refers to statemachine.o(.bss.eM1_RunSubState) for eM1_RunSubState
    speedmonitor.o(.ARM.exidx.text.SMR_vSpeedEvaluationComplex) refers to speedmonitor.o(.text.SMR_vSpeedEvaluationComplex) for [Anonymous Symbol]
    speedmonitor.o(.text.SMR_vSpeedEvaluation) refers to speedmonitor.o(.text.SMR_vSpeedEvaluationComplex) for SMR_vSpeedEvaluationComplex
    speedmonitor.o(.ARM.exidx.text.SMR_vSpeedEvaluation) refers to speedmonitor.o(.text.SMR_vSpeedEvaluation) for [Anonymous Symbol]
    speedmonitor.o(.text.SMR_vCheckSpeedMonitorImplement) refers to fsclock.o(.text.STK_tGetSafeTime) for STK_tGetSafeTime
    speedmonitor.o(.text.SMR_vCheckSpeedMonitorImplement) refers to idiv.o(.text) for __aeabi_idiv
    speedmonitor.o(.text.SMR_vCheckSpeedMonitorImplement) refers to statemachine.o(.data.eM1_MainState) for eM1_MainState
    speedmonitor.o(.text.SMR_vCheckSpeedMonitorImplement) refers to statemachine.o(.bss.eM1_RunSubState) for eM1_RunSubState
    speedmonitor.o(.text.SMR_vCheckSpeedMonitorImplement) refers to speedmonitor.o(.bss.SMR_tFSVDataSecond) for [Anonymous Symbol]
    speedmonitor.o(.text.SMR_vCheckSpeedMonitorImplement) refers to speedmonitor.o(.bss.SMR_s32DeltaTime) for [Anonymous Symbol]
    speedmonitor.o(.text.SMR_vCheckSpeedMonitorImplement) refers to main.o(.bss.Motor_1st) for Motor_1st
    speedmonitor.o(.text.SMR_vCheckSpeedMonitorImplement) refers to speedmonitor.o(.data.SMR_tFSVParaSecond) for [Anonymous Symbol]
    speedmonitor.o(.ARM.exidx.text.SMR_vCheckSpeedMonitorImplement) refers to speedmonitor.o(.text.SMR_vCheckSpeedMonitorImplement) for [Anonymous Symbol]
    speedmonitor.o(.text.SMR_vCheckSpeedMonitor) refers to speedmonitor.o(.text.SMR_vCheckSpeedMonitorImplement) for SMR_vCheckSpeedMonitorImplement
    speedmonitor.o(.ARM.exidx.text.SMR_vCheckSpeedMonitor) refers to speedmonitor.o(.text.SMR_vCheckSpeedMonitor) for [Anonymous Symbol]
    fsclock.o(.text.STK_vTriggerSafeTime) refers to fsmcu.o(.text.FMC_u32GetSystickTimerCounter) for FMC_u32GetSystickTimerCounter
    fsclock.o(.text.STK_vTriggerSafeTime) refers to fsclock.o(.bss.STK_u32SystickOld) for [Anonymous Symbol]
    fsclock.o(.text.STK_vTriggerSafeTime) refers to fsclock.o(.bss.STK_u32SystickDifference) for [Anonymous Symbol]
    fsclock.o(.text.STK_vTriggerSafeTime) refers to fsclock.o(.data.STK_u32WaitSystemInit) for [Anonymous Symbol]
    fsclock.o(.text.STK_vTriggerSafeTime) refers to fsclock.o(.bss.STK_u32TickTimeErrorCounter) for [Anonymous Symbol]
    fsclock.o(.text.STK_vTriggerSafeTime) refers to fsclock.o(.data.STK_u32NbrOfTicksErrorCheck) for [Anonymous Symbol]
    fsclock.o(.text.STK_vTriggerSafeTime) refers to fsclock.o(.bss.STK_tSafeTime) for [Anonymous Symbol]
    fsclock.o(.ARM.exidx.text.STK_vTriggerSafeTime) refers to fsclock.o(.text.STK_vTriggerSafeTime) for [Anonymous Symbol]
    fsclock.o(.text.STK_tGetSafeTime) refers to fsclock.o(.bss.STK_tSafeTime) for [Anonymous Symbol]
    fsclock.o(.ARM.exidx.text.STK_tGetSafeTime) refers to fsclock.o(.text.STK_tGetSafeTime) for [Anonymous Symbol]
    fsclock.o(.text.FCK_vInitSafeTime) refers to fsmcu.o(.text.FMC_vSetSystickTimerRegisters) for FMC_vSetSystickTimerRegisters
    fsclock.o(.text.FCK_vInitSafeTime) refers to fsclock.o(.data.STK_u32WaitSystemInit) for [Anonymous Symbol]
    fsclock.o(.text.FCK_vInitSafeTime) refers to fsclock.o(.data.STK_u32NbrOfTicksErrorCheck) for [Anonymous Symbol]
    fsclock.o(.ARM.exidx.text.FCK_vInitSafeTime) refers to fsclock.o(.text.FCK_vInitSafeTime) for [Anonymous Symbol]
    fscommon.o(.text.FCN_vGetPhaseVoltage) refers to voltage.o(.text.VOL_tGetDclVolRawSampleQ) for VOL_tGetDclVolRawSampleQ
    fscommon.o(.text.FCN_vGetPhaseVoltage) refers to drv_div.o(.text.Division) for Division
    fscommon.o(.text.FCN_vGetPhaseVoltage) refers to fscommon.o(.text.MLIB_Mul_Q15) for MLIB_Mul_Q15
    fscommon.o(.text.FCN_vGetPhaseVoltage) refers to main.o(.bss.Motor_1st) for Motor_1st
    fscommon.o(.text.FCN_vGetPhaseVoltage) refers to fscommon.o(.bss.FCN_tThreePhaseVolCal) for [Anonymous Symbol]
    fscommon.o(.text.FCN_vGetPhaseVoltage) refers to fscommon.o(.bss.FCN_tThreePhaseVol) for [Anonymous Symbol]
    fscommon.o(.ARM.exidx.text.FCN_vGetPhaseVoltage) refers to fscommon.o(.text.FCN_vGetPhaseVoltage) for [Anonymous Symbol]
    fscommon.o(.ARM.exidx.text.MLIB_Mul_Q15) refers to fscommon.o(.text.MLIB_Mul_Q15) for [Anonymous Symbol]
    fscommon.o(.text.FCN_vGetThreePhaseVol) refers to fscommon.o(.bss.FCN_tThreePhaseVol) for [Anonymous Symbol]
    fscommon.o(.ARM.exidx.text.FCN_vGetThreePhaseVol) refers to fscommon.o(.text.FCN_vGetThreePhaseVol) for [Anonymous Symbol]
    common_1.o(.text.COM_vCheckOverThresholdLimit) refers to math.o(.text.QMATH_max) for QMATH_max
    common_1.o(.ARM.exidx.text.COM_vCheckOverThresholdLimit) refers to common_1.o(.text.COM_vCheckOverThresholdLimit) for [Anonymous Symbol]
    current.o(.text.CUR_tGetCurVal) refers to current.o(.bss.CUR_tDataBrd1) for [Anonymous Symbol]
    current.o(.ARM.exidx.text.CUR_tGetCurVal) refers to current.o(.text.CUR_tGetCurVal) for [Anonymous Symbol]
    current.o(.text.CUR_bInitOffsetCurrentVoltage) refers to fsclock.o(.text.STK_tGetSafeTime) for STK_tGetSafeTime
    current.o(.text.CUR_bInitOffsetCurrentVoltage) refers to idiv.o(.text) for __aeabi_idiv
    current.o(.text.CUR_bInitOffsetCurrentVoltage) refers to current.o(.data.CUR_ucOffsetSampleCounter) for [Anonymous Symbol]
    current.o(.text.CUR_bInitOffsetCurrentVoltage) refers to current.o(.bss.CUR_tDataBrd1) for [Anonymous Symbol]
    current.o(.ARM.exidx.text.CUR_bInitOffsetCurrentVoltage) refers to current.o(.text.CUR_bInitOffsetCurrentVoltage) for [Anonymous Symbol]
    current.o(.text.CUR_bCheckMotCurrentMeasValues) refers to fsclock.o(.text.STK_tGetSafeTime) for STK_tGetSafeTime
    current.o(.text.CUR_bCheckMotCurrentMeasValues) refers to current.o(.text.CUR_vCheckMotCurrentMeasOffsetVoltage) for CUR_vCheckMotCurrentMeasOffsetVoltage
    current.o(.text.CUR_bCheckMotCurrentMeasValues) refers to current.o(.text.CUR_vCalcCurrentQuantities) for CUR_vCalcCurrentQuantities
    current.o(.text.CUR_bCheckMotCurrentMeasValues) refers to current.o(.bss.CUR_tLastTimeStamp) for [Anonymous Symbol]
    current.o(.ARM.exidx.text.CUR_bCheckMotCurrentMeasValues) refers to current.o(.text.CUR_bCheckMotCurrentMeasValues) for [Anonymous Symbol]
    current.o(.text.CUR_vCheckMotCurrentMeasOffsetVoltage) refers to fsclock.o(.text.STK_tGetSafeTime) for STK_tGetSafeTime
    current.o(.text.CUR_vCheckMotCurrentMeasOffsetVoltage) refers to current.o(.text.CUR_vResetCurrentValues) for CUR_vResetCurrentValues
    current.o(.text.CUR_vCheckMotCurrentMeasOffsetVoltage) refers to filter.o(.text.FIR_vCalcFilter) for FIR_vCalcFilter
    current.o(.text.CUR_vCheckMotCurrentMeasOffsetVoltage) refers to current.o(.bss.CUR_tDataBrd1) for [Anonymous Symbol]
    current.o(.text.CUR_vCheckMotCurrentMeasOffsetVoltage) refers to current.o(.data.CUR_tFilterCoefOffset) for [Anonymous Symbol]
    current.o(.ARM.exidx.text.CUR_vCheckMotCurrentMeasOffsetVoltage) refers to current.o(.text.CUR_vCheckMotCurrentMeasOffsetVoltage) for [Anonymous Symbol]
    current.o(.text.CUR_vCalcCurrentQuantities) refers to current.o(.text.MCFLIB_Clark_Sat_S16) for MCFLIB_Clark_Sat_S16
    current.o(.text.CUR_vCalcCurrentQuantities) refers to math.o(.text.FPM_ulSqrt) for FPM_ulSqrt
    current.o(.text.CUR_vCalcCurrentQuantities) refers to filter.o(.text.FIR_vCalcFilter) for FIR_vCalcFilter
    current.o(.text.CUR_vCalcCurrentQuantities) refers to current.o(.bss.CUR_tDataBrd1) for [Anonymous Symbol]
    current.o(.text.CUR_vCalcCurrentQuantities) refers to main.o(.bss.Motor_1st) for Motor_1st
    current.o(.text.CUR_vCalcCurrentQuantities) refers to current.o(.data.CUR_tFilterCoefImax) for [Anonymous Symbol]
    current.o(.text.CUR_vCalcCurrentQuantities) refers to current.o(.data.CUR_tFilterCoefIq) for [Anonymous Symbol]
    current.o(.ARM.exidx.text.CUR_vCalcCurrentQuantities) refers to current.o(.text.CUR_vCalcCurrentQuantities) for [Anonymous Symbol]
    current.o(.text.CUR_vSetPositioningCurr) refers to current.o(.text.CUR_tGetCurVal) for CUR_tGetCurVal
    current.o(.text.CUR_vSetPositioningCurr) refers to current.o(.bss.CUR_tDataBrd1) for [Anonymous Symbol]
    current.o(.ARM.exidx.text.CUR_vSetPositioningCurr) refers to current.o(.text.CUR_vSetPositioningCurr) for [Anonymous Symbol]
    current.o(.text.CUR_vFetchAndCalcPhaseCurrents) refers to current.o(.rodata.CUR_tParaBridge1) for [Anonymous Symbol]
    current.o(.text.CUR_vFetchAndCalcPhaseCurrents) refers to current.o(.bss.CUR_tDataBrd1) for [Anonymous Symbol]
    current.o(.ARM.exidx.text.CUR_vFetchAndCalcPhaseCurrents) refers to current.o(.text.CUR_vFetchAndCalcPhaseCurrents) for [Anonymous Symbol]
    current.o(.text.CUR_vGetThreePhaseCur) refers to main.o(.bss.Motor_1st) for Motor_1st
    current.o(.ARM.exidx.text.CUR_vGetThreePhaseCur) refers to current.o(.text.CUR_vGetThreePhaseCur) for [Anonymous Symbol]
    current.o(.text.CUR_vSetOffsetMeasState) refers to current.o(.bss.CUR_tDataBrd1) for [Anonymous Symbol]
    current.o(.ARM.exidx.text.CUR_vSetOffsetMeasState) refers to current.o(.text.CUR_vSetOffsetMeasState) for [Anonymous Symbol]
    current.o(.text.CUR_ptGetOverCurCallBackFunc) refers to current.o(.text.CUR_vHandleOverCurIntMeasChanM1) for CUR_vHandleOverCurIntMeasChanM1
    current.o(.ARM.exidx.text.CUR_ptGetOverCurCallBackFunc) refers to current.o(.text.CUR_ptGetOverCurCallBackFunc) for [Anonymous Symbol]
    current.o(.text.CUR_vHandleOverCurIntMeasChanM1) refers to current.o(.bss.CUR_tDataBrd1) for [Anonymous Symbol]
    current.o(.ARM.exidx.text.CUR_vHandleOverCurIntMeasChanM1) refers to current.o(.text.CUR_vHandleOverCurIntMeasChanM1) for [Anonymous Symbol]
    current.o(.ARM.exidx.text.CUR_vGetThreePhaseRawValue) refers to current.o(.text.CUR_vGetThreePhaseRawValue) for [Anonymous Symbol]
    current.o(.ARM.exidx.text.CUR_vCurRMSFilterInit) refers to current.o(.text.CUR_vCurRMSFilterInit) for [Anonymous Symbol]
    current.o(.text.CUR_vCalThreePhaseCurRMS) refers to current.o(.text.CUR_vGetThreePhaseRawValue) for CUR_vGetThreePhaseRawValue
    current.o(.text.CUR_vCalThreePhaseCurRMS) refers to drv_div.o(.text.Division) for Division
    current.o(.text.CUR_vCalThreePhaseCurRMS) refers to drv_sqrt.o(.text.Hw_Sqrt) for Hw_Sqrt
    current.o(.text.CUR_vCalThreePhaseCurRMS) refers to filter.o(.text.FIR_vCalcFilter) for FIR_vCalcFilter
    current.o(.text.CUR_vCalThreePhaseCurRMS) refers to current.o(.bss.CUR_tThreePhaseCurRms) for [Anonymous Symbol]
    current.o(.text.CUR_vCalThreePhaseCurRMS) refers to current.o(.data.CUR_tFilterCoefCurRMS) for [Anonymous Symbol]
    current.o(.ARM.exidx.text.CUR_vCalThreePhaseCurRMS) refers to current.o(.text.CUR_vCalThreePhaseCurRMS) for [Anonymous Symbol]
    current.o(.text.CUR_u16GetThreePhaseRMS) refers to current.o(.bss.CUR_tThreePhaseCurRms) for [Anonymous Symbol]
    current.o(.ARM.exidx.text.CUR_u16GetThreePhaseRMS) refers to current.o(.text.CUR_u16GetThreePhaseRMS) for [Anonymous Symbol]
    current.o(.text.CUR_updatePhaseCurrentBuffer) refers to drv_div.o(.text.Division) for Division
    current.o(.text.CUR_updatePhaseCurrentBuffer) refers to main.o(.bss.Motor_1st) for Motor_1st
    current.o(.text.CUR_updatePhaseCurrentBuffer) refers to current.o(.bss.CUR_tCurBufferCal) for [Anonymous Symbol]
    current.o(.text.CUR_updatePhaseCurrentBuffer) refers to current.o(.bss.testA_P) for [Anonymous Symbol]
    current.o(.text.CUR_updatePhaseCurrentBuffer) refers to current.o(.bss.testA_N) for [Anonymous Symbol]
    current.o(.text.CUR_updatePhaseCurrentBuffer) refers to current.o(.bss.testB_P) for [Anonymous Symbol]
    current.o(.text.CUR_updatePhaseCurrentBuffer) refers to current.o(.bss.testB_N) for [Anonymous Symbol]
    current.o(.text.CUR_updatePhaseCurrentBuffer) refers to current.o(.bss.testC_P) for [Anonymous Symbol]
    current.o(.text.CUR_updatePhaseCurrentBuffer) refers to current.o(.bss.testC_N) for [Anonymous Symbol]
    current.o(.ARM.exidx.text.CUR_updatePhaseCurrentBuffer) refers to current.o(.text.CUR_updatePhaseCurrentBuffer) for [Anonymous Symbol]
    current.o(.text.CUR_vGetPhaseCurrentBufferSamples) refers to uidiv.o(.text) for __aeabi_uidiv
    current.o(.text.CUR_vGetPhaseCurrentBufferSamples) refers to current.o(.bss.CUR_tCurBufferCal) for [Anonymous Symbol]
    current.o(.ARM.exidx.text.CUR_vGetPhaseCurrentBufferSamples) refers to current.o(.text.CUR_vGetPhaseCurrentBufferSamples) for [Anonymous Symbol]
    current.o(.text.CUR_tGetPhaseCurrentCalPointer) refers to current.o(.bss.CUR_tCurBufferCal) for [Anonymous Symbol]
    current.o(.ARM.exidx.text.CUR_tGetPhaseCurrentCalPointer) refers to current.o(.text.CUR_tGetPhaseCurrentCalPointer) for [Anonymous Symbol]
    current.o(.text.CUR_vResetCurrentValues) refers to current.o(.bss.CUR_tDataBrd1) for [Anonymous Symbol]
    current.o(.ARM.exidx.text.CUR_vResetCurrentValues) refers to current.o(.text.CUR_vResetCurrentValues) for [Anonymous Symbol]
    current.o(.ARM.exidx.text.MCFLIB_Clark_Sat_S16) refers to current.o(.text.MCFLIB_Clark_Sat_S16) for [Anonymous Symbol]
    current.o(.ARM.exidx.text.CUR_uiGetPhaseCurABridge1) refers to current.o(.text.CUR_uiGetPhaseCurABridge1) for [Anonymous Symbol]
    current.o(.ARM.exidx.text.CUR_uiGetPhaseCurBBridge1) refers to current.o(.text.CUR_uiGetPhaseCurBBridge1) for [Anonymous Symbol]
    current.o(.rodata.CUR_tParaBridge1) refers to current.o(.text.CUR_uiGetPhaseCurABridge1) for CUR_uiGetPhaseCurABridge1
    current.o(.rodata.CUR_tParaBridge1) refers to current.o(.text.CUR_uiGetPhaseCurBBridge1) for CUR_uiGetPhaseCurBBridge1
    voltage.o(.text.VOL_bCheckLowVoltageCondition) refers to fsclock.o(.text.STK_tGetSafeTime) for STK_tGetSafeTime
    voltage.o(.text.VOL_bCheckLowVoltageCondition) refers to voltage.o(.text.VOL_tGetDclVolV) for VOL_tGetDclVolV
    voltage.o(.text.VOL_bCheckLowVoltageCondition) refers to voltage.o(.bss.VOL_tActualTimeLowVoltage) for [Anonymous Symbol]
    voltage.o(.text.VOL_bCheckLowVoltageCondition) refers to voltage.o(.bss.VOL_bLowVoltageOK) for [Anonymous Symbol]
    voltage.o(.text.VOL_bCheckLowVoltageCondition) refers to voltage.o(.bss.VOL_bLowVoltageMode) for [Anonymous Symbol]
    voltage.o(.ARM.exidx.text.VOL_bCheckLowVoltageCondition) refers to voltage.o(.text.VOL_bCheckLowVoltageCondition) for [Anonymous Symbol]
    voltage.o(.text.VOL_tGetDclVolV) refers to voltage.o(.bss.VOL_tDCLVoltageV) for [Anonymous Symbol]
    voltage.o(.ARM.exidx.text.VOL_tGetDclVolV) refers to voltage.o(.text.VOL_tGetDclVolV) for [Anonymous Symbol]
    voltage.o(.text.VOL_vSampleDclVoltage) refers to main.o(.bss.Motor_1st) for Motor_1st
    voltage.o(.text.VOL_vSampleDclVoltage) refers to voltage.o(.bss.VOL_uiDclVoltageAdValue) for [Anonymous Symbol]
    voltage.o(.text.VOL_vSampleDclVoltage) refers to voltage.o(.bss.VOL_ui13_5VoltageValue) for [Anonymous Symbol]
    voltage.o(.text.VOL_vSampleDclVoltage) refers to voltage.o(.bss.VOL_tVrefIntVolADValue) for [Anonymous Symbol]
    voltage.o(.text.VOL_vSampleDclVoltage) refers to voltage.o(.bss.VOL_tDclVolSampleQ) for [Anonymous Symbol]
    voltage.o(.text.VOL_vSampleDclVoltage) refers to voltage.o(.bss.VOL_t13_5VolSampleQ) for [Anonymous Symbol]
    voltage.o(.text.VOL_vSampleDclVoltage) refers to voltage.o(.bss.VOL_tVrefIntVolSampleQ) for [Anonymous Symbol]
    voltage.o(.ARM.exidx.text.VOL_vSampleDclVoltage) refers to voltage.o(.text.VOL_vSampleDclVoltage) for [Anonymous Symbol]
    voltage.o(.text.VOL_vTrackVoltageValues) refers to idiv.o(.text) for __aeabi_idiv
    voltage.o(.text.VOL_vTrackVoltageValues) refers to voltage.o(.bss.VOL_tDclVolSampleQ) for [Anonymous Symbol]
    voltage.o(.text.VOL_vTrackVoltageValues) refers to voltage.o(.bss.VOL_tDclVolPerSampleIntQ) for [Anonymous Symbol]
    voltage.o(.text.VOL_vTrackVoltageValues) refers to voltage.o(.bss.VOL_tVrefIntVolSampleQ) for [Anonymous Symbol]
    voltage.o(.text.VOL_vTrackVoltageValues) refers to voltage.o(.bss.VOL_tVrefIntVolPerSampleIntQ) for [Anonymous Symbol]
    voltage.o(.text.VOL_vTrackVoltageValues) refers to voltage.o(.bss.VOL_tDclVolMaxTrackQ) for [Anonymous Symbol]
    voltage.o(.text.VOL_vTrackVoltageValues) refers to voltage.o(.data.VOL_tDclVolMinTrackQ) for [Anonymous Symbol]
    voltage.o(.text.VOL_vTrackVoltageValues) refers to voltage.o(.data.VOL_ucPeriodSampleCtr) for [Anonymous Symbol]
    voltage.o(.text.VOL_vTrackVoltageValues) refers to voltage.o(.bss.VOL_tDclVolMaxQ) for [Anonymous Symbol]
    voltage.o(.text.VOL_vTrackVoltageValues) refers to voltage.o(.bss.VOL_tDclVolPerSampleIntResultQ) for [Anonymous Symbol]
    voltage.o(.text.VOL_vTrackVoltageValues) refers to voltage.o(.bss.VOL_tVrefIntVolPerSampleIntResultQ) for [Anonymous Symbol]
    voltage.o(.text.VOL_vTrackVoltageValues) refers to voltage.o(.bss.VOL_tDclVoltageQ) for [Anonymous Symbol]
    voltage.o(.text.VOL_vTrackVoltageValues) refers to voltage.o(.bss.VOL_tVrefIntVolQ) for [Anonymous Symbol]
    voltage.o(.text.VOL_vTrackVoltageValues) refers to voltage.o(.bss.VOL_tDCLVoltageV) for [Anonymous Symbol]
    voltage.o(.text.VOL_vTrackVoltageValues) refers to voltage.o(.bss.VOL_tVrefIntVoltagemV) for [Anonymous Symbol]
    voltage.o(.text.VOL_vTrackVoltageValues) refers to voltage.o(.bss.VOL_uiDCLVoltagePeakValueV) for [Anonymous Symbol]
    voltage.o(.text.VOL_vTrackVoltageValues) refers to voltage.o(.data.VOL_bVoltageSampleRefreshed) for [Anonymous Symbol]
    voltage.o(.ARM.exidx.text.VOL_vTrackVoltageValues) refers to voltage.o(.text.VOL_vTrackVoltageValues) for [Anonymous Symbol]
    voltage.o(.text.VOL_tGetDclVolRawSampleQ) refers to voltage.o(.bss.VOL_tDclVolSampleQ) for [Anonymous Symbol]
    voltage.o(.ARM.exidx.text.VOL_tGetDclVolRawSampleQ) refers to voltage.o(.text.VOL_tGetDclVolRawSampleQ) for [Anonymous Symbol]
    voltage.o(.text.VOL_tGetDclVolQ) refers to voltage.o(.bss.VOL_tDclVoltageQ) for [Anonymous Symbol]
    voltage.o(.ARM.exidx.text.VOL_tGetDclVolQ) refers to voltage.o(.text.VOL_tGetDclVolQ) for [Anonymous Symbol]
    voltage.o(.text.VOL_tGet13_5VolmV) refers to voltage.o(.bss.VOL_t13_5VoltagemV) for [Anonymous Symbol]
    voltage.o(.ARM.exidx.text.VOL_tGet13_5VolmV) refers to voltage.o(.text.VOL_tGet13_5VolmV) for [Anonymous Symbol]
    voltage.o(.text.VOL_tGetInternalVoltRefVolmV) refers to voltage.o(.bss.VOL_tVrefIntVoltagemV) for [Anonymous Symbol]
    voltage.o(.ARM.exidx.text.VOL_tGetInternalVoltRefVolmV) refers to voltage.o(.text.VOL_tGetInternalVoltRefVolmV) for [Anonymous Symbol]
    voltage.o(.text.VOL_bInitDcLinkVoltageMeasurement) refers to fsclock.o(.text.STK_tGetSafeTime) for STK_tGetSafeTime
    voltage.o(.text.VOL_bInitDcLinkVoltageMeasurement) refers to filter.o(.text.FIR_vInitFilterOutput) for FIR_vInitFilterOutput
    voltage.o(.text.VOL_bInitDcLinkVoltageMeasurement) refers to voltage.o(.bss.VOL_tDCLVoltageV) for [Anonymous Symbol]
    voltage.o(.text.VOL_bInitDcLinkVoltageMeasurement) refers to voltage.o(.bss.VOL_tDCLVoltageDmpdV) for [Anonymous Symbol]
    voltage.o(.text.VOL_bInitDcLinkVoltageMeasurement) refers to voltage.o(.bss.VOL_tDclVolMaxQ) for [Anonymous Symbol]
    voltage.o(.text.VOL_bInitDcLinkVoltageMeasurement) refers to voltage.o(.bss.VOL_tDCLPeakVoltageDmpdQ) for [Anonymous Symbol]
    voltage.o(.ARM.exidx.text.VOL_bInitDcLinkVoltageMeasurement) refers to voltage.o(.text.VOL_bInitDcLinkVoltageMeasurement) for [Anonymous Symbol]
    voltage.o(.text.VOL_bVoltageErrorDetection) refers to voltage.o(.text.VOL_vCheckInternalReferenceVoltageCondition) for VOL_vCheckInternalReferenceVoltageCondition
    voltage.o(.text.VOL_bVoltageErrorDetection) refers to voltage.o(.text.VOL_bCheckUnderVoltageCondition) for VOL_bCheckUnderVoltageCondition
    voltage.o(.text.VOL_bVoltageErrorDetection) refers to voltage.o(.text.VOL_bCheckOverVoltageCondition) for VOL_bCheckOverVoltageCondition
    voltage.o(.ARM.exidx.text.VOL_bVoltageErrorDetection) refers to voltage.o(.text.VOL_bVoltageErrorDetection) for [Anonymous Symbol]
    voltage.o(.text.VOL_vCheckInternalReferenceVoltageCondition) refers to voltage.o(.text.VOL_tGetInternalVoltRefVolmV) for VOL_tGetInternalVoltRefVolmV
    voltage.o(.ARM.exidx.text.VOL_vCheckInternalReferenceVoltageCondition) refers to voltage.o(.text.VOL_vCheckInternalReferenceVoltageCondition) for [Anonymous Symbol]
    voltage.o(.text.VOL_bCheckUnderVoltageCondition) refers to fsclock.o(.text.STK_tGetSafeTime) for STK_tGetSafeTime
    voltage.o(.text.VOL_bCheckUnderVoltageCondition) refers to voltage.o(.text.VOL_tGetDclVolV) for VOL_tGetDclVolV
    voltage.o(.text.VOL_bCheckUnderVoltageCondition) refers to voltage.o(.bss.VOL_tActualTimeUnderVoltage) for [Anonymous Symbol]
    voltage.o(.text.VOL_bCheckUnderVoltageCondition) refers to voltage.o(.bss.VOL_bUnderVoltageOK) for [Anonymous Symbol]
    voltage.o(.text.VOL_bCheckUnderVoltageCondition) refers to voltage.o(.bss.VOL_bUnderVoltageMode) for [Anonymous Symbol]
    voltage.o(.ARM.exidx.text.VOL_bCheckUnderVoltageCondition) refers to voltage.o(.text.VOL_bCheckUnderVoltageCondition) for [Anonymous Symbol]
    voltage.o(.text.VOL_bCheckOverVoltageCondition) refers to fsclock.o(.text.STK_tGetSafeTime) for STK_tGetSafeTime
    voltage.o(.text.VOL_bCheckOverVoltageCondition) refers to voltage.o(.text.VOL_tGetDclVolV) for VOL_tGetDclVolV
    voltage.o(.text.VOL_bCheckOverVoltageCondition) refers to voltage.o(.bss.VOL_tActualTimeOverVoltage) for [Anonymous Symbol]
    voltage.o(.text.VOL_bCheckOverVoltageCondition) refers to voltage.o(.bss.VOL_bOverVoltageOK) for [Anonymous Symbol]
    voltage.o(.text.VOL_bCheckOverVoltageCondition) refers to voltage.o(.bss.VOL_bOverVoltageMode) for [Anonymous Symbol]
    voltage.o(.ARM.exidx.text.VOL_bCheckOverVoltageCondition) refers to voltage.o(.text.VOL_bCheckOverVoltageCondition) for [Anonymous Symbol]
    voltage.o(.text.VOL_bHandleTask) refers to fsclock.o(.text.STK_tGetSafeTime) for STK_tGetSafeTime
    voltage.o(.text.VOL_bHandleTask) refers to voltage.o(.text.VOL_vCalcVolLowPassFilters) for VOL_vCalcVolLowPassFilters
    voltage.o(.text.VOL_bHandleTask) refers to voltage.o(.data.VOL_tSafeTimeStamp) for [Anonymous Symbol]
    voltage.o(.text.VOL_bHandleTask) refers to voltage.o(.data.VOL_bVoltageSampleRefreshed) for [Anonymous Symbol]
    voltage.o(.ARM.exidx.text.VOL_bHandleTask) refers to voltage.o(.text.VOL_bHandleTask) for [Anonymous Symbol]
    voltage.o(.text.VOL_vCalcVolLowPassFilters) refers to filter.o(.text.FIR_vCalcFilter) for FIR_vCalcFilter
    voltage.o(.text.VOL_vCalcVolLowPassFilters) refers to voltage.o(.bss.VOL_tDCLVoltageV) for [Anonymous Symbol]
    voltage.o(.text.VOL_vCalcVolLowPassFilters) refers to voltage.o(.bss.VOL_tDCLVoltageDmpdV) for [Anonymous Symbol]
    voltage.o(.text.VOL_vCalcVolLowPassFilters) refers to voltage.o(.data.VOL_tVoltageFilterConst) for [Anonymous Symbol]
    voltage.o(.text.VOL_vCalcVolLowPassFilters) refers to voltage.o(.bss.VOL_uiDCLVoltagePeakValueV) for [Anonymous Symbol]
    voltage.o(.text.VOL_vCalcVolLowPassFilters) refers to voltage.o(.bss.VOL_tDCLPeakVoltageDmpdV) for [Anonymous Symbol]
    voltage.o(.text.VOL_vCalcVolLowPassFilters) refers to voltage.o(.bss.VOL_tDclVolMaxQ) for [Anonymous Symbol]
    voltage.o(.text.VOL_vCalcVolLowPassFilters) refers to voltage.o(.bss.VOL_tDCLPeakVoltageDmpdQ) for [Anonymous Symbol]
    voltage.o(.text.VOL_vCalcVolLowPassFilters) refers to voltage.o(.data.VOL_tDclPeakVoltageFilterConst) for [Anonymous Symbol]
    voltage.o(.ARM.exidx.text.VOL_vCalcVolLowPassFilters) refers to voltage.o(.text.VOL_vCalcVolLowPassFilters) for [Anonymous Symbol]
    math.o(.text.FPM_vCart2Pol) refers to math.o(.rodata.FPM_tCordicAngleTabQ15) for FPM_tCordicAngleTabQ15
    math.o(.ARM.exidx.text.FPM_vCart2Pol) refers to math.o(.text.FPM_vCart2Pol) for [Anonymous Symbol]
    math.o(.ARM.exidx.text.FPM_ulSqrt) refers to math.o(.text.FPM_ulSqrt) for [Anonymous Symbol]
    math.o(.ARM.exidx.text.QMATH_max) refers to math.o(.text.QMATH_max) for [Anonymous Symbol]
    math.o(.ARM.exidx.text.QMATH_min) refers to math.o(.text.QMATH_min) for [Anonymous Symbol]
    math.o(.ARM.exidx.text.QMATH_limit) refers to math.o(.text.QMATH_limit) for [Anonymous Symbol]
    filter.o(.ARM.exidx.text.FIR_vCalcFilter) refers to filter.o(.text.FIR_vCalcFilter) for [Anonymous Symbol]
    filter.o(.ARM.exidx.text.FIR_vInitFilterOutput) refers to filter.o(.text.FIR_vInitFilterOutput) for [Anonymous Symbol]
    transfer.o(.ARM.exidx.text.TRR_vClarkeTrans) refers to transfer.o(.text.TRR_vClarkeTrans) for [Anonymous Symbol]
    transfer.o(.text.TRR_vForwardTransformation) refers to math.o(.rodata.FPM_tSineTabQ15) for FPM_tSineTabQ15
    transfer.o(.ARM.exidx.text.TRR_vForwardTransformation) refers to transfer.o(.text.TRR_vForwardTransformation) for [Anonymous Symbol]
    transfer.o(.text.TRR_vBackwardTransformation) refers to math.o(.rodata.FPM_tSineTabQ15) for FPM_tSineTabQ15
    transfer.o(.ARM.exidx.text.TRR_vBackwardTransformation) refers to transfer.o(.text.TRR_vBackwardTransformation) for [Anonymous Symbol]
    drv_adc.o(.text.Drv_Adc_Basic_Init) refers to hal_adc.o(.text.ADC_StructInit) for ADC_StructInit
    drv_adc.o(.text.Drv_Adc_Basic_Init) refers to hal_rcc.o(.text.RCC_APB2PeriphClockCmd) for RCC_APB2PeriphClockCmd
    drv_adc.o(.text.Drv_Adc_Basic_Init) refers to hal_adc.o(.text.ADC_Calibration) for ADC_Calibration
    drv_adc.o(.text.Drv_Adc_Basic_Init) refers to hal_adc.o(.text.ADC_Init) for ADC_Init
    drv_adc.o(.text.Drv_Adc_Basic_Init) refers to hal_adc.o(.text.ADC_ExternalTrigConvCmd) for ADC_ExternalTrigConvCmd
    drv_adc.o(.text.Drv_Adc_Basic_Init) refers to hal_adc.o(.text.ADC_Cmd) for ADC_Cmd
    drv_adc.o(.ARM.exidx.text.Drv_Adc_Basic_Init) refers to drv_adc.o(.text.Drv_Adc_Basic_Init) for [Anonymous Symbol]
    drv_adc.o(.text.Drv_Adc_Channel_Init) refers to hal_adc.o(.text.ADC_RegularChannelConfig) for ADC_RegularChannelConfig
    drv_adc.o(.text.Drv_Adc_Channel_Init) refers to hal_adc.o(.text.ADC_ANY_NUM_Config) for ADC_ANY_NUM_Config
    drv_adc.o(.text.Drv_Adc_Channel_Init) refers to hal_adc.o(.text.ADC_ANY_CH_Config) for ADC_ANY_CH_Config
    drv_adc.o(.text.Drv_Adc_Channel_Init) refers to hal_adc.o(.text.ADC_ANY_Cmd) for ADC_ANY_Cmd
    drv_adc.o(.ARM.exidx.text.Drv_Adc_Channel_Init) refers to drv_adc.o(.text.Drv_Adc_Channel_Init) for [Anonymous Symbol]
    drv_comp.o(.text.Drv_Comp_Init) refers to hal_rcc.o(.text.RCC_APB2PeriphClockCmd) for RCC_APB2PeriphClockCmd
    drv_comp.o(.text.Drv_Comp_Init) refers to hal_comp.o(.text.COMP_DeInit) for COMP_DeInit
    drv_comp.o(.text.Drv_Comp_Init) refers to hal_comp.o(.text.COMP_Init) for COMP_Init
    drv_comp.o(.text.Drv_Comp_Init) refers to hal_comp.o(.text.COMP_SetCrv) for COMP_SetCrv
    drv_comp.o(.text.Drv_Comp_Init) refers to hal_comp.o(.text.COMP_Cmd) for COMP_Cmd
    drv_comp.o(.ARM.exidx.text.Drv_Comp_Init) refers to drv_comp.o(.text.Drv_Comp_Init) for [Anonymous Symbol]
    drv_div.o(.text.Drv_Hwdiv_Init) refers to hal_rcc.o(.text.RCC_AHBPeriphClockCmd) for RCC_AHBPeriphClockCmd
    drv_div.o(.text.Drv_Hwdiv_Init) refers to drv_div.o(.text.HDIV_SignInit) for HDIV_SignInit
    drv_div.o(.ARM.exidx.text.Drv_Hwdiv_Init) refers to drv_div.o(.text.Drv_Hwdiv_Init) for [Anonymous Symbol]
    drv_div.o(.ARM.exidx.text.HDIV_SignInit) refers to drv_div.o(.text.HDIV_SignInit) for [Anonymous Symbol]
    drv_div.o(.ARM.exidx.text.Division) refers to drv_div.o(.text.Division) for [Anonymous Symbol]
    drv_iic.o(.text.DRV_vIICSDAConfigure) refers to hal_rcc.o(.text.RCC_AHBPeriphClockCmd) for RCC_AHBPeriphClockCmd
    drv_iic.o(.text.DRV_vIICSDAConfigure) refers to hal_gpio.o(.text.GPIO_StructInit) for GPIO_StructInit
    drv_iic.o(.text.DRV_vIICSDAConfigure) refers to hal_gpio.o(.text.GPIO_Init) for GPIO_Init
    drv_iic.o(.ARM.exidx.text.DRV_vIICSDAConfigure) refers to drv_iic.o(.text.DRV_vIICSDAConfigure) for [Anonymous Symbol]
    drv_iwdg.o(.text.Drv_Iwdg_Init) refers to hal_rcc.o(.text.RCC_LSICmd) for RCC_LSICmd
    drv_iwdg.o(.text.Drv_Iwdg_Init) refers to hal_rcc.o(.text.RCC_GetFlagStatus) for RCC_GetFlagStatus
    drv_iwdg.o(.text.Drv_Iwdg_Init) refers to hal_iwdg.o(.text.PVU_CheckStatus) for PVU_CheckStatus
    drv_iwdg.o(.text.Drv_Iwdg_Init) refers to hal_iwdg.o(.text.IWDG_WriteAccessCmd) for IWDG_WriteAccessCmd
    drv_iwdg.o(.text.Drv_Iwdg_Init) refers to hal_iwdg.o(.text.IWDG_SetPrescaler) for IWDG_SetPrescaler
    drv_iwdg.o(.text.Drv_Iwdg_Init) refers to hal_iwdg.o(.text.RVU_CheckStatus) for RVU_CheckStatus
    drv_iwdg.o(.text.Drv_Iwdg_Init) refers to hal_iwdg.o(.text.IWDG_SetReload) for IWDG_SetReload
    drv_iwdg.o(.text.Drv_Iwdg_Init) refers to hal_iwdg.o(.text.IWDG_ReloadCounter) for IWDG_ReloadCounter
    drv_iwdg.o(.text.Drv_Iwdg_Init) refers to hal_iwdg.o(.text.IWDG_Enable) for IWDG_Enable
    drv_iwdg.o(.ARM.exidx.text.Drv_Iwdg_Init) refers to drv_iwdg.o(.text.Drv_Iwdg_Init) for [Anonymous Symbol]
    drv_led.o(.ARM.exidx.text.Led_On) refers to drv_led.o(.text.Led_On) for [Anonymous Symbol]
    drv_led.o(.ARM.exidx.text.Led_Off) refers to drv_led.o(.text.Led_Off) for [Anonymous Symbol]
    drv_led.o(.ARM.exidx.text.Led_Toggle) refers to drv_led.o(.text.Led_Toggle) for [Anonymous Symbol]
    drv_opamp.o(.text.Drv_Opamp_Init) refers to hal_rcc.o(.text.RCC_APB2PeriphClockCmd) for RCC_APB2PeriphClockCmd
    drv_opamp.o(.text.Drv_Opamp_Init) refers to hal_opamp.o(.text.OPAMP_Configure) for OPAMP_Configure
    drv_opamp.o(.ARM.exidx.text.Drv_Opamp_Init) refers to drv_opamp.o(.text.Drv_Opamp_Init) for [Anonymous Symbol]
    drv_pwm.o(.text.Drv_Pwm_Init) refers to hal_rcc.o(.text.RCC_APB2PeriphClockCmd) for RCC_APB2PeriphClockCmd
    drv_pwm.o(.text.Drv_Pwm_Init) refers to hal_tim.o(.text.TIM_TimeBaseInit) for TIM_TimeBaseInit
    drv_pwm.o(.text.Drv_Pwm_Init) refers to hal_tim.o(.text.TIM_BDTRConfig) for TIM_BDTRConfig
    drv_pwm.o(.text.Drv_Pwm_Init) refers to hal_tim.o(.text.TIM_OC1Init) for TIM_OC1Init
    drv_pwm.o(.text.Drv_Pwm_Init) refers to hal_tim.o(.text.TIM_OC2Init) for TIM_OC2Init
    drv_pwm.o(.text.Drv_Pwm_Init) refers to hal_tim.o(.text.TIM_OC3Init) for TIM_OC3Init
    drv_pwm.o(.text.Drv_Pwm_Init) refers to hal_tim.o(.text.TIM_OC4Init) for TIM_OC4Init
    drv_pwm.o(.text.Drv_Pwm_Init) refers to hal_tim.o(.text.TIM_OC1PreloadConfig) for TIM_OC1PreloadConfig
    drv_pwm.o(.text.Drv_Pwm_Init) refers to hal_tim.o(.text.TIM_OC2PreloadConfig) for TIM_OC2PreloadConfig
    drv_pwm.o(.text.Drv_Pwm_Init) refers to hal_tim.o(.text.TIM_OC3PreloadConfig) for TIM_OC3PreloadConfig
    drv_pwm.o(.text.Drv_Pwm_Init) refers to hal_tim.o(.text.TIM_ARRPreloadConfig) for TIM_ARRPreloadConfig
    drv_pwm.o(.text.Drv_Pwm_Init) refers to hal_tim.o(.text.TIM_Cmd) for TIM_Cmd
    drv_pwm.o(.text.Drv_Pwm_Init) refers to hal_tim.o(.text.TIM_CtrlPWMOutputs) for TIM_CtrlPWMOutputs
    drv_pwm.o(.ARM.exidx.text.Drv_Pwm_Init) refers to drv_pwm.o(.text.Drv_Pwm_Init) for [Anonymous Symbol]
    drv_pwm.o(.text.TIM_vSetCompareValues) refers to main.o(.bss.Motor_1st) for Motor_1st
    drv_pwm.o(.ARM.exidx.text.TIM_vSetCompareValues) refers to drv_pwm.o(.text.TIM_vSetCompareValues) for [Anonymous Symbol]
    drv_pwm.o(.ARM.exidx.text.TIM_vSetOutputs) refers to drv_pwm.o(.text.TIM_vSetOutputs) for [Anonymous Symbol]
    drv_pwm.o(.text.TIM_bSetOutputConfig) refers to drv_pwm.o(.text.TIM_vDutyCycleToCompare) for TIM_vDutyCycleToCompare
    drv_pwm.o(.text.TIM_bSetOutputConfig) refers to drv_pwm.o(.text.TIM_vSetCompareValues) for TIM_vSetCompareValues
    drv_pwm.o(.text.TIM_bSetOutputConfig) refers to drv_pwm.o(.text.TIM_vSetOutputs) for TIM_vSetOutputs
    drv_pwm.o(.text.TIM_bSetOutputConfig) refers to drv_pwm.o(.rodata.PWM_ucChannelConfig) for [Anonymous Symbol]
    drv_pwm.o(.ARM.exidx.text.TIM_bSetOutputConfig) refers to drv_pwm.o(.text.TIM_bSetOutputConfig) for [Anonymous Symbol]
    drv_pwm.o(.text.TIM_vDutyCycleToCompare) refers to main.o(.bss.Motor_1st) for Motor_1st
    drv_pwm.o(.ARM.exidx.text.TIM_vDutyCycleToCompare) refers to drv_pwm.o(.text.TIM_vDutyCycleToCompare) for [Anonymous Symbol]
    drv_pwm.o(.text.TIM_vBrakeInit) refers to drv_pwm.o(.text.TIM_bSetOutputConfig) for TIM_bSetOutputConfig
    drv_pwm.o(.text.TIM_vBrakeInit) refers to statemachine.o(.text.M1_SwitchRunWindDetBrake) for M1_SwitchRunWindDetBrake
    drv_pwm.o(.text.TIM_vBrakeInit) refers to drv_pwm.o(.rodata..LTIM_vBrakeInit.TIM_tBrakeDutyCycle) for [Anonymous Symbol]
    drv_pwm.o(.text.TIM_vBrakeInit) refers to drv_pwm.o(.bss.MOT_tBrakePara) for [Anonymous Symbol]
    drv_pwm.o(.ARM.exidx.text.TIM_vBrakeInit) refers to drv_pwm.o(.text.TIM_vBrakeInit) for [Anonymous Symbol]
    drv_pwm.o(.text.TIM_bBrakeUpdate) refers to drv_pwm.o(.text.TIM_vSetCompareValues) for TIM_vSetCompareValues
    drv_pwm.o(.text.TIM_bBrakeUpdate) refers to drv_pwm.o(.bss.MOT_tBrakeData) for [Anonymous Symbol]
    drv_pwm.o(.text.TIM_bBrakeUpdate) refers to drv_pwm.o(.bss.MOT_tBrakePara) for [Anonymous Symbol]
    drv_pwm.o(.text.TIM_bBrakeUpdate) refers to drv_pwm.o(.data.TIM_u16BrakeDutyCycle) for [Anonymous Symbol]
    drv_pwm.o(.ARM.exidx.text.TIM_bBrakeUpdate) refers to drv_pwm.o(.text.TIM_bBrakeUpdate) for [Anonymous Symbol]
    drv_sci.o(.ARM.exidx.text._sys_exit) refers to drv_sci.o(.text._sys_exit) for [Anonymous Symbol]
    drv_sci.o(.text.UART_vCONSOLE_Init) refers to hal_rcc.o(.text.RCC_APB1PeriphClockCmd) for RCC_APB1PeriphClockCmd
    drv_sci.o(.text.UART_vCONSOLE_Init) refers to hal_gpio.o(.text.GPIO_PinAFConfig) for GPIO_PinAFConfig
    drv_sci.o(.text.UART_vCONSOLE_Init) refers to hal_uart.o(.text.UART_ClearITPendingBit) for UART_ClearITPendingBit
    drv_sci.o(.text.UART_vCONSOLE_Init) refers to hal_uart.o(.text.UART_StructInit) for UART_StructInit
    drv_sci.o(.text.UART_vCONSOLE_Init) refers to hal_uart.o(.text.UART_Init) for UART_Init
    drv_sci.o(.text.UART_vCONSOLE_Init) refers to drv_sci.o(.text.UART_vNVICConfigure) for UART_vNVICConfigure
    drv_sci.o(.text.UART_vCONSOLE_Init) refers to hal_uart.o(.text.UART_ITConfig) for UART_ITConfig
    drv_sci.o(.text.UART_vCONSOLE_Init) refers to hal_uart.o(.text.UART_Cmd) for UART_Cmd
    drv_sci.o(.ARM.exidx.text.UART_vCONSOLE_Init) refers to drv_sci.o(.text.UART_vCONSOLE_Init) for [Anonymous Symbol]
    drv_sci.o(.text.UART_vNVICConfigure) refers to hal_misc.o(.text.exNVIC_Init) for exNVIC_Init
    drv_sci.o(.ARM.exidx.text.UART_vNVICConfigure) refers to drv_sci.o(.text.UART_vNVICConfigure) for [Anonymous Symbol]
    drv_sci.o(.text.UART_vWriteData) refers to hal_uart.o(.text.UART_SendData) for UART_SendData
    drv_sci.o(.text.UART_vWriteData) refers to hal_uart.o(.text.UART_GetITStatus) for UART_GetITStatus
    drv_sci.o(.text.UART_vWriteData) refers to hal_uart.o(.text.UART_ClearITPendingBit) for UART_ClearITPendingBit
    drv_sci.o(.ARM.exidx.text.UART_vWriteData) refers to drv_sci.o(.text.UART_vWriteData) for [Anonymous Symbol]
    drv_sci.o(.text.UART_vGetUARTData) refers to hal_uart.o(.text.UART_ReceiveData) for UART_ReceiveData
    drv_sci.o(.ARM.exidx.text.UART_vGetUARTData) refers to drv_sci.o(.text.UART_vGetUARTData) for [Anonymous Symbol]
    drv_sci.o(.ARM.exidx.text.UART_vModbusRxEnable) refers to drv_sci.o(.text.UART_vModbusRxEnable) for [Anonymous Symbol]
    drv_sci.o(.ARM.exidx.text.UART_vModbusRxDisable) refers to drv_sci.o(.text.UART_vModbusRxDisable) for [Anonymous Symbol]
    drv_sci.o(.ARM.exidx.text.UART_vModbusTxEnable) refers to drv_sci.o(.text.UART_vModbusTxEnable) for [Anonymous Symbol]
    drv_sci.o(.ARM.exidx.text.UART_vModbusTxDisable) refers to drv_sci.o(.text.UART_vModbusTxDisable) for [Anonymous Symbol]
    drv_sci.o(.text.UART_bUARTTXBUFEMPT) refers to hal_uart.o(.text.UART_GetFlagStatus) for UART_GetFlagStatus
    drv_sci.o(.ARM.exidx.text.UART_bUARTTXBUFEMPT) refers to drv_sci.o(.text.UART_bUARTTXBUFEMPT) for [Anonymous Symbol]
    drv_sci.o(.text.UART_vVOFAUARTInit) refers to hal_rcc.o(.text.RCC_APB1PeriphClockCmd) for RCC_APB1PeriphClockCmd
    drv_sci.o(.text.UART_vVOFAUARTInit) refers to hal_gpio.o(.text.GPIO_PinAFConfig) for GPIO_PinAFConfig
    drv_sci.o(.text.UART_vVOFAUARTInit) refers to hal_uart.o(.text.UART_ClearITPendingBit) for UART_ClearITPendingBit
    drv_sci.o(.text.UART_vVOFAUARTInit) refers to hal_uart.o(.text.UART_StructInit) for UART_StructInit
    drv_sci.o(.text.UART_vVOFAUARTInit) refers to hal_uart.o(.text.UART_Init) for UART_Init
    drv_sci.o(.text.UART_vVOFAUARTInit) refers to drv_sci.o(.text.UART_vNVICConfigure) for UART_vNVICConfigure
    drv_sci.o(.text.UART_vVOFAUARTInit) refers to hal_uart.o(.text.UART_ITConfig) for UART_ITConfig
    drv_sci.o(.text.UART_vVOFAUARTInit) refers to hal_uart.o(.text.UART_Cmd) for UART_Cmd
    drv_sci.o(.ARM.exidx.text.UART_vVOFAUARTInit) refers to drv_sci.o(.text.UART_vVOFAUARTInit) for [Anonymous Symbol]
    drv_sqrt.o(.text.Drv_Sqrt_Init) refers to hal_rcc.o(.text.RCC_AHBPeriphClockCmd) for RCC_AHBPeriphClockCmd
    drv_sqrt.o(.ARM.exidx.text.Drv_Sqrt_Init) refers to drv_sqrt.o(.text.Drv_Sqrt_Init) for [Anonymous Symbol]
    drv_sqrt.o(.ARM.exidx.text.Hw_Sqrt) refers to drv_sqrt.o(.text.Hw_Sqrt) for [Anonymous Symbol]
    drv_counter.o(.text.Drv_Tim16_Counter_Init) refers to hal_tim.o(.text.TIM_TimeBaseStructInit) for TIM_TimeBaseStructInit
    drv_counter.o(.text.Drv_Tim16_Counter_Init) refers to hal_tim.o(.text.TIM_OCStructInit) for TIM_OCStructInit
    drv_counter.o(.text.Drv_Tim16_Counter_Init) refers to hal_rcc.o(.text.RCC_APB2PeriphClockCmd) for RCC_APB2PeriphClockCmd
    drv_counter.o(.text.Drv_Tim16_Counter_Init) refers to hal_tim.o(.text.TIM_DeInit) for TIM_DeInit
    drv_counter.o(.text.Drv_Tim16_Counter_Init) refers to hal_tim.o(.text.TIM_TimeBaseInit) for TIM_TimeBaseInit
    drv_counter.o(.text.Drv_Tim16_Counter_Init) refers to hal_tim.o(.text.TIM_ARRPreloadConfig) for TIM_ARRPreloadConfig
    drv_counter.o(.text.Drv_Tim16_Counter_Init) refers to hal_tim.o(.text.TIM_Cmd) for TIM_Cmd
    drv_counter.o(.ARM.exidx.text.Drv_Tim16_Counter_Init) refers to drv_counter.o(.text.Drv_Tim16_Counter_Init) for [Anonymous Symbol]
    drv_counter.o(.text.Drv_Tim16_EnDisable) refers to hal_tim.o(.text.TIM_Cmd) for TIM_Cmd
    drv_counter.o(.ARM.exidx.text.Drv_Tim16_EnDisable) refers to drv_counter.o(.text.Drv_Tim16_EnDisable) for [Anonymous Symbol]
    drv_counter.o(.text.Drv_u32GetTim16CountVal) refers to hal_tim.o(.text.TIM_GetCounter) for TIM_GetCounter
    drv_counter.o(.ARM.exidx.text.Drv_u32GetTim16CountVal) refers to drv_counter.o(.text.Drv_u32GetTim16CountVal) for [Anonymous Symbol]
    drv_output.o(.text.Drv_Tim17_PWM_Out_Init) refers to hal_tim.o(.text.TIM_TimeBaseStructInit) for TIM_TimeBaseStructInit
    drv_output.o(.text.Drv_Tim17_PWM_Out_Init) refers to hal_tim.o(.text.TIM_OCStructInit) for TIM_OCStructInit
    drv_output.o(.text.Drv_Tim17_PWM_Out_Init) refers to hal_rcc.o(.text.RCC_APB2PeriphClockCmd) for RCC_APB2PeriphClockCmd
    drv_output.o(.text.Drv_Tim17_PWM_Out_Init) refers to hal_tim.o(.text.TIM_DeInit) for TIM_DeInit
    drv_output.o(.text.Drv_Tim17_PWM_Out_Init) refers to hal_tim.o(.text.TIM_TimeBaseInit) for TIM_TimeBaseInit
    drv_output.o(.text.Drv_Tim17_PWM_Out_Init) refers to hal_tim.o(.text.TIM_OC1Init) for TIM_OC1Init
    drv_output.o(.text.Drv_Tim17_PWM_Out_Init) refers to hal_tim.o(.text.TIM_OC1PreloadConfig) for TIM_OC1PreloadConfig
    drv_output.o(.text.Drv_Tim17_PWM_Out_Init) refers to hal_tim.o(.text.TIM_ARRPreloadConfig) for TIM_ARRPreloadConfig
    drv_output.o(.text.Drv_Tim17_PWM_Out_Init) refers to hal_tim.o(.text.TIM_Cmd) for TIM_Cmd
    drv_output.o(.text.Drv_Tim17_PWM_Out_Init) refers to hal_tim.o(.text.TIM_CtrlPWMOutputs) for TIM_CtrlPWMOutputs
    drv_output.o(.ARM.exidx.text.Drv_Tim17_PWM_Out_Init) refers to drv_output.o(.text.Drv_Tim17_PWM_Out_Init) for [Anonymous Symbol]
    drv_output.o(.text.Drv_vPwmOutputInit) refers to drv_output.o(.text.Drv_Tim17_PWM_Out_Init) for Drv_Tim17_PWM_Out_Init
    drv_output.o(.text.Drv_vPwmOutputInit) refers to hal_tim.o(.text.TIM_CtrlPWMOutputs) for TIM_CtrlPWMOutputs
    drv_output.o(.text.Drv_vPwmOutputInit) refers to hal_tim.o(.text.TIM_Cmd) for TIM_Cmd
    drv_output.o(.ARM.exidx.text.Drv_vPwmOutputInit) refers to drv_output.o(.text.Drv_vPwmOutputInit) for [Anonymous Symbol]
    drv_output.o(.text.Drv_vSetOutputFreq) refers to hal_tim.o(.text.TIM_SetAutoreload) for TIM_SetAutoreload
    drv_output.o(.text.Drv_vSetOutputFreq) refers to uidiv.o(.text) for __aeabi_uidiv
    drv_output.o(.ARM.exidx.text.Drv_vSetOutputFreq) refers to drv_output.o(.text.Drv_vSetOutputFreq) for [Anonymous Symbol]
    drv_output.o(.text.Drv_vEnablePWMOutput) refers to hal_tim.o(.text.TIM_CtrlPWMOutputs) for TIM_CtrlPWMOutputs
    drv_output.o(.ARM.exidx.text.Drv_vEnablePWMOutput) refers to drv_output.o(.text.Drv_vEnablePWMOutput) for [Anonymous Symbol]
    drv_capture.o(.text.Drv_Tim3_Pwm_In_Init) refers to hal_tim.o(.text.TIM_TimeBaseStructInit) for TIM_TimeBaseStructInit
    drv_capture.o(.text.Drv_Tim3_Pwm_In_Init) refers to hal_misc.o(.text.NVIC_Init) for NVIC_Init
    drv_capture.o(.text.Drv_Tim3_Pwm_In_Init) refers to hal_tim.o(.text.TIM_DeInit) for TIM_DeInit
    drv_capture.o(.text.Drv_Tim3_Pwm_In_Init) refers to hal_rcc.o(.text.RCC_APB1PeriphClockCmd) for RCC_APB1PeriphClockCmd
    drv_capture.o(.text.Drv_Tim3_Pwm_In_Init) refers to hal_tim.o(.text.TIM_TimeBaseInit) for TIM_TimeBaseInit
    drv_capture.o(.text.Drv_Tim3_Pwm_In_Init) refers to hal_tim.o(.text.TIM_ICStructInit) for TIM_ICStructInit
    drv_capture.o(.text.Drv_Tim3_Pwm_In_Init) refers to hal_tim.o(.text.TIM_PWMIConfig) for TIM_PWMIConfig
    drv_capture.o(.text.Drv_Tim3_Pwm_In_Init) refers to hal_tim.o(.text.TIM_SelectInputTrigger) for TIM_SelectInputTrigger
    drv_capture.o(.text.Drv_Tim3_Pwm_In_Init) refers to hal_tim.o(.text.TIM_SelectSlaveMode) for TIM_SelectSlaveMode
    drv_capture.o(.text.Drv_Tim3_Pwm_In_Init) refers to hal_tim.o(.text.TIM_ITConfig) for TIM_ITConfig
    drv_capture.o(.text.Drv_Tim3_Pwm_In_Init) refers to hal_tim.o(.text.TIM_ClearITPendingBit) for TIM_ClearITPendingBit
    drv_capture.o(.text.Drv_Tim3_Pwm_In_Init) refers to hal_tim.o(.text.TIM_Cmd) for TIM_Cmd
    drv_capture.o(.ARM.exidx.text.Drv_Tim3_Pwm_In_Init) refers to drv_capture.o(.text.Drv_Tim3_Pwm_In_Init) for [Anonymous Symbol]
    drv_capture.o(.text.Drv_vCaptureInit) refers to drv_capture.o(.text.Drv_Tim3_Pwm_In_Init) for Drv_Tim3_Pwm_In_Init
    drv_capture.o(.ARM.exidx.text.Drv_vCaptureInit) refers to drv_capture.o(.text.Drv_vCaptureInit) for [Anonymous Symbol]
    drv_dma.o(.text.DMA_Channel4_Init) refers to hal_rcc.o(.text.RCC_AHBPeriphClockCmd) for RCC_AHBPeriphClockCmd
    drv_dma.o(.text.DMA_Channel4_Init) refers to hal_dma.o(.text.DMA_DeInit) for DMA_DeInit
    drv_dma.o(.text.DMA_Channel4_Init) refers to hal_dma.o(.text.DMA_StructInit) for DMA_StructInit
    drv_dma.o(.text.DMA_Channel4_Init) refers to hal_dma.o(.text.DMA_Init) for DMA_Init
    drv_dma.o(.ARM.exidx.text.DMA_Channel4_Init) refers to drv_dma.o(.text.DMA_Channel4_Init) for [Anonymous Symbol]
    hal_adc.o(.text.ADC_DeInit) refers to hal_rcc.o(.text.exRCC_APB2PeriphReset) for exRCC_APB2PeriphReset
    hal_adc.o(.ARM.exidx.text.ADC_DeInit) refers to hal_adc.o(.text.ADC_DeInit) for [Anonymous Symbol]
    hal_adc.o(.ARM.exidx.text.ADC_Init) refers to hal_adc.o(.text.ADC_Init) for [Anonymous Symbol]
    hal_adc.o(.ARM.exidx.text.ADC_StructInit) refers to hal_adc.o(.text.ADC_StructInit) for [Anonymous Symbol]
    hal_adc.o(.ARM.exidx.text.ADC_Cmd) refers to hal_adc.o(.text.ADC_Cmd) for [Anonymous Symbol]
    hal_adc.o(.ARM.exidx.text.ADC_DMACmd) refers to hal_adc.o(.text.ADC_DMACmd) for [Anonymous Symbol]
    hal_adc.o(.ARM.exidx.text.ADC_ITConfig) refers to hal_adc.o(.text.ADC_ITConfig) for [Anonymous Symbol]
    hal_adc.o(.ARM.exidx.text.ADC_SoftwareStartConvCmd) refers to hal_adc.o(.text.ADC_SoftwareStartConvCmd) for [Anonymous Symbol]
    hal_adc.o(.ARM.exidx.text.ADC_GetSoftwareStartConvStatus) refers to hal_adc.o(.text.ADC_GetSoftwareStartConvStatus) for [Anonymous Symbol]
    hal_adc.o(.text.ADC_RegularChannelConfig) refers to hal_adc.o(.text.ADC_TempSensorVrefintCmd) for ADC_TempSensorVrefintCmd
    hal_adc.o(.ARM.exidx.text.ADC_RegularChannelConfig) refers to hal_adc.o(.text.ADC_RegularChannelConfig) for [Anonymous Symbol]
    hal_adc.o(.ARM.exidx.text.ADC_TempSensorVrefintCmd) refers to hal_adc.o(.text.ADC_TempSensorVrefintCmd) for [Anonymous Symbol]
    hal_adc.o(.ARM.exidx.text.ADC_ExternalTrigConvCmd) refers to hal_adc.o(.text.ADC_ExternalTrigConvCmd) for [Anonymous Symbol]
    hal_adc.o(.ARM.exidx.text.ADC_ExternalTrigConvConfig) refers to hal_adc.o(.text.ADC_ExternalTrigConvConfig) for [Anonymous Symbol]
    hal_adc.o(.ARM.exidx.text.ADC_GetConversionValue) refers to hal_adc.o(.text.ADC_GetConversionValue) for [Anonymous Symbol]
    hal_adc.o(.ARM.exidx.text.ADC_GetDualModeConversionValue) refers to hal_adc.o(.text.ADC_GetDualModeConversionValue) for [Anonymous Symbol]
    hal_adc.o(.ARM.exidx.text.ADC_AnalogWatchdogCmd) refers to hal_adc.o(.text.ADC_AnalogWatchdogCmd) for [Anonymous Symbol]
    hal_adc.o(.ARM.exidx.text.ADC_AnalogWatchdogThresholdsConfig) refers to hal_adc.o(.text.ADC_AnalogWatchdogThresholdsConfig) for [Anonymous Symbol]
    hal_adc.o(.ARM.exidx.text.ADC_AnalogWatchdogSingleChannelConfig) refers to hal_adc.o(.text.ADC_AnalogWatchdogSingleChannelConfig) for [Anonymous Symbol]
    hal_adc.o(.text.ADC_TempSensorCmd) refers to hal_adc.o(.text.ADC_TempSensorVrefintCmd) for ADC_TempSensorVrefintCmd
    hal_adc.o(.ARM.exidx.text.ADC_TempSensorCmd) refers to hal_adc.o(.text.ADC_TempSensorCmd) for [Anonymous Symbol]
    hal_adc.o(.text.ADC_VrefintCmd) refers to hal_adc.o(.text.ADC_TempSensorVrefintCmd) for ADC_TempSensorVrefintCmd
    hal_adc.o(.ARM.exidx.text.ADC_VrefintCmd) refers to hal_adc.o(.text.ADC_VrefintCmd) for [Anonymous Symbol]
    hal_adc.o(.ARM.exidx.text.exADC_TempSensorVrefintCmd) refers to hal_adc.o(.text.exADC_TempSensorVrefintCmd) for [Anonymous Symbol]
    hal_adc.o(.ARM.exidx.text.ADC_GetFlagStatus) refers to hal_adc.o(.text.ADC_GetFlagStatus) for [Anonymous Symbol]
    hal_adc.o(.ARM.exidx.text.ADC_ClearFlag) refers to hal_adc.o(.text.ADC_ClearFlag) for [Anonymous Symbol]
    hal_adc.o(.ARM.exidx.text.ADC_GetITStatus) refers to hal_adc.o(.text.ADC_GetITStatus) for [Anonymous Symbol]
    hal_adc.o(.ARM.exidx.text.ADC_ClearITPendingBit) refers to hal_adc.o(.text.ADC_ClearITPendingBit) for [Anonymous Symbol]
    hal_adc.o(.ARM.exidx.text.ADC_ANY_CH_Config) refers to hal_adc.o(.text.ADC_ANY_CH_Config) for [Anonymous Symbol]
    hal_adc.o(.ARM.exidx.text.ADC_ANY_NUM_Config) refers to hal_adc.o(.text.ADC_ANY_NUM_Config) for [Anonymous Symbol]
    hal_adc.o(.ARM.exidx.text.ADC_ANY_Cmd) refers to hal_adc.o(.text.ADC_ANY_Cmd) for [Anonymous Symbol]
    hal_adc.o(.ARM.exidx.text.ADC_AutoInjectedConvCmd) refers to hal_adc.o(.text.ADC_AutoInjectedConvCmd) for [Anonymous Symbol]
    hal_adc.o(.ARM.exidx.text.ADC_ExternalTrigInjectedConvertConfig) refers to hal_adc.o(.text.ADC_ExternalTrigInjectedConvertConfig) for [Anonymous Symbol]
    hal_adc.o(.ARM.exidx.text.ADC_ExternalTrigInjectedConvCmd) refers to hal_adc.o(.text.ADC_ExternalTrigInjectedConvCmd) for [Anonymous Symbol]
    hal_adc.o(.ARM.exidx.text.ADC_InjectedConvCmd) refers to hal_adc.o(.text.ADC_InjectedConvCmd) for [Anonymous Symbol]
    hal_adc.o(.ARM.exidx.text.ADC_SoftwareStartInjectedConvCmd) refers to hal_adc.o(.text.ADC_SoftwareStartInjectedConvCmd) for [Anonymous Symbol]
    hal_adc.o(.ARM.exidx.text.ADC_InjectedSequencerConfig) refers to hal_adc.o(.text.ADC_InjectedSequencerConfig) for [Anonymous Symbol]
    hal_adc.o(.ARM.exidx.text.ADC_InjectedSequencerLengthConfig) refers to hal_adc.o(.text.ADC_InjectedSequencerLengthConfig) for [Anonymous Symbol]
    hal_adc.o(.ARM.exidx.text.ADC_InjectedSequencerChannelConfig) refers to hal_adc.o(.text.ADC_InjectedSequencerChannelConfig) for [Anonymous Symbol]
    hal_adc.o(.ARM.exidx.text.ADC_GetInjectedConversionValue) refers to hal_adc.o(.text.ADC_GetInjectedConversionValue) for [Anonymous Symbol]
    hal_adc.o(.ARM.exidx.text.ADC_GetInjectedCurrentConvertedValue) refers to hal_adc.o(.text.ADC_GetInjectedCurrentConvertedValue) for [Anonymous Symbol]
    hal_adc.o(.ARM.exidx.text.ADC_SetInjectedOffset) refers to hal_adc.o(.text.ADC_SetInjectedOffset) for [Anonymous Symbol]
    hal_adc.o(.ARM.exidx.text.ADC_GetChannelConvertedValue) refers to hal_adc.o(.text.ADC_GetChannelConvertedValue) for [Anonymous Symbol]
    hal_adc.o(.ARM.exidx.text.ADC_Calibration) refers to hal_adc.o(.text.ADC_Calibration) for [Anonymous Symbol]
    hal_bkp.o(.ARM.exidx.text.BKP_WriteBackupRegister) refers to hal_bkp.o(.text.BKP_WriteBackupRegister) for [Anonymous Symbol]
    hal_bkp.o(.ARM.exidx.text.BKP_ReadBackupRegister) refers to hal_bkp.o(.text.BKP_ReadBackupRegister) for [Anonymous Symbol]
    hal_bkp.o(.text.exBKP_Init) refers to hal_rcc.o(.text.RCC_APB1PeriphClockCmd) for RCC_APB1PeriphClockCmd
    hal_bkp.o(.ARM.exidx.text.exBKP_Init) refers to hal_bkp.o(.text.exBKP_Init) for [Anonymous Symbol]
    hal_bkp.o(.ARM.exidx.text.exBKP_ImmWrite) refers to hal_bkp.o(.text.exBKP_ImmWrite) for [Anonymous Symbol]
    hal_bkp.o(.ARM.exidx.text.exBKP_ImmRead) refers to hal_bkp.o(.text.exBKP_ImmRead) for [Anonymous Symbol]
    hal_comp.o(.ARM.exidx.text.COMP_DeInit) refers to hal_comp.o(.text.COMP_DeInit) for [Anonymous Symbol]
    hal_comp.o(.ARM.exidx.text.COMP_Init) refers to hal_comp.o(.text.COMP_Init) for [Anonymous Symbol]
    hal_comp.o(.ARM.exidx.text.COMP_StructInit) refers to hal_comp.o(.text.COMP_StructInit) for [Anonymous Symbol]
    hal_comp.o(.ARM.exidx.text.COMP_Cmd) refers to hal_comp.o(.text.COMP_Cmd) for [Anonymous Symbol]
    hal_comp.o(.ARM.exidx.text.COMP_SetCrv) refers to hal_comp.o(.text.COMP_SetCrv) for [Anonymous Symbol]
    hal_comp.o(.ARM.exidx.text.COMP_SwitchCmd) refers to hal_comp.o(.text.COMP_SwitchCmd) for [Anonymous Symbol]
    hal_comp.o(.ARM.exidx.text.COMP_GetOutputLevel) refers to hal_comp.o(.text.COMP_GetOutputLevel) for [Anonymous Symbol]
    hal_comp.o(.ARM.exidx.text.COMP_LockConfig) refers to hal_comp.o(.text.COMP_LockConfig) for [Anonymous Symbol]
    hal_comp.o(.ARM.exidx.text.exCOMP_CrvCmd) refers to hal_comp.o(.text.exCOMP_CrvCmd) for [Anonymous Symbol]
    hal_comp.o(.ARM.exidx.text.exCOMP_SwitchCrv) refers to hal_comp.o(.text.exCOMP_SwitchCrv) for [Anonymous Symbol]
    hal_comp.o(.ARM.exidx.text.exCOMP_CrvSrc) refers to hal_comp.o(.text.exCOMP_CrvSrc) for [Anonymous Symbol]
    hal_comp.o(.ARM.exidx.text.COMP_POLL_Init) refers to hal_comp.o(.text.COMP_POLL_Init) for [Anonymous Symbol]
    hal_crc.o(.ARM.exidx.text.CRC_ResetDR) refers to hal_crc.o(.text.CRC_ResetDR) for [Anonymous Symbol]
    hal_crc.o(.ARM.exidx.text.CRC_CalcCRC) refers to hal_crc.o(.text.CRC_CalcCRC) for [Anonymous Symbol]
    hal_crc.o(.ARM.exidx.text.CRC_CalcBlockCRC) refers to hal_crc.o(.text.CRC_CalcBlockCRC) for [Anonymous Symbol]
    hal_crc.o(.ARM.exidx.text.CRC_GetCRC) refers to hal_crc.o(.text.CRC_GetCRC) for [Anonymous Symbol]
    hal_crc.o(.ARM.exidx.text.CRC_SetIDRegister) refers to hal_crc.o(.text.CRC_SetIDRegister) for [Anonymous Symbol]
    hal_crc.o(.ARM.exidx.text.CRC_GetIDRegister) refers to hal_crc.o(.text.CRC_GetIDRegister) for [Anonymous Symbol]
    hal_crc.o(.ARM.exidx.text.CRC_RevData) refers to hal_crc.o(.text.CRC_RevData) for [Anonymous Symbol]
    hal_dac.o(.text.DAC_DeInit) refers to hal_rcc.o(.text.exRCC_APB1PeriphReset) for exRCC_APB1PeriphReset
    hal_dac.o(.ARM.exidx.text.DAC_DeInit) refers to hal_dac.o(.text.DAC_DeInit) for [Anonymous Symbol]
    hal_dac.o(.ARM.exidx.text.DAC_Init) refers to hal_dac.o(.text.DAC_Init) for [Anonymous Symbol]
    hal_dac.o(.ARM.exidx.text.DAC_StructInit) refers to hal_dac.o(.text.DAC_StructInit) for [Anonymous Symbol]
    hal_dac.o(.ARM.exidx.text.DAC_Cmd) refers to hal_dac.o(.text.DAC_Cmd) for [Anonymous Symbol]
    hal_dac.o(.ARM.exidx.text.DAC_DMACmd) refers to hal_dac.o(.text.DAC_DMACmd) for [Anonymous Symbol]
    hal_dac.o(.ARM.exidx.text.DAC_SoftwareTriggerCmd) refers to hal_dac.o(.text.DAC_SoftwareTriggerCmd) for [Anonymous Symbol]
    hal_dac.o(.ARM.exidx.text.DAC_DualSoftwareTriggerCmd) refers to hal_dac.o(.text.DAC_DualSoftwareTriggerCmd) for [Anonymous Symbol]
    hal_dac.o(.ARM.exidx.text.DAC_WaveGenerationCmd) refers to hal_dac.o(.text.DAC_WaveGenerationCmd) for [Anonymous Symbol]
    hal_dac.o(.ARM.exidx.text.DAC_SetChannel1Data) refers to hal_dac.o(.text.DAC_SetChannel1Data) for [Anonymous Symbol]
    hal_dac.o(.ARM.exidx.text.DAC_SetChannel2Data) refers to hal_dac.o(.text.DAC_SetChannel2Data) for [Anonymous Symbol]
    hal_dac.o(.ARM.exidx.text.DAC_SetDualChannelData) refers to hal_dac.o(.text.DAC_SetDualChannelData) for [Anonymous Symbol]
    hal_dac.o(.ARM.exidx.text.DAC_GetDataOutputValue) refers to hal_dac.o(.text.DAC_GetDataOutputValue) for [Anonymous Symbol]
    hal_dbg.o(.ARM.exidx.text.DBGMCU_Configure) refers to hal_dbg.o(.text.DBGMCU_Configure) for [Anonymous Symbol]
    hal_div.o(.ARM.exidx.text.HWDivider_Init) refers to hal_div.o(.text.HWDivider_Init) for [Anonymous Symbol]
    hal_div.o(.ARM.exidx.text.HWDivider_Calc) refers to hal_div.o(.text.HWDivider_Calc) for [Anonymous Symbol]
    hal_div.o(.text.Divider_Calc) refers to uidiv.o(.text) for __aeabi_uidiv
    hal_div.o(.ARM.exidx.text.Divider_Calc) refers to hal_div.o(.text.Divider_Calc) for [Anonymous Symbol]
    hal_dma.o(.text.DMA_DeInit) refers to uidiv.o(.text) for __aeabi_uidiv
    hal_dma.o(.ARM.exidx.text.DMA_DeInit) refers to hal_dma.o(.text.DMA_DeInit) for [Anonymous Symbol]
    hal_dma.o(.ARM.exidx.text.DMA_Init) refers to hal_dma.o(.text.DMA_Init) for [Anonymous Symbol]
    hal_dma.o(.ARM.exidx.text.DMA_StructInit) refers to hal_dma.o(.text.DMA_StructInit) for [Anonymous Symbol]
    hal_dma.o(.ARM.exidx.text.DMA_Cmd) refers to hal_dma.o(.text.DMA_Cmd) for [Anonymous Symbol]
    hal_dma.o(.ARM.exidx.text.DMA_ITConfig) refers to hal_dma.o(.text.DMA_ITConfig) for [Anonymous Symbol]
    hal_dma.o(.ARM.exidx.text.DMA_SetCurrDataCounter) refers to hal_dma.o(.text.DMA_SetCurrDataCounter) for [Anonymous Symbol]
    hal_dma.o(.ARM.exidx.text.DMA_GetCurrDataCounter) refers to hal_dma.o(.text.DMA_GetCurrDataCounter) for [Anonymous Symbol]
    hal_dma.o(.ARM.exidx.text.DMA_GetFlagStatus) refers to hal_dma.o(.text.DMA_GetFlagStatus) for [Anonymous Symbol]
    hal_dma.o(.ARM.exidx.text.DMA_ClearFlag) refers to hal_dma.o(.text.DMA_ClearFlag) for [Anonymous Symbol]
    hal_dma.o(.ARM.exidx.text.DMA_GetITStatus) refers to hal_dma.o(.text.DMA_GetITStatus) for [Anonymous Symbol]
    hal_dma.o(.ARM.exidx.text.DMA_ClearITPendingBit) refers to hal_dma.o(.text.DMA_ClearITPendingBit) for [Anonymous Symbol]
    hal_dma.o(.ARM.exidx.text.exDMA_SetPeripheralAddress) refers to hal_dma.o(.text.exDMA_SetPeripheralAddress) for [Anonymous Symbol]
    hal_dma.o(.ARM.exidx.text.exDMA_SetTransmitLen) refers to hal_dma.o(.text.exDMA_SetTransmitLen) for [Anonymous Symbol]
    hal_dma.o(.ARM.exidx.text.exDMA_SetMemoryAddress) refers to hal_dma.o(.text.exDMA_SetMemoryAddress) for [Anonymous Symbol]
    hal_dma.o(.text.exDMA_ClearITPendingBit) refers to uidiv.o(.text) for __aeabi_uidiv
    hal_dma.o(.ARM.exidx.text.exDMA_ClearITPendingBit) refers to hal_dma.o(.text.exDMA_ClearITPendingBit) for [Anonymous Symbol]
    hal_exti.o(.text.EXTI_DeInit) refers to hal_exti.o(.text.exEXTI_LineDisable) for exEXTI_LineDisable
    hal_exti.o(.ARM.exidx.text.EXTI_DeInit) refers to hal_exti.o(.text.EXTI_DeInit) for [Anonymous Symbol]
    hal_exti.o(.ARM.exidx.text.exEXTI_LineDisable) refers to hal_exti.o(.text.exEXTI_LineDisable) for [Anonymous Symbol]
    hal_exti.o(.ARM.exidx.text.EXTI_MemoryRemapConfig) refers to hal_exti.o(.text.EXTI_MemoryRemapConfig) for [Anonymous Symbol]
    hal_exti.o(.ARM.exidx.text.EXTI_DMAChannelRemapConfig) refers to hal_exti.o(.text.EXTI_DMAChannelRemapConfig) for [Anonymous Symbol]
    hal_exti.o(.ARM.exidx.text.EXTI_LineConfig) refers to hal_exti.o(.text.EXTI_LineConfig) for [Anonymous Symbol]
    hal_exti.o(.ARM.exidx.text.EXTI_Init) refers to hal_exti.o(.text.EXTI_Init) for [Anonymous Symbol]
    hal_exti.o(.ARM.exidx.text.EXTI_StructInit) refers to hal_exti.o(.text.EXTI_StructInit) for [Anonymous Symbol]
    hal_exti.o(.ARM.exidx.text.EXTI_GenerateSWInterrupt) refers to hal_exti.o(.text.EXTI_GenerateSWInterrupt) for [Anonymous Symbol]
    hal_exti.o(.ARM.exidx.text.EXTI_GetFlagStatus) refers to hal_exti.o(.text.EXTI_GetFlagStatus) for [Anonymous Symbol]
    hal_exti.o(.ARM.exidx.text.EXTI_ClearFlag) refers to hal_exti.o(.text.EXTI_ClearFlag) for [Anonymous Symbol]
    hal_exti.o(.ARM.exidx.text.EXTI_GetITStatus) refers to hal_exti.o(.text.EXTI_GetITStatus) for [Anonymous Symbol]
    hal_exti.o(.ARM.exidx.text.EXTI_ClearITPendingBit) refers to hal_exti.o(.text.EXTI_ClearITPendingBit) for [Anonymous Symbol]
    hal_exti.o(.ARM.exidx.text.exEXTI_GetAllFlagStatus) refers to hal_exti.o(.text.exEXTI_GetAllFlagStatus) for [Anonymous Symbol]
    hal_flash.o(.ARM.exidx.text.FLASH_SetLatency) refers to hal_flash.o(.text.FLASH_SetLatency) for [Anonymous Symbol]
    hal_flash.o(.ARM.exidx.text.FLASH_PrefetchBufferCmd) refers to hal_flash.o(.text.FLASH_PrefetchBufferCmd) for [Anonymous Symbol]
    hal_flash.o(.ARM.exidx.text.FLASH_Lock) refers to hal_flash.o(.text.FLASH_Lock) for [Anonymous Symbol]
    hal_flash.o(.ARM.exidx.text.FLASH_Unlock) refers to hal_flash.o(.text.FLASH_Unlock) for [Anonymous Symbol]
    hal_flash.o(.ARM.exidx.text.FLASH_OPTB_Enable) refers to hal_flash.o(.text.FLASH_OPTB_Enable) for [Anonymous Symbol]
    hal_flash.o(.text.FLASH_ErasePage) refers to hal_flash.o(.text.FLASH_WaitForLastOperation) for FLASH_WaitForLastOperation
    hal_flash.o(.ARM.exidx.text.FLASH_ErasePage) refers to hal_flash.o(.text.FLASH_ErasePage) for [Anonymous Symbol]
    hal_flash.o(.text.FLASH_WaitForLastOperation) refers to hal_flash.o(.text.FLASH_GetStatus) for FLASH_GetStatus
    hal_flash.o(.ARM.exidx.text.FLASH_WaitForLastOperation) refers to hal_flash.o(.text.FLASH_WaitForLastOperation) for [Anonymous Symbol]
    hal_flash.o(.text.FLASH_EraseAllPages) refers to hal_flash.o(.text.FLASH_WaitForLastOperation) for FLASH_WaitForLastOperation
    hal_flash.o(.ARM.exidx.text.FLASH_EraseAllPages) refers to hal_flash.o(.text.FLASH_EraseAllPages) for [Anonymous Symbol]
    hal_flash.o(.text.FLASH_EraseOptionBytes) refers to hal_flash.o(.text.FLASH_OPTB_Enable) for FLASH_OPTB_Enable
    hal_flash.o(.text.FLASH_EraseOptionBytes) refers to hal_flash.o(.text.FLASH_WaitForLastOperation) for FLASH_WaitForLastOperation
    hal_flash.o(.ARM.exidx.text.FLASH_EraseOptionBytes) refers to hal_flash.o(.text.FLASH_EraseOptionBytes) for [Anonymous Symbol]
    hal_flash.o(.text.FLASH_ProgramHalfWord) refers to hal_flash.o(.text.FLASH_WaitForLastOperation) for FLASH_WaitForLastOperation
    hal_flash.o(.ARM.exidx.text.FLASH_ProgramHalfWord) refers to hal_flash.o(.text.FLASH_ProgramHalfWord) for [Anonymous Symbol]
    hal_flash.o(.text.FLASH_ProgramWord) refers to hal_flash.o(.text.FLASH_ProgramHalfWord) for FLASH_ProgramHalfWord
    hal_flash.o(.ARM.exidx.text.FLASH_ProgramWord) refers to hal_flash.o(.text.FLASH_ProgramWord) for [Anonymous Symbol]
    hal_flash.o(.text.FLASH_ProgramOptionByteData) refers to hal_flash.o(.text.FLASH_OPTB_Enable) for FLASH_OPTB_Enable
    hal_flash.o(.text.FLASH_ProgramOptionByteData) refers to hal_flash.o(.text.FLASH_WaitForLastOperation) for FLASH_WaitForLastOperation
    hal_flash.o(.ARM.exidx.text.FLASH_ProgramOptionByteData) refers to hal_flash.o(.text.FLASH_ProgramOptionByteData) for [Anonymous Symbol]
    hal_flash.o(.text.FLASH_ProgramOptionHalfWord) refers to hal_flash.o(.text.FLASH_OPTB_Enable) for FLASH_OPTB_Enable
    hal_flash.o(.text.FLASH_ProgramOptionHalfWord) refers to hal_flash.o(.text.FLASH_WaitForLastOperation) for FLASH_WaitForLastOperation
    hal_flash.o(.ARM.exidx.text.FLASH_ProgramOptionHalfWord) refers to hal_flash.o(.text.FLASH_ProgramOptionHalfWord) for [Anonymous Symbol]
    hal_flash.o(.text.FLASH_EnableWriteProtection) refers to hal_flash.o(.text.FLASH_ProgramOptionHalfWord) for FLASH_ProgramOptionHalfWord
    hal_flash.o(.ARM.exidx.text.FLASH_EnableWriteProtection) refers to hal_flash.o(.text.FLASH_EnableWriteProtection) for [Anonymous Symbol]
    hal_flash.o(.text.FLASH_UserOptionByteConfig) refers to hal_flash.o(.text.FLASH_OPTB_Enable) for FLASH_OPTB_Enable
    hal_flash.o(.text.FLASH_UserOptionByteConfig) refers to hal_flash.o(.text.FLASH_WaitForLastOperation) for FLASH_WaitForLastOperation
    hal_flash.o(.ARM.exidx.text.FLASH_UserOptionByteConfig) refers to hal_flash.o(.text.FLASH_UserOptionByteConfig) for [Anonymous Symbol]
    hal_flash.o(.ARM.exidx.text.FLASH_GetUserOptionByte) refers to hal_flash.o(.text.FLASH_GetUserOptionByte) for [Anonymous Symbol]
    hal_flash.o(.ARM.exidx.text.FLASH_GetWriteProtectionOptionByte) refers to hal_flash.o(.text.FLASH_GetWriteProtectionOptionByte) for [Anonymous Symbol]
    hal_flash.o(.ARM.exidx.text.FLASH_GetPrefetchBufferStatus) refers to hal_flash.o(.text.FLASH_GetPrefetchBufferStatus) for [Anonymous Symbol]
    hal_flash.o(.ARM.exidx.text.FLASH_GetFlagStatus) refers to hal_flash.o(.text.FLASH_GetFlagStatus) for [Anonymous Symbol]
    hal_flash.o(.ARM.exidx.text.FLASH_ClearFlag) refers to hal_flash.o(.text.FLASH_ClearFlag) for [Anonymous Symbol]
    hal_flash.o(.ARM.exidx.text.FLASH_GetStatus) refers to hal_flash.o(.text.FLASH_GetStatus) for [Anonymous Symbol]
    hal_flash.o(.text.exFLASH_EraseEE) refers to hal_flash.o(.text.FLASH_Unlock) for FLASH_Unlock
    hal_flash.o(.text.exFLASH_EraseEE) refers to hal_flash.o(.text.FLASH_ErasePage) for FLASH_ErasePage
    hal_flash.o(.text.exFLASH_EraseEE) refers to hal_flash.o(.text.FLASH_Lock) for FLASH_Lock
    hal_flash.o(.ARM.exidx.text.exFLASH_EraseEE) refers to hal_flash.o(.text.exFLASH_EraseEE) for [Anonymous Symbol]
    hal_flash.o(.text.exFLASH_ProgramEE) refers to hal_flash.o(.text.FLASH_Unlock) for FLASH_Unlock
    hal_flash.o(.text.exFLASH_ProgramEE) refers to hal_flash.o(.text.FLASH_ProgramHalfWord) for FLASH_ProgramHalfWord
    hal_flash.o(.text.exFLASH_ProgramEE) refers to hal_flash.o(.text.FLASH_Lock) for FLASH_Lock
    hal_flash.o(.ARM.exidx.text.exFLASH_ProgramEE) refers to hal_flash.o(.text.exFLASH_ProgramEE) for [Anonymous Symbol]
    hal_flash.o(.ARM.exidx.text.exFLASH_FindEmpty) refers to hal_flash.o(.text.exFLASH_FindEmpty) for [Anonymous Symbol]
    hal_flash.o(.text.exFLASH_Locate) refers to uidiv.o(.text) for __aeabi_uidiv
    hal_flash.o(.text.exFLASH_Locate) refers to hal_flash.o(.text.exFLASH_FindEmpty) for exFLASH_FindEmpty
    hal_flash.o(.ARM.exidx.text.exFLASH_Locate) refers to hal_flash.o(.text.exFLASH_Locate) for [Anonymous Symbol]
    hal_flash.o(.text.exFLASH_WriteEE) refers to hal_flash.o(.text.exFLASH_Locate) for exFLASH_Locate
    hal_flash.o(.text.exFLASH_WriteEE) refers to hal_flash.o(.text.exFLASH_EraseEE) for exFLASH_EraseEE
    hal_flash.o(.text.exFLASH_WriteEE) refers to hal_flash.o(.text.exFLASH_ProgramEE) for exFLASH_ProgramEE
    hal_flash.o(.text.exFLASH_WriteEE) refers to uidiv.o(.text) for __aeabi_uidiv
    hal_flash.o(.ARM.exidx.text.exFLASH_WriteEE) refers to hal_flash.o(.text.exFLASH_WriteEE) for [Anonymous Symbol]
    hal_flash.o(.text.exFLASH_ReadEE) refers to hal_flash.o(.text.exFLASH_Locate) for exFLASH_Locate
    hal_flash.o(.ARM.exidx.text.exFLASH_ReadEE) refers to hal_flash.o(.text.exFLASH_ReadEE) for [Anonymous Symbol]
    hal_gpio.o(.text.GPIO_DeInit) refers to hal_rcc.o(.text.RCC_AHBPeriphClockCmd) for RCC_AHBPeriphClockCmd
    hal_gpio.o(.ARM.exidx.text.GPIO_DeInit) refers to hal_gpio.o(.text.GPIO_DeInit) for [Anonymous Symbol]
    hal_gpio.o(.ARM.exidx.text.GPIO_AFIODeInit) refers to hal_gpio.o(.text.GPIO_AFIODeInit) for [Anonymous Symbol]
    hal_gpio.o(.ARM.exidx.text.GPIO_Init) refers to hal_gpio.o(.text.GPIO_Init) for [Anonymous Symbol]
    hal_gpio.o(.ARM.exidx.text.GPIO_StructInit) refers to hal_gpio.o(.text.GPIO_StructInit) for [Anonymous Symbol]
    hal_gpio.o(.ARM.exidx.text.GPIO_ReadInputDataBit) refers to hal_gpio.o(.text.GPIO_ReadInputDataBit) for [Anonymous Symbol]
    hal_gpio.o(.ARM.exidx.text.GPIO_ReadInputData) refers to hal_gpio.o(.text.GPIO_ReadInputData) for [Anonymous Symbol]
    hal_gpio.o(.ARM.exidx.text.GPIO_ReadOutputDataBit) refers to hal_gpio.o(.text.GPIO_ReadOutputDataBit) for [Anonymous Symbol]
    hal_gpio.o(.ARM.exidx.text.GPIO_ReadOutputData) refers to hal_gpio.o(.text.GPIO_ReadOutputData) for [Anonymous Symbol]
    hal_gpio.o(.ARM.exidx.text.GPIO_SetBits) refers to hal_gpio.o(.text.GPIO_SetBits) for [Anonymous Symbol]
    hal_gpio.o(.ARM.exidx.text.GPIO_ResetBits) refers to hal_gpio.o(.text.GPIO_ResetBits) for [Anonymous Symbol]
    hal_gpio.o(.ARM.exidx.text.GPIO_WriteBit) refers to hal_gpio.o(.text.GPIO_WriteBit) for [Anonymous Symbol]
    hal_gpio.o(.ARM.exidx.text.GPIO_Write) refers to hal_gpio.o(.text.GPIO_Write) for [Anonymous Symbol]
    hal_gpio.o(.ARM.exidx.text.GPIO_PinLock) refers to hal_gpio.o(.text.GPIO_PinLock) for [Anonymous Symbol]
    hal_gpio.o(.ARM.exidx.text.GPIO_PinLockConfig) refers to hal_gpio.o(.text.GPIO_PinLockConfig) for [Anonymous Symbol]
    hal_gpio.o(.ARM.exidx.text.GPIO_PinAFConfig) refers to hal_gpio.o(.text.GPIO_PinAFConfig) for [Anonymous Symbol]
    hal_gpio.o(.ARM.exidx.text.exGPIO_PinAFConfig) refers to hal_gpio.o(.text.exGPIO_PinAFConfig) for [Anonymous Symbol]
    hal_i2c.o(.text.I2C_DeInit) refers to hal_rcc.o(.text.exRCC_APB1PeriphReset) for exRCC_APB1PeriphReset
    hal_i2c.o(.ARM.exidx.text.I2C_DeInit) refers to hal_i2c.o(.text.I2C_DeInit) for [Anonymous Symbol]
    hal_i2c.o(.text.I2C_Init) refers to hal_rcc.o(.text.RCC_GetPCLK1Freq) for RCC_GetPCLK1Freq
    hal_i2c.o(.text.I2C_Init) refers to uidiv.o(.text) for __aeabi_uidiv
    hal_i2c.o(.ARM.exidx.text.I2C_Init) refers to hal_i2c.o(.text.I2C_Init) for [Anonymous Symbol]
    hal_i2c.o(.ARM.exidx.text.I2C_StructInit) refers to hal_i2c.o(.text.I2C_StructInit) for [Anonymous Symbol]
    hal_i2c.o(.ARM.exidx.text.I2C_Cmd) refers to hal_i2c.o(.text.I2C_Cmd) for [Anonymous Symbol]
    hal_i2c.o(.text.I2C_DMACmd) refers to hal_i2c.o(.bss.I2C_DMA_DIR) for I2C_DMA_DIR
    hal_i2c.o(.ARM.exidx.text.I2C_DMACmd) refers to hal_i2c.o(.text.I2C_DMACmd) for [Anonymous Symbol]
    hal_i2c.o(.ARM.exidx.text.I2C_GenerateSTART) refers to hal_i2c.o(.text.I2C_GenerateSTART) for [Anonymous Symbol]
    hal_i2c.o(.ARM.exidx.text.I2C_GenerateSTOP) refers to hal_i2c.o(.text.I2C_GenerateSTOP) for [Anonymous Symbol]
    hal_i2c.o(.ARM.exidx.text.I2C_OwnAddress2Config) refers to hal_i2c.o(.text.I2C_OwnAddress2Config) for [Anonymous Symbol]
    hal_i2c.o(.ARM.exidx.text.I2C_DualAddressCmd) refers to hal_i2c.o(.text.I2C_DualAddressCmd) for [Anonymous Symbol]
    hal_i2c.o(.ARM.exidx.text.I2C_GeneralCallCmd) refers to hal_i2c.o(.text.I2C_GeneralCallCmd) for [Anonymous Symbol]
    hal_i2c.o(.text.I2C_ITConfig) refers to hal_i2c.o(.text.I2C_ReadCmd) for I2C_ReadCmd
    hal_i2c.o(.ARM.exidx.text.I2C_ITConfig) refers to hal_i2c.o(.text.I2C_ITConfig) for [Anonymous Symbol]
    hal_i2c.o(.ARM.exidx.text.I2C_ReadCmd) refers to hal_i2c.o(.text.I2C_ReadCmd) for [Anonymous Symbol]
    hal_i2c.o(.ARM.exidx.text.I2C_SendData) refers to hal_i2c.o(.text.I2C_SendData) for [Anonymous Symbol]
    hal_i2c.o(.text.I2C_ReceiveData) refers to hal_i2c.o(.bss.I2C_CMD_DIR) for [Anonymous Symbol]
    hal_i2c.o(.ARM.exidx.text.I2C_ReceiveData) refers to hal_i2c.o(.text.I2C_ReceiveData) for [Anonymous Symbol]
    hal_i2c.o(.ARM.exidx.text.I2C_Send7bitAddress) refers to hal_i2c.o(.text.I2C_Send7bitAddress) for [Anonymous Symbol]
    hal_i2c.o(.ARM.exidx.text.I2C_ReadRegister) refers to hal_i2c.o(.text.I2C_ReadRegister) for [Anonymous Symbol]
    hal_i2c.o(.ARM.exidx.text.I2C_GetLastEvent) refers to hal_i2c.o(.text.I2C_GetLastEvent) for [Anonymous Symbol]
    hal_i2c.o(.text.I2C_CheckEvent) refers to hal_i2c.o(.bss.I2C_CMD_DIR) for [Anonymous Symbol]
    hal_i2c.o(.ARM.exidx.text.I2C_CheckEvent) refers to hal_i2c.o(.text.I2C_CheckEvent) for [Anonymous Symbol]
    hal_i2c.o(.text.I2C_GetFlagStatus) refers to hal_i2c.o(.bss.I2C_CMD_DIR) for [Anonymous Symbol]
    hal_i2c.o(.ARM.exidx.text.I2C_GetFlagStatus) refers to hal_i2c.o(.text.I2C_GetFlagStatus) for [Anonymous Symbol]
    hal_i2c.o(.ARM.exidx.text.I2C_ClearFlag) refers to hal_i2c.o(.text.I2C_ClearFlag) for [Anonymous Symbol]
    hal_i2c.o(.ARM.exidx.text.I2C_GetITStatus) refers to hal_i2c.o(.text.I2C_GetITStatus) for [Anonymous Symbol]
    hal_i2c.o(.ARM.exidx.text.I2C_ClearITPendingBit) refers to hal_i2c.o(.text.I2C_ClearITPendingBit) for [Anonymous Symbol]
    hal_i2c.o(.ARM.exidx.text.I2C_SendSlaveAddress) refers to hal_i2c.o(.text.I2C_SendSlaveAddress) for [Anonymous Symbol]
    hal_i2c.o(.ARM.exidx.text.I2C_SlaveConfigure) refers to hal_i2c.o(.text.I2C_SlaveConfigure) for [Anonymous Symbol]
    hal_i2c.o(.ARM.exidx.text.I2C_DMAConfigure) refers to hal_i2c.o(.text.I2C_DMAConfigure) for [Anonymous Symbol]
    hal_i2c.o(.ARM.exidx.text.I2C_SlaveReceivedAddressMask) refers to hal_i2c.o(.text.I2C_SlaveReceivedAddressMask) for [Anonymous Symbol]
    hal_i2c.o(.ARM.exidx.text.I2C_GetSlaveReceivedAddr) refers to hal_i2c.o(.text.I2C_GetSlaveReceivedAddr) for [Anonymous Symbol]
    hal_iwdg.o(.ARM.exidx.text.IWDG_WriteAccessCmd) refers to hal_iwdg.o(.text.IWDG_WriteAccessCmd) for [Anonymous Symbol]
    hal_iwdg.o(.text.IWDG_SetPrescaler) refers to hal_iwdg.o(.text.PVU_CheckStatus) for PVU_CheckStatus
    hal_iwdg.o(.ARM.exidx.text.IWDG_SetPrescaler) refers to hal_iwdg.o(.text.IWDG_SetPrescaler) for [Anonymous Symbol]
    hal_iwdg.o(.text.PVU_CheckStatus) refers to hal_iwdg.o(.text.IWDG_GetFlagStatus) for IWDG_GetFlagStatus
    hal_iwdg.o(.ARM.exidx.text.PVU_CheckStatus) refers to hal_iwdg.o(.text.PVU_CheckStatus) for [Anonymous Symbol]
    hal_iwdg.o(.text.IWDG_SetReload) refers to hal_iwdg.o(.text.RVU_CheckStatus) for RVU_CheckStatus
    hal_iwdg.o(.ARM.exidx.text.IWDG_SetReload) refers to hal_iwdg.o(.text.IWDG_SetReload) for [Anonymous Symbol]
    hal_iwdg.o(.text.RVU_CheckStatus) refers to hal_iwdg.o(.text.IWDG_GetFlagStatus) for IWDG_GetFlagStatus
    hal_iwdg.o(.ARM.exidx.text.RVU_CheckStatus) refers to hal_iwdg.o(.text.RVU_CheckStatus) for [Anonymous Symbol]
    hal_iwdg.o(.ARM.exidx.text.IWDG_GetReload) refers to hal_iwdg.o(.text.IWDG_GetReload) for [Anonymous Symbol]
    hal_iwdg.o(.ARM.exidx.text.IWDG_ReloadCounter) refers to hal_iwdg.o(.text.IWDG_ReloadCounter) for [Anonymous Symbol]
    hal_iwdg.o(.ARM.exidx.text.IWDG_Enable) refers to hal_iwdg.o(.text.IWDG_Enable) for [Anonymous Symbol]
    hal_iwdg.o(.ARM.exidx.text.IWDG_GetFlagStatus) refers to hal_iwdg.o(.text.IWDG_GetFlagStatus) for [Anonymous Symbol]
    hal_iwdg.o(.text.IVU_CheckStatus) refers to hal_iwdg.o(.text.IWDG_GetFlagStatus) for IWDG_GetFlagStatus
    hal_iwdg.o(.ARM.exidx.text.IVU_CheckStatus) refers to hal_iwdg.o(.text.IVU_CheckStatus) for [Anonymous Symbol]
    hal_iwdg.o(.ARM.exidx.text.IWDG_OverflowConfig) refers to hal_iwdg.o(.text.IWDG_OverflowConfig) for [Anonymous Symbol]
    hal_iwdg.o(.ARM.exidx.text.IWDG_ClearITPendingBit) refers to hal_iwdg.o(.text.IWDG_ClearITPendingBit) for [Anonymous Symbol]
    hal_iwdg.o(.ARM.exidx.text.IWDG_ClearIT) refers to hal_iwdg.o(.text.IWDG_ClearIT) for [Anonymous Symbol]
    hal_iwdg.o(.ARM.exidx.text.IWDG_EnableIT) refers to hal_iwdg.o(.text.IWDG_EnableIT) for [Anonymous Symbol]
    hal_iwdg.o(.ARM.exidx.text.IWDG_Reset) refers to hal_iwdg.o(.text.IWDG_Reset) for [Anonymous Symbol]
    hal_iwdg.o(.ARM.exidx.text.IWDG_SetIGen) refers to hal_iwdg.o(.text.IWDG_SetIGen) for [Anonymous Symbol]
    hal_iwdg.o(.ARM.exidx.text.IWDG_GetCnt) refers to hal_iwdg.o(.text.IWDG_GetCnt) for [Anonymous Symbol]
    hal_iwdg.o(.ARM.exidx.text.IWDG_GetPS) refers to hal_iwdg.o(.text.IWDG_GetPS) for [Anonymous Symbol]
    hal_misc.o(.ARM.exidx.text.NVIC_Init) refers to hal_misc.o(.text.NVIC_Init) for [Anonymous Symbol]
    hal_misc.o(.ARM.exidx.text.exNVIC_Init) refers to hal_misc.o(.text.exNVIC_Init) for [Anonymous Symbol]
    hal_misc.o(.ARM.exidx.text.NVIC_SystemLPConfig) refers to hal_misc.o(.text.NVIC_SystemLPConfig) for [Anonymous Symbol]
    hal_misc.o(.ARM.exidx.text.SysTick_CLKSourceConfig) refers to hal_misc.o(.text.SysTick_CLKSourceConfig) for [Anonymous Symbol]
    hal_opamp.o(.ARM.exidx.text.OPAMP_Configure) refers to hal_opamp.o(.text.OPAMP_Configure) for [Anonymous Symbol]
    hal_opamp.o(.ARM.exidx.text.OPAMP_Cmd) refers to hal_opamp.o(.text.OPAMP_Cmd) for [Anonymous Symbol]
    hal_pwr.o(.text.PWR_DeInit) refers to hal_rcc.o(.text.exRCC_APB1PeriphReset) for exRCC_APB1PeriphReset
    hal_pwr.o(.ARM.exidx.text.PWR_DeInit) refers to hal_pwr.o(.text.PWR_DeInit) for [Anonymous Symbol]
    hal_pwr.o(.ARM.exidx.text.PWR_BackupAccessCmd) refers to hal_pwr.o(.text.PWR_BackupAccessCmd) for [Anonymous Symbol]
    hal_pwr.o(.ARM.exidx.text.PWR_PVDCmd) refers to hal_pwr.o(.text.PWR_PVDCmd) for [Anonymous Symbol]
    hal_pwr.o(.ARM.exidx.text.PWR_PVDLevelConfig) refers to hal_pwr.o(.text.PWR_PVDLevelConfig) for [Anonymous Symbol]
    hal_pwr.o(.ARM.exidx.text.PWR_WakeUpPinCmd) refers to hal_pwr.o(.text.PWR_WakeUpPinCmd) for [Anonymous Symbol]
    hal_pwr.o(.ARM.exidx.text.PWR_EnterSTOPMode) refers to hal_pwr.o(.text.PWR_EnterSTOPMode) for [Anonymous Symbol]
    hal_pwr.o(.ARM.exidx.text.PWR_EnterSTANDBYMode) refers to hal_pwr.o(.text.PWR_EnterSTANDBYMode) for [Anonymous Symbol]
    hal_pwr.o(.ARM.exidx.text.PWR_GetFlagStatus) refers to hal_pwr.o(.text.PWR_GetFlagStatus) for [Anonymous Symbol]
    hal_pwr.o(.ARM.exidx.text.PWR_ClearFlag) refers to hal_pwr.o(.text.PWR_ClearFlag) for [Anonymous Symbol]
    hal_rcc.o(.ARM.exidx.text.RCC_DeInit) refers to hal_rcc.o(.text.RCC_DeInit) for [Anonymous Symbol]
    hal_rcc.o(.ARM.exidx.text.RCC_HSEConfig) refers to hal_rcc.o(.text.RCC_HSEConfig) for [Anonymous Symbol]
    hal_rcc.o(.ARM.exidx.text.RCC_GetFlagStatus) refers to hal_rcc.o(.text.RCC_GetFlagStatus) for [Anonymous Symbol]
    hal_rcc.o(.text.RCC_WaitForHSEStartUp) refers to hal_rcc.o(.text.RCC_GetFlagStatus) for RCC_GetFlagStatus
    hal_rcc.o(.ARM.exidx.text.RCC_WaitForHSEStartUp) refers to hal_rcc.o(.text.RCC_WaitForHSEStartUp) for [Anonymous Symbol]
    hal_rcc.o(.text.RCC_WaitForFlagStartUp) refers to hal_rcc.o(.text.RCC_GetFlagStatus) for RCC_GetFlagStatus
    hal_rcc.o(.ARM.exidx.text.RCC_WaitForFlagStartUp) refers to hal_rcc.o(.text.RCC_WaitForFlagStartUp) for [Anonymous Symbol]
    hal_rcc.o(.ARM.exidx.text.RCC_HSICmd) refers to hal_rcc.o(.text.RCC_HSICmd) for [Anonymous Symbol]
    hal_rcc.o(.ARM.exidx.text.RCC_SYSCLKConfig) refers to hal_rcc.o(.text.RCC_SYSCLKConfig) for [Anonymous Symbol]
    hal_rcc.o(.ARM.exidx.text.RCC_PLLDMDNConfig) refers to hal_rcc.o(.text.RCC_PLLDMDNConfig) for [Anonymous Symbol]
    hal_rcc.o(.ARM.exidx.text.RCC_PLLCmd) refers to hal_rcc.o(.text.RCC_PLLCmd) for [Anonymous Symbol]
    hal_rcc.o(.text.RCC_PLLConfig) refers to hal_rcc.o(.text.RCC_PLLDMDNConfig) for RCC_PLLDMDNConfig
    hal_rcc.o(.text.RCC_PLLConfig) refers to hal_rcc.o(.rodata.RCC_PLLConfig.DNDM_Item) for [Anonymous Symbol]
    hal_rcc.o(.ARM.exidx.text.RCC_PLLConfig) refers to hal_rcc.o(.text.RCC_PLLConfig) for [Anonymous Symbol]
    hal_rcc.o(.ARM.exidx.text.RCC_GetSYSCLKSource) refers to hal_rcc.o(.text.RCC_GetSYSCLKSource) for [Anonymous Symbol]
    hal_rcc.o(.ARM.exidx.text.RCC_HCLKConfig) refers to hal_rcc.o(.text.RCC_HCLKConfig) for [Anonymous Symbol]
    hal_rcc.o(.ARM.exidx.text.RCC_PCLK1Config) refers to hal_rcc.o(.text.RCC_PCLK1Config) for [Anonymous Symbol]
    hal_rcc.o(.ARM.exidx.text.RCC_PCLK2Config) refers to hal_rcc.o(.text.RCC_PCLK2Config) for [Anonymous Symbol]
    hal_rcc.o(.ARM.exidx.text.RCC_ADCCLKConfig) refers to hal_rcc.o(.text.RCC_ADCCLKConfig) for [Anonymous Symbol]
    hal_rcc.o(.ARM.exidx.text.RCC_LSICmd) refers to hal_rcc.o(.text.RCC_LSICmd) for [Anonymous Symbol]
    hal_rcc.o(.text.RCC_GetSysClockFreq) refers to uidiv.o(.text) for __aeabi_uidiv
    hal_rcc.o(.ARM.exidx.text.RCC_GetSysClockFreq) refers to hal_rcc.o(.text.RCC_GetSysClockFreq) for [Anonymous Symbol]
    hal_rcc.o(.text.RCC_GetHCLKFreq) refers to hal_rcc.o(.text.RCC_GetSysClockFreq) for RCC_GetSysClockFreq
    hal_rcc.o(.text.RCC_GetHCLKFreq) refers to hal_rcc.o(.rodata.tbPresc) for tbPresc
    hal_rcc.o(.ARM.exidx.text.RCC_GetHCLKFreq) refers to hal_rcc.o(.text.RCC_GetHCLKFreq) for [Anonymous Symbol]
    hal_rcc.o(.text.RCC_GetPCLK1Freq) refers to hal_rcc.o(.text.RCC_GetHCLKFreq) for RCC_GetHCLKFreq
    hal_rcc.o(.text.RCC_GetPCLK1Freq) refers to hal_rcc.o(.rodata.tbPresc) for tbPresc
    hal_rcc.o(.ARM.exidx.text.RCC_GetPCLK1Freq) refers to hal_rcc.o(.text.RCC_GetPCLK1Freq) for [Anonymous Symbol]
    hal_rcc.o(.text.RCC_GetPCLK2Freq) refers to hal_rcc.o(.text.RCC_GetHCLKFreq) for RCC_GetHCLKFreq
    hal_rcc.o(.text.RCC_GetPCLK2Freq) refers to hal_rcc.o(.rodata.tbPresc) for tbPresc
    hal_rcc.o(.ARM.exidx.text.RCC_GetPCLK2Freq) refers to hal_rcc.o(.text.RCC_GetPCLK2Freq) for [Anonymous Symbol]
    hal_rcc.o(.text.RCC_GetClocksFreq) refers to hal_rcc.o(.text.RCC_GetSysClockFreq) for RCC_GetSysClockFreq
    hal_rcc.o(.text.RCC_GetClocksFreq) refers to hal_rcc.o(.text.RCC_GetHCLKFreq) for RCC_GetHCLKFreq
    hal_rcc.o(.text.RCC_GetClocksFreq) refers to hal_rcc.o(.text.RCC_GetPCLK1Freq) for RCC_GetPCLK1Freq
    hal_rcc.o(.text.RCC_GetClocksFreq) refers to hal_rcc.o(.text.RCC_GetPCLK2Freq) for RCC_GetPCLK2Freq
    hal_rcc.o(.text.RCC_GetClocksFreq) refers to uidiv.o(.text) for __aeabi_uidiv
    hal_rcc.o(.ARM.exidx.text.RCC_GetClocksFreq) refers to hal_rcc.o(.text.RCC_GetClocksFreq) for [Anonymous Symbol]
    hal_rcc.o(.ARM.exidx.text.RCC_AHBPeriphClockCmd) refers to hal_rcc.o(.text.RCC_AHBPeriphClockCmd) for [Anonymous Symbol]
    hal_rcc.o(.ARM.exidx.text.RCC_APB2PeriphClockCmd) refers to hal_rcc.o(.text.RCC_APB2PeriphClockCmd) for [Anonymous Symbol]
    hal_rcc.o(.ARM.exidx.text.RCC_APB1PeriphClockCmd) refers to hal_rcc.o(.text.RCC_APB1PeriphClockCmd) for [Anonymous Symbol]
    hal_rcc.o(.ARM.exidx.text.RCC_APB2PeriphResetCmd) refers to hal_rcc.o(.text.RCC_APB2PeriphResetCmd) for [Anonymous Symbol]
    hal_rcc.o(.ARM.exidx.text.RCC_APB1PeriphResetCmd) refers to hal_rcc.o(.text.RCC_APB1PeriphResetCmd) for [Anonymous Symbol]
    hal_rcc.o(.ARM.exidx.text.RCC_AHBPeriphResetCmd) refers to hal_rcc.o(.text.RCC_AHBPeriphResetCmd) for [Anonymous Symbol]
    hal_rcc.o(.ARM.exidx.text.RCC_BackupResetCmd) refers to hal_rcc.o(.text.RCC_BackupResetCmd) for [Anonymous Symbol]
    hal_rcc.o(.ARM.exidx.text.RCC_ClockSecuritySystemCmd) refers to hal_rcc.o(.text.RCC_ClockSecuritySystemCmd) for [Anonymous Symbol]
    hal_rcc.o(.ARM.exidx.text.RCC_MCOConfig) refers to hal_rcc.o(.text.RCC_MCOConfig) for [Anonymous Symbol]
    hal_rcc.o(.ARM.exidx.text.RCC_ClearFlag) refers to hal_rcc.o(.text.RCC_ClearFlag) for [Anonymous Symbol]
    hal_rcc.o(.ARM.exidx.text.RCC_ITConfig) refers to hal_rcc.o(.text.RCC_ITConfig) for [Anonymous Symbol]
    hal_rcc.o(.ARM.exidx.text.RCC_GetITStatus) refers to hal_rcc.o(.text.RCC_GetITStatus) for [Anonymous Symbol]
    hal_rcc.o(.ARM.exidx.text.RCC_ClearITPendingBit) refers to hal_rcc.o(.text.RCC_ClearITPendingBit) for [Anonymous Symbol]
    hal_rcc.o(.ARM.exidx.text.RCC_APB1PeriphReset) refers to hal_rcc.o(.text.RCC_APB1PeriphReset) for [Anonymous Symbol]
    hal_rcc.o(.ARM.exidx.text.RCC_APB2PeriphReset) refers to hal_rcc.o(.text.RCC_APB2PeriphReset) for [Anonymous Symbol]
    hal_rcc.o(.ARM.exidx.text.RCC_AHBPeriphReset) refers to hal_rcc.o(.text.RCC_AHBPeriphReset) for [Anonymous Symbol]
    hal_rcc.o(.ARM.exidx.text.exRCC_APB1PeriphReset) refers to hal_rcc.o(.text.exRCC_APB1PeriphReset) for [Anonymous Symbol]
    hal_rcc.o(.ARM.exidx.text.exRCC_BackupReset) refers to hal_rcc.o(.text.exRCC_BackupReset) for [Anonymous Symbol]
    hal_rcc.o(.ARM.exidx.text.exRCC_APB2PeriphReset) refers to hal_rcc.o(.text.exRCC_APB2PeriphReset) for [Anonymous Symbol]
    hal_rcc.o(.ARM.exidx.text.exRCC_AHBPeriphReset) refers to hal_rcc.o(.text.exRCC_AHBPeriphReset) for [Anonymous Symbol]
    hal_rcc.o(.ARM.exidx.text.exRCC_SystickDisable) refers to hal_rcc.o(.text.exRCC_SystickDisable) for [Anonymous Symbol]
    hal_rcc.o(.text.exRCC_SystickEnable) refers to hal_rcc.o(.text.RCC_GetHCLKFreq) for RCC_GetHCLKFreq
    hal_rcc.o(.text.exRCC_SystickEnable) refers to uidiv.o(.text) for __aeabi_uidiv
    hal_rcc.o(.text.exRCC_SystickEnable) refers to hal_rcc.o(.text.SysTick_Config) for SysTick_Config
    hal_rcc.o(.ARM.exidx.text.exRCC_SystickEnable) refers to hal_rcc.o(.text.exRCC_SystickEnable) for [Anonymous Symbol]
    hal_rcc.o(.text.SysTick_Config) refers to hal_rcc.o(.text.__NVIC_SetPriority) for __NVIC_SetPriority
    hal_rcc.o(.ARM.exidx.text.SysTick_Config) refers to hal_rcc.o(.text.SysTick_Config) for [Anonymous Symbol]
    hal_rcc.o(.ARM.exidx.text.RCC_ADC_ClockCmd) refers to hal_rcc.o(.text.RCC_ADC_ClockCmd) for [Anonymous Symbol]
    hal_rcc.o(.ARM.exidx.text.RCC_COMP_ClockCmd) refers to hal_rcc.o(.text.RCC_COMP_ClockCmd) for [Anonymous Symbol]
    hal_rcc.o(.ARM.exidx.text.RCC_CRC_ClockCmd) refers to hal_rcc.o(.text.RCC_CRC_ClockCmd) for [Anonymous Symbol]
    hal_rcc.o(.ARM.exidx.text.RCC_DIV_ClockCmd) refers to hal_rcc.o(.text.RCC_DIV_ClockCmd) for [Anonymous Symbol]
    hal_rcc.o(.ARM.exidx.text.RCC_DMA_ClockCmd) refers to hal_rcc.o(.text.RCC_DMA_ClockCmd) for [Anonymous Symbol]
    hal_rcc.o(.ARM.exidx.text.RCC_GPIO_ClockCmd) refers to hal_rcc.o(.text.RCC_GPIO_ClockCmd) for [Anonymous Symbol]
    hal_rcc.o(.ARM.exidx.text.RCC_I2C_ClockCmd) refers to hal_rcc.o(.text.RCC_I2C_ClockCmd) for [Anonymous Symbol]
    hal_rcc.o(.ARM.exidx.text.RCC_SPI_ClockCmd) refers to hal_rcc.o(.text.RCC_SPI_ClockCmd) for [Anonymous Symbol]
    hal_rcc.o(.ARM.exidx.text.RCC_UART_ClockCmd) refers to hal_rcc.o(.text.RCC_UART_ClockCmd) for [Anonymous Symbol]
    hal_rcc.o(.ARM.exidx.text.__NVIC_SetPriority) refers to hal_rcc.o(.text.__NVIC_SetPriority) for [Anonymous Symbol]
    hal_spi.o(.text.SPI_DeInit) refers to hal_rcc.o(.text.RCC_APB1PeriphResetCmd) for RCC_APB1PeriphResetCmd
    hal_spi.o(.text.SPI_DeInit) refers to hal_rcc.o(.text.RCC_APB2PeriphResetCmd) for RCC_APB2PeriphResetCmd
    hal_spi.o(.ARM.exidx.text.SPI_DeInit) refers to hal_spi.o(.text.SPI_DeInit) for [Anonymous Symbol]
    hal_spi.o(.ARM.exidx.text.SPI_Init) refers to hal_spi.o(.text.SPI_Init) for [Anonymous Symbol]
    hal_spi.o(.ARM.exidx.text.SPI_StructInit) refers to hal_spi.o(.text.SPI_StructInit) for [Anonymous Symbol]
    hal_spi.o(.ARM.exidx.text.SPI_Cmd) refers to hal_spi.o(.text.SPI_Cmd) for [Anonymous Symbol]
    hal_spi.o(.ARM.exidx.text.SPI_ITConfig) refers to hal_spi.o(.text.SPI_ITConfig) for [Anonymous Symbol]
    hal_spi.o(.ARM.exidx.text.SPI_DMACmd) refers to hal_spi.o(.text.SPI_DMACmd) for [Anonymous Symbol]
    hal_spi.o(.ARM.exidx.text.SPI_FifoTrigger) refers to hal_spi.o(.text.SPI_FifoTrigger) for [Anonymous Symbol]
    hal_spi.o(.ARM.exidx.text.SPI_SendData) refers to hal_spi.o(.text.SPI_SendData) for [Anonymous Symbol]
    hal_spi.o(.ARM.exidx.text.SPI_ReceiveData) refers to hal_spi.o(.text.SPI_ReceiveData) for [Anonymous Symbol]
    hal_spi.o(.ARM.exidx.text.SPI_CSInternalSelected) refers to hal_spi.o(.text.SPI_CSInternalSelected) for [Anonymous Symbol]
    hal_spi.o(.ARM.exidx.text.SPI_NSSInternalSoftwareConfig) refers to hal_spi.o(.text.SPI_NSSInternalSoftwareConfig) for [Anonymous Symbol]
    hal_spi.o(.ARM.exidx.text.SPI_DataSizeConfig) refers to hal_spi.o(.text.SPI_DataSizeConfig) for [Anonymous Symbol]
    hal_spi.o(.ARM.exidx.text.SPI_DataSizeTypeConfig) refers to hal_spi.o(.text.SPI_DataSizeTypeConfig) for [Anonymous Symbol]
    hal_spi.o(.ARM.exidx.text.SPI_BiDirectionalLineConfig) refers to hal_spi.o(.text.SPI_BiDirectionalLineConfig) for [Anonymous Symbol]
    hal_spi.o(.ARM.exidx.text.SPI_GetFlagStatus) refers to hal_spi.o(.text.SPI_GetFlagStatus) for [Anonymous Symbol]
    hal_spi.o(.ARM.exidx.text.SPI_GetITStatus) refers to hal_spi.o(.text.SPI_GetITStatus) for [Anonymous Symbol]
    hal_spi.o(.ARM.exidx.text.SPI_ClearITPendingBit) refers to hal_spi.o(.text.SPI_ClearITPendingBit) for [Anonymous Symbol]
    hal_spi.o(.ARM.exidx.text.SPI_RxBytes) refers to hal_spi.o(.text.SPI_RxBytes) for [Anonymous Symbol]
    hal_spi.o(.ARM.exidx.text.SPI_SlaveAdjust) refers to hal_spi.o(.text.SPI_SlaveAdjust) for [Anonymous Symbol]
    hal_spi.o(.ARM.exidx.text.exSPI_ITCmd) refers to hal_spi.o(.text.exSPI_ITCmd) for [Anonymous Symbol]
    hal_spi.o(.ARM.exidx.text.exSPI_ITConfig) refers to hal_spi.o(.text.exSPI_ITConfig) for [Anonymous Symbol]
    hal_spi.o(.ARM.exidx.text.exSPI_DMACmd) refers to hal_spi.o(.text.exSPI_DMACmd) for [Anonymous Symbol]
    hal_spi.o(.ARM.exidx.text.exSPI_CSInternalSelected) refers to hal_spi.o(.text.exSPI_CSInternalSelected) for [Anonymous Symbol]
    hal_spi.o(.ARM.exidx.text.exSPI_DataEdgeAdjust) refers to hal_spi.o(.text.exSPI_DataEdgeAdjust) for [Anonymous Symbol]
    hal_spi.o(.ARM.exidx.text.I2S_Cmd) refers to hal_spi.o(.text.I2S_Cmd) for [Anonymous Symbol]
    hal_spi.o(.text.I2S_Init) refers to hal_rcc.o(.text.RCC_GetClocksFreq) for RCC_GetClocksFreq
    hal_spi.o(.text.I2S_Init) refers to uidiv.o(.text) for __aeabi_uidiv
    hal_spi.o(.ARM.exidx.text.I2S_Init) refers to hal_spi.o(.text.I2S_Init) for [Anonymous Symbol]
    hal_sqrt.o(.ARM.exidx.text.HWRoot_Set) refers to hal_sqrt.o(.text.HWRoot_Set) for [Anonymous Symbol]
    hal_sqrt.o(.ARM.exidx.text.HWRoot_Get) refers to hal_sqrt.o(.text.HWRoot_Get) for [Anonymous Symbol]
    hal_tim.o(.text.TIM_DeInit) refers to hal_rcc.o(.text.exRCC_APB2PeriphReset) for exRCC_APB2PeriphReset
    hal_tim.o(.text.TIM_DeInit) refers to hal_rcc.o(.text.exRCC_APB1PeriphReset) for exRCC_APB1PeriphReset
    hal_tim.o(.ARM.exidx.text.TIM_DeInit) refers to hal_tim.o(.text.TIM_DeInit) for [Anonymous Symbol]
    hal_tim.o(.ARM.exidx.text.TIM_TimeBaseInit) refers to hal_tim.o(.text.TIM_TimeBaseInit) for [Anonymous Symbol]
    hal_tim.o(.ARM.exidx.text.TIM_OC1Init) refers to hal_tim.o(.text.TIM_OC1Init) for [Anonymous Symbol]
    hal_tim.o(.ARM.exidx.text.TIM_OC2Init) refers to hal_tim.o(.text.TIM_OC2Init) for [Anonymous Symbol]
    hal_tim.o(.ARM.exidx.text.TIM_OC3Init) refers to hal_tim.o(.text.TIM_OC3Init) for [Anonymous Symbol]
    hal_tim.o(.ARM.exidx.text.TIM_OC4Init) refers to hal_tim.o(.text.TIM_OC4Init) for [Anonymous Symbol]
    hal_tim.o(.text.TIM_ICInit) refers to hal_tim.o(.text.TI1_Configure) for TI1_Configure
    hal_tim.o(.text.TIM_ICInit) refers to hal_tim.o(.text.TIM_SetIC1Prescaler) for TIM_SetIC1Prescaler
    hal_tim.o(.text.TIM_ICInit) refers to hal_tim.o(.text.TI2_Configure) for TI2_Configure
    hal_tim.o(.text.TIM_ICInit) refers to hal_tim.o(.text.TIM_SetIC2Prescaler) for TIM_SetIC2Prescaler
    hal_tim.o(.text.TIM_ICInit) refers to hal_tim.o(.text.TI3_Configure) for TI3_Configure
    hal_tim.o(.text.TIM_ICInit) refers to hal_tim.o(.text.TIM_SetIC3Prescaler) for TIM_SetIC3Prescaler
    hal_tim.o(.text.TIM_ICInit) refers to hal_tim.o(.text.TI4_Configure) for TI4_Configure
    hal_tim.o(.text.TIM_ICInit) refers to hal_tim.o(.text.TIM_SetIC4Prescaler) for TIM_SetIC4Prescaler
    hal_tim.o(.ARM.exidx.text.TIM_ICInit) refers to hal_tim.o(.text.TIM_ICInit) for [Anonymous Symbol]
    hal_tim.o(.ARM.exidx.text.TI1_Configure) refers to hal_tim.o(.text.TI1_Configure) for [Anonymous Symbol]
    hal_tim.o(.ARM.exidx.text.TIM_SetIC1Prescaler) refers to hal_tim.o(.text.TIM_SetIC1Prescaler) for [Anonymous Symbol]
    hal_tim.o(.ARM.exidx.text.TI2_Configure) refers to hal_tim.o(.text.TI2_Configure) for [Anonymous Symbol]
    hal_tim.o(.ARM.exidx.text.TIM_SetIC2Prescaler) refers to hal_tim.o(.text.TIM_SetIC2Prescaler) for [Anonymous Symbol]
    hal_tim.o(.ARM.exidx.text.TI3_Configure) refers to hal_tim.o(.text.TI3_Configure) for [Anonymous Symbol]
    hal_tim.o(.ARM.exidx.text.TIM_SetIC3Prescaler) refers to hal_tim.o(.text.TIM_SetIC3Prescaler) for [Anonymous Symbol]
    hal_tim.o(.ARM.exidx.text.TI4_Configure) refers to hal_tim.o(.text.TI4_Configure) for [Anonymous Symbol]
    hal_tim.o(.ARM.exidx.text.TIM_SetIC4Prescaler) refers to hal_tim.o(.text.TIM_SetIC4Prescaler) for [Anonymous Symbol]
    hal_tim.o(.text.TIM_PWMIConfig) refers to hal_tim.o(.text.TI1_Configure) for TI1_Configure
    hal_tim.o(.text.TIM_PWMIConfig) refers to hal_tim.o(.text.TIM_SetIC1Prescaler) for TIM_SetIC1Prescaler
    hal_tim.o(.text.TIM_PWMIConfig) refers to hal_tim.o(.text.TI2_Configure) for TI2_Configure
    hal_tim.o(.text.TIM_PWMIConfig) refers to hal_tim.o(.text.TIM_SetIC2Prescaler) for TIM_SetIC2Prescaler
    hal_tim.o(.ARM.exidx.text.TIM_PWMIConfig) refers to hal_tim.o(.text.TIM_PWMIConfig) for [Anonymous Symbol]
    hal_tim.o(.ARM.exidx.text.TIM_BDTRConfig) refers to hal_tim.o(.text.TIM_BDTRConfig) for [Anonymous Symbol]
    hal_tim.o(.ARM.exidx.text.TIM_TimeBaseStructInit) refers to hal_tim.o(.text.TIM_TimeBaseStructInit) for [Anonymous Symbol]
    hal_tim.o(.ARM.exidx.text.TIM_OCStructInit) refers to hal_tim.o(.text.TIM_OCStructInit) for [Anonymous Symbol]
    hal_tim.o(.ARM.exidx.text.TIM_ICStructInit) refers to hal_tim.o(.text.TIM_ICStructInit) for [Anonymous Symbol]
    hal_tim.o(.ARM.exidx.text.TIM_BDTRStructInit) refers to hal_tim.o(.text.TIM_BDTRStructInit) for [Anonymous Symbol]
    hal_tim.o(.ARM.exidx.text.TIM_Cmd) refers to hal_tim.o(.text.TIM_Cmd) for [Anonymous Symbol]
    hal_tim.o(.ARM.exidx.text.TIM_CtrlPWMOutputs) refers to hal_tim.o(.text.TIM_CtrlPWMOutputs) for [Anonymous Symbol]
    hal_tim.o(.ARM.exidx.text.TIM_ITConfig) refers to hal_tim.o(.text.TIM_ITConfig) for [Anonymous Symbol]
    hal_tim.o(.ARM.exidx.text.TIM_GenerateEvent) refers to hal_tim.o(.text.TIM_GenerateEvent) for [Anonymous Symbol]
    hal_tim.o(.ARM.exidx.text.TIM_DMAConfig) refers to hal_tim.o(.text.TIM_DMAConfig) for [Anonymous Symbol]
    hal_tim.o(.ARM.exidx.text.TIM_DMACmd) refers to hal_tim.o(.text.TIM_DMACmd) for [Anonymous Symbol]
    hal_tim.o(.ARM.exidx.text.TIM_InternalClockConfig) refers to hal_tim.o(.text.TIM_InternalClockConfig) for [Anonymous Symbol]
    hal_tim.o(.text.TIM_ITRxExternalClockConfig) refers to hal_tim.o(.text.TIM_SelectInputTrigger) for TIM_SelectInputTrigger
    hal_tim.o(.ARM.exidx.text.TIM_ITRxExternalClockConfig) refers to hal_tim.o(.text.TIM_ITRxExternalClockConfig) for [Anonymous Symbol]
    hal_tim.o(.ARM.exidx.text.TIM_SelectInputTrigger) refers to hal_tim.o(.text.TIM_SelectInputTrigger) for [Anonymous Symbol]
    hal_tim.o(.text.TIM_TIxExternalClockConfig) refers to hal_tim.o(.text.TI2_Configure) for TI2_Configure
    hal_tim.o(.text.TIM_TIxExternalClockConfig) refers to hal_tim.o(.text.TI1_Configure) for TI1_Configure
    hal_tim.o(.text.TIM_TIxExternalClockConfig) refers to hal_tim.o(.text.TIM_SelectInputTrigger) for TIM_SelectInputTrigger
    hal_tim.o(.ARM.exidx.text.TIM_TIxExternalClockConfig) refers to hal_tim.o(.text.TIM_TIxExternalClockConfig) for [Anonymous Symbol]
    hal_tim.o(.ARM.exidx.text.TIM_ETRConfig) refers to hal_tim.o(.text.TIM_ETRConfig) for [Anonymous Symbol]
    hal_tim.o(.text.TIM_ETRClockMode1Config) refers to hal_tim.o(.text.TIM_ETRConfig) for TIM_ETRConfig
    hal_tim.o(.ARM.exidx.text.TIM_ETRClockMode1Config) refers to hal_tim.o(.text.TIM_ETRClockMode1Config) for [Anonymous Symbol]
    hal_tim.o(.text.TIM_ETRClockMode2Config) refers to hal_tim.o(.text.TIM_ETRConfig) for TIM_ETRConfig
    hal_tim.o(.ARM.exidx.text.TIM_ETRClockMode2Config) refers to hal_tim.o(.text.TIM_ETRClockMode2Config) for [Anonymous Symbol]
    hal_tim.o(.ARM.exidx.text.TIM_PrescalerConfig) refers to hal_tim.o(.text.TIM_PrescalerConfig) for [Anonymous Symbol]
    hal_tim.o(.ARM.exidx.text.TIM_CounterModeConfig) refers to hal_tim.o(.text.TIM_CounterModeConfig) for [Anonymous Symbol]
    hal_tim.o(.ARM.exidx.text.TIM_EncoderInterfaceConfig) refers to hal_tim.o(.text.TIM_EncoderInterfaceConfig) for [Anonymous Symbol]
    hal_tim.o(.ARM.exidx.text.TIM_ForcedOC1Config) refers to hal_tim.o(.text.TIM_ForcedOC1Config) for [Anonymous Symbol]
    hal_tim.o(.ARM.exidx.text.TIM_ForcedOC2Config) refers to hal_tim.o(.text.TIM_ForcedOC2Config) for [Anonymous Symbol]
    hal_tim.o(.ARM.exidx.text.TIM_ForcedOC3Config) refers to hal_tim.o(.text.TIM_ForcedOC3Config) for [Anonymous Symbol]
    hal_tim.o(.ARM.exidx.text.TIM_ForcedOC4Config) refers to hal_tim.o(.text.TIM_ForcedOC4Config) for [Anonymous Symbol]
    hal_tim.o(.ARM.exidx.text.TIM_ARRPreloadConfig) refers to hal_tim.o(.text.TIM_ARRPreloadConfig) for [Anonymous Symbol]
    hal_tim.o(.ARM.exidx.text.TIM_SelectCOM) refers to hal_tim.o(.text.TIM_SelectCOM) for [Anonymous Symbol]
    hal_tim.o(.ARM.exidx.text.TIM_SelectCCDMA) refers to hal_tim.o(.text.TIM_SelectCCDMA) for [Anonymous Symbol]
    hal_tim.o(.ARM.exidx.text.TIM_CCPreloadControl) refers to hal_tim.o(.text.TIM_CCPreloadControl) for [Anonymous Symbol]
    hal_tim.o(.ARM.exidx.text.TIM_OC1PreloadConfig) refers to hal_tim.o(.text.TIM_OC1PreloadConfig) for [Anonymous Symbol]
    hal_tim.o(.ARM.exidx.text.TIM_OC2PreloadConfig) refers to hal_tim.o(.text.TIM_OC2PreloadConfig) for [Anonymous Symbol]
    hal_tim.o(.ARM.exidx.text.TIM_OC3PreloadConfig) refers to hal_tim.o(.text.TIM_OC3PreloadConfig) for [Anonymous Symbol]
    hal_tim.o(.ARM.exidx.text.TIM_OC4PreloadConfig) refers to hal_tim.o(.text.TIM_OC4PreloadConfig) for [Anonymous Symbol]
    hal_tim.o(.ARM.exidx.text.TIM_OC1FastConfig) refers to hal_tim.o(.text.TIM_OC1FastConfig) for [Anonymous Symbol]
    hal_tim.o(.ARM.exidx.text.TIM_OC2FastConfig) refers to hal_tim.o(.text.TIM_OC2FastConfig) for [Anonymous Symbol]
    hal_tim.o(.ARM.exidx.text.TIM_OC3FastConfig) refers to hal_tim.o(.text.TIM_OC3FastConfig) for [Anonymous Symbol]
    hal_tim.o(.ARM.exidx.text.TIM_OC4FastConfig) refers to hal_tim.o(.text.TIM_OC4FastConfig) for [Anonymous Symbol]
    hal_tim.o(.ARM.exidx.text.TIM_ClearOC1Ref) refers to hal_tim.o(.text.TIM_ClearOC1Ref) for [Anonymous Symbol]
    hal_tim.o(.ARM.exidx.text.TIM_ClearOC2Ref) refers to hal_tim.o(.text.TIM_ClearOC2Ref) for [Anonymous Symbol]
    hal_tim.o(.ARM.exidx.text.TIM_ClearOC3Ref) refers to hal_tim.o(.text.TIM_ClearOC3Ref) for [Anonymous Symbol]
    hal_tim.o(.ARM.exidx.text.TIM_ClearOC4Ref) refers to hal_tim.o(.text.TIM_ClearOC4Ref) for [Anonymous Symbol]
    hal_tim.o(.ARM.exidx.text.TIM_OC1PolarityConfig) refers to hal_tim.o(.text.TIM_OC1PolarityConfig) for [Anonymous Symbol]
    hal_tim.o(.ARM.exidx.text.TIM_OC1NPolarityConfig) refers to hal_tim.o(.text.TIM_OC1NPolarityConfig) for [Anonymous Symbol]
    hal_tim.o(.ARM.exidx.text.TIM_OC2PolarityConfig) refers to hal_tim.o(.text.TIM_OC2PolarityConfig) for [Anonymous Symbol]
    hal_tim.o(.ARM.exidx.text.TIM_OC2NPolarityConfig) refers to hal_tim.o(.text.TIM_OC2NPolarityConfig) for [Anonymous Symbol]
    hal_tim.o(.ARM.exidx.text.TIM_OC3PolarityConfig) refers to hal_tim.o(.text.TIM_OC3PolarityConfig) for [Anonymous Symbol]
    hal_tim.o(.ARM.exidx.text.TIM_OC3NPolarityConfig) refers to hal_tim.o(.text.TIM_OC3NPolarityConfig) for [Anonymous Symbol]
    hal_tim.o(.ARM.exidx.text.TIM_OC4PolarityConfig) refers to hal_tim.o(.text.TIM_OC4PolarityConfig) for [Anonymous Symbol]
    hal_tim.o(.ARM.exidx.text.TIM_CCxCmd) refers to hal_tim.o(.text.TIM_CCxCmd) for [Anonymous Symbol]
    hal_tim.o(.ARM.exidx.text.TIM_CCxNCmd) refers to hal_tim.o(.text.TIM_CCxNCmd) for [Anonymous Symbol]
    hal_tim.o(.ARM.exidx.text.TIM_SelectOCxM) refers to hal_tim.o(.text.TIM_SelectOCxM) for [Anonymous Symbol]
    hal_tim.o(.ARM.exidx.text.TIM_UpdateDisableConfig) refers to hal_tim.o(.text.TIM_UpdateDisableConfig) for [Anonymous Symbol]
    hal_tim.o(.ARM.exidx.text.TIM_UpdateRequestConfig) refers to hal_tim.o(.text.TIM_UpdateRequestConfig) for [Anonymous Symbol]
    hal_tim.o(.ARM.exidx.text.TIM_SelectHallSensor) refers to hal_tim.o(.text.TIM_SelectHallSensor) for [Anonymous Symbol]
    hal_tim.o(.ARM.exidx.text.TIM_SelectOnePulseMode) refers to hal_tim.o(.text.TIM_SelectOnePulseMode) for [Anonymous Symbol]
    hal_tim.o(.ARM.exidx.text.TIM_SelectOutputTrigger) refers to hal_tim.o(.text.TIM_SelectOutputTrigger) for [Anonymous Symbol]
    hal_tim.o(.ARM.exidx.text.TIM_SelectSlaveMode) refers to hal_tim.o(.text.TIM_SelectSlaveMode) for [Anonymous Symbol]
    hal_tim.o(.ARM.exidx.text.TIM_SelectMasterSlaveMode) refers to hal_tim.o(.text.TIM_SelectMasterSlaveMode) for [Anonymous Symbol]
    hal_tim.o(.ARM.exidx.text.TIM_SetAutoreload) refers to hal_tim.o(.text.TIM_SetAutoreload) for [Anonymous Symbol]
    hal_tim.o(.ARM.exidx.text.TIM_SetClockDivision) refers to hal_tim.o(.text.TIM_SetClockDivision) for [Anonymous Symbol]
    hal_tim.o(.ARM.exidx.text.TIM_SetCounter) refers to hal_tim.o(.text.TIM_SetCounter) for [Anonymous Symbol]
    hal_tim.o(.ARM.exidx.text.TIM_SetCompare1) refers to hal_tim.o(.text.TIM_SetCompare1) for [Anonymous Symbol]
    hal_tim.o(.ARM.exidx.text.TIM_SetCompare2) refers to hal_tim.o(.text.TIM_SetCompare2) for [Anonymous Symbol]
    hal_tim.o(.ARM.exidx.text.TIM_SetCompare3) refers to hal_tim.o(.text.TIM_SetCompare3) for [Anonymous Symbol]
    hal_tim.o(.ARM.exidx.text.TIM_SetCompare4) refers to hal_tim.o(.text.TIM_SetCompare4) for [Anonymous Symbol]
    hal_tim.o(.ARM.exidx.text.TIM_GetCapture1) refers to hal_tim.o(.text.TIM_GetCapture1) for [Anonymous Symbol]
    hal_tim.o(.ARM.exidx.text.TIM_GetCapture2) refers to hal_tim.o(.text.TIM_GetCapture2) for [Anonymous Symbol]
    hal_tim.o(.ARM.exidx.text.TIM_GetCapture3) refers to hal_tim.o(.text.TIM_GetCapture3) for [Anonymous Symbol]
    hal_tim.o(.ARM.exidx.text.TIM_GetCapture4) refers to hal_tim.o(.text.TIM_GetCapture4) for [Anonymous Symbol]
    hal_tim.o(.ARM.exidx.text.TIM_GetCounter) refers to hal_tim.o(.text.TIM_GetCounter) for [Anonymous Symbol]
    hal_tim.o(.ARM.exidx.text.TIM_GetPrescaler) refers to hal_tim.o(.text.TIM_GetPrescaler) for [Anonymous Symbol]
    hal_tim.o(.ARM.exidx.text.TIM_GetFlagStatus) refers to hal_tim.o(.text.TIM_GetFlagStatus) for [Anonymous Symbol]
    hal_tim.o(.ARM.exidx.text.TIM_ClearFlag) refers to hal_tim.o(.text.TIM_ClearFlag) for [Anonymous Symbol]
    hal_tim.o(.ARM.exidx.text.TIM_GetITStatus) refers to hal_tim.o(.text.TIM_GetITStatus) for [Anonymous Symbol]
    hal_tim.o(.ARM.exidx.text.TIM_ClearITPendingBit) refers to hal_tim.o(.text.TIM_ClearITPendingBit) for [Anonymous Symbol]
    hal_tim.o(.ARM.exidx.text.TIM_SetIC1Plority) refers to hal_tim.o(.text.TIM_SetIC1Plority) for [Anonymous Symbol]
    hal_tim.o(.ARM.exidx.text.TIM_SetIC2Plority) refers to hal_tim.o(.text.TIM_SetIC2Plority) for [Anonymous Symbol]
    hal_tim.o(.ARM.exidx.text.TIM_SetIC3Plority) refers to hal_tim.o(.text.TIM_SetIC3Plority) for [Anonymous Symbol]
    hal_tim.o(.ARM.exidx.text.TIM_SetIC4Plority) refers to hal_tim.o(.text.TIM_SetIC4Plority) for [Anonymous Symbol]
    hal_tim.o(.ARM.exidx.text.TIM_SetCompare5) refers to hal_tim.o(.text.TIM_SetCompare5) for [Anonymous Symbol]
    hal_tim.o(.ARM.exidx.text.TIM_GetCapture5) refers to hal_tim.o(.text.TIM_GetCapture5) for [Anonymous Symbol]
    hal_tim.o(.ARM.exidx.text.TIM_OC5PreloadConfig) refers to hal_tim.o(.text.TIM_OC5PreloadConfig) for [Anonymous Symbol]
    hal_tim.o(.ARM.exidx.text.TIM_DirectOutput) refers to hal_tim.o(.text.TIM_DirectOutput) for [Anonymous Symbol]
    hal_tim.o(.ARM.exidx.text.TIM_PWMShiftConfig) refers to hal_tim.o(.text.TIM_PWMShiftConfig) for [Anonymous Symbol]
    hal_tim.o(.ARM.exidx.text.TIM_SetCCR1FALL) refers to hal_tim.o(.text.TIM_SetCCR1FALL) for [Anonymous Symbol]
    hal_tim.o(.ARM.exidx.text.TIM_SetCCR2FALL) refers to hal_tim.o(.text.TIM_SetCCR2FALL) for [Anonymous Symbol]
    hal_tim.o(.ARM.exidx.text.TIM_SetCCR3FALL) refers to hal_tim.o(.text.TIM_SetCCR3FALL) for [Anonymous Symbol]
    hal_tim.o(.ARM.exidx.text.TIM_SetCCR4FALL) refers to hal_tim.o(.text.TIM_SetCCR4FALL) for [Anonymous Symbol]
    hal_tim.o(.ARM.exidx.text.TIM_SetCCR5FALL) refers to hal_tim.o(.text.TIM_SetCCR5FALL) for [Anonymous Symbol]
    hal_tim.o(.ARM.exidx.text.TIM_BreakInputFilter_Cmd) refers to hal_tim.o(.text.TIM_BreakInputFilter_Cmd) for [Anonymous Symbol]
    hal_tim.o(.ARM.exidx.text.TIM_BreakInputFilterConfigure) refers to hal_tim.o(.text.TIM_BreakInputFilterConfigure) for [Anonymous Symbol]
    hal_uart.o(.text.UART_DeInit) refers to hal_rcc.o(.text.exRCC_APB1PeriphReset) for exRCC_APB1PeriphReset
    hal_uart.o(.text.UART_DeInit) refers to hal_rcc.o(.text.exRCC_APB2PeriphReset) for exRCC_APB2PeriphReset
    hal_uart.o(.ARM.exidx.text.UART_DeInit) refers to hal_uart.o(.text.UART_DeInit) for [Anonymous Symbol]
    hal_uart.o(.text.UART_Init) refers to hal_rcc.o(.text.RCC_GetPCLK2Freq) for RCC_GetPCLK2Freq
    hal_uart.o(.text.UART_Init) refers to hal_rcc.o(.text.RCC_GetPCLK1Freq) for RCC_GetPCLK1Freq
    hal_uart.o(.text.UART_Init) refers to uidiv.o(.text) for __aeabi_uidiv
    hal_uart.o(.ARM.exidx.text.UART_Init) refers to hal_uart.o(.text.UART_Init) for [Anonymous Symbol]
    hal_uart.o(.ARM.exidx.text.UART_StructInit) refers to hal_uart.o(.text.UART_StructInit) for [Anonymous Symbol]
    hal_uart.o(.ARM.exidx.text.UART_Cmd) refers to hal_uart.o(.text.UART_Cmd) for [Anonymous Symbol]
    hal_uart.o(.ARM.exidx.text.UART_ITConfig) refers to hal_uart.o(.text.UART_ITConfig) for [Anonymous Symbol]
    hal_uart.o(.ARM.exidx.text.UART_DMACmd) refers to hal_uart.o(.text.UART_DMACmd) for [Anonymous Symbol]
    hal_uart.o(.ARM.exidx.text.UART_SendData) refers to hal_uart.o(.text.UART_SendData) for [Anonymous Symbol]
    hal_uart.o(.ARM.exidx.text.UART_ReceiveData) refers to hal_uart.o(.text.UART_ReceiveData) for [Anonymous Symbol]
    hal_uart.o(.ARM.exidx.text.UART_GetFlagStatus) refers to hal_uart.o(.text.UART_GetFlagStatus) for [Anonymous Symbol]
    hal_uart.o(.ARM.exidx.text.UART_GetITStatus) refers to hal_uart.o(.text.UART_GetITStatus) for [Anonymous Symbol]
    hal_uart.o(.ARM.exidx.text.UART_ClearITPendingBit) refers to hal_uart.o(.text.UART_ClearITPendingBit) for [Anonymous Symbol]
    hal_uart.o(.ARM.exidx.text.UART_WakeUpConfig) refers to hal_uart.o(.text.UART_WakeUpConfig) for [Anonymous Symbol]
    hal_uart.o(.ARM.exidx.text.UART_ReceiverWakeUpCmd) refers to hal_uart.o(.text.UART_ReceiverWakeUpCmd) for [Anonymous Symbol]
    hal_uart.o(.ARM.exidx.text.UART_SetRXAddress) refers to hal_uart.o(.text.UART_SetRXAddress) for [Anonymous Symbol]
    hal_uart.o(.ARM.exidx.text.UART_SetRXMASK) refers to hal_uart.o(.text.UART_SetRXMASK) for [Anonymous Symbol]
    hal_uart.o(.ARM.exidx.text.UART_Enable9bit) refers to hal_uart.o(.text.UART_Enable9bit) for [Anonymous Symbol]
    hal_uart.o(.ARM.exidx.text.UART_Set9bitLevel) refers to hal_uart.o(.text.UART_Set9bitLevel) for [Anonymous Symbol]
    hal_uart.o(.ARM.exidx.text.UART_Set9bitPolarity) refers to hal_uart.o(.text.UART_Set9bitPolarity) for [Anonymous Symbol]
    hal_uart.o(.ARM.exidx.text.UART_Set9bitAutomaticToggle) refers to hal_uart.o(.text.UART_Set9bitAutomaticToggle) for [Anonymous Symbol]
    hal_uart.o(.ARM.exidx.text.UART_HalfDuplexCmd) refers to hal_uart.o(.text.UART_HalfDuplexCmd) for [Anonymous Symbol]
    hal_uart.o(.ARM.exidx.text.UART_SetGuardTime) refers to hal_uart.o(.text.UART_SetGuardTime) for [Anonymous Symbol]
    hal_uart.o(.ARM.exidx.text.UART_SmartCardCmd) refers to hal_uart.o(.text.UART_SmartCardCmd) for [Anonymous Symbol]
    hal_uart.o(.ARM.exidx.text.UART_SmartCardNACKCmd) refers to hal_uart.o(.text.UART_SmartCardNACKCmd) for [Anonymous Symbol]
    hal_uart.o(.ARM.exidx.text.UART_SendBreak) refers to hal_uart.o(.text.UART_SendBreak) for [Anonymous Symbol]
    hal_uart.o(.ARM.exidx.text.UART_AutoBaudRateCmd) refers to hal_uart.o(.text.UART_AutoBaudRateCmd) for [Anonymous Symbol]
    hal_uart.o(.ARM.exidx.text.UART_AutoBaudRateSet) refers to hal_uart.o(.text.UART_AutoBaudRateSet) for [Anonymous Symbol]
    hal_uart.o(.ARM.exidx.text.UART_SetTXToggle) refers to hal_uart.o(.text.UART_SetTXToggle) for [Anonymous Symbol]
    hal_uart.o(.ARM.exidx.text.UART_SetRXToggle) refers to hal_uart.o(.text.UART_SetRXToggle) for [Anonymous Symbol]
    hal_uart.o(.ARM.exidx.text.UART_SetTxRxSWAP) refers to hal_uart.o(.text.UART_SetTxRxSWAP) for [Anonymous Symbol]
    hal_uart.o(.ARM.exidx.text.UART_SetTransmitEnable) refers to hal_uart.o(.text.UART_SetTransmitEnable) for [Anonymous Symbol]
    hal_uart.o(.ARM.exidx.text.UART_SetRecevieEnable) refers to hal_uart.o(.text.UART_SetRecevieEnable) for [Anonymous Symbol]
    hal_uart.o(.ARM.exidx.text.UART_SetLIN) refers to hal_uart.o(.text.UART_SetLIN) for [Anonymous Symbol]
    hal_uid.o(.text.GetChipUID) refers to hal_uid.o(.bss.device_id_data) for device_id_data
    hal_uid.o(.ARM.exidx.text.GetChipUID) refers to hal_uid.o(.text.GetChipUID) for [Anonymous Symbol]
    hal_ver.o(.ARM.exidx.text.Get_MM32LibVersion) refers to hal_ver.o(.text.Get_MM32LibVersion) for [Anonymous Symbol]
    hal_ver.o(.ARM.exidx.text.Get_MM32LibReleaseDate) refers to hal_ver.o(.text.Get_MM32LibReleaseDate) for [Anonymous Symbol]
    hal_ver.o(.ARM.exidx.text.Get_ChipsetREVID) refers to hal_ver.o(.text.Get_ChipsetREVID) for [Anonymous Symbol]
    hal_ver.o(.ARM.exidx.text.Get_ChipsetDEVID) refers to hal_ver.o(.text.Get_ChipsetDEVID) for [Anonymous Symbol]
    hal_ver.o(.ARM.exidx.text.Get_ChipsetUIDw0) refers to hal_ver.o(.text.Get_ChipsetUIDw0) for [Anonymous Symbol]
    hal_ver.o(.ARM.exidx.text.Get_ChipsetUIDw1) refers to hal_ver.o(.text.Get_ChipsetUIDw1) for [Anonymous Symbol]
    hal_ver.o(.ARM.exidx.text.Get_ChipsetUIDw2) refers to hal_ver.o(.text.Get_ChipsetUIDw2) for [Anonymous Symbol]
    hal_wwdg.o(.text.WWDG_DeInit) refers to hal_rcc.o(.text.exRCC_APB1PeriphReset) for exRCC_APB1PeriphReset
    hal_wwdg.o(.ARM.exidx.text.WWDG_DeInit) refers to hal_wwdg.o(.text.WWDG_DeInit) for [Anonymous Symbol]
    hal_wwdg.o(.ARM.exidx.text.WWDG_SetPrescaler) refers to hal_wwdg.o(.text.WWDG_SetPrescaler) for [Anonymous Symbol]
    hal_wwdg.o(.ARM.exidx.text.WWDG_SetWindowValue) refers to hal_wwdg.o(.text.WWDG_SetWindowValue) for [Anonymous Symbol]
    hal_wwdg.o(.ARM.exidx.text.WWDG_EnableIT) refers to hal_wwdg.o(.text.WWDG_EnableIT) for [Anonymous Symbol]
    hal_wwdg.o(.ARM.exidx.text.WWDG_SetCounter) refers to hal_wwdg.o(.text.WWDG_SetCounter) for [Anonymous Symbol]
    hal_wwdg.o(.ARM.exidx.text.WWDG_GetCounter) refers to hal_wwdg.o(.text.WWDG_GetCounter) for [Anonymous Symbol]
    hal_wwdg.o(.ARM.exidx.text.WWDG_Enable) refers to hal_wwdg.o(.text.WWDG_Enable) for [Anonymous Symbol]
    hal_wwdg.o(.ARM.exidx.text.WWDG_GetFlagStatus) refers to hal_wwdg.o(.text.WWDG_GetFlagStatus) for [Anonymous Symbol]
    hal_wwdg.o(.ARM.exidx.text.WWDG_ClearFlag) refers to hal_wwdg.o(.text.WWDG_ClearFlag) for [Anonymous Symbol]
    startup_mm32spin0280_keil.o(RESET) refers to startup_mm32spin0280_keil.o(STACK) for __initial_sp
    startup_mm32spin0280_keil.o(RESET) refers to startup_mm32spin0280_keil.o(.text) for Reset_Handler
    startup_mm32spin0280_keil.o(RESET) refers to iec60730_b_aux.o(.text.NMI_Handler) for NMI_Handler
    startup_mm32spin0280_keil.o(RESET) refers to iec60730_b_aux.o(.text.SysTick_Handler) for SysTick_Handler
    startup_mm32spin0280_keil.o(RESET) refers to mm32_it.o(.text.WWDG_IRQHandler) for WWDG_IRQHandler
    startup_mm32spin0280_keil.o(RESET) refers to mm32_it.o(.text.PVD_IRQHandler) for PVD_IRQHandler
    startup_mm32spin0280_keil.o(RESET) refers to mm32_it.o(.text.PWM_IRQHandler) for PWM_IRQHandler
    startup_mm32spin0280_keil.o(RESET) refers to mm32_it.o(.text.FLASH_IRQHandler) for FLASH_IRQHandler
    startup_mm32spin0280_keil.o(RESET) refers to mm32_it.o(.text.RCC_IRQHandler) for RCC_IRQHandler
    startup_mm32spin0280_keil.o(RESET) refers to mm32_it.o(.text.EXTI0_1_IRQHandler) for EXTI0_1_IRQHandler
    startup_mm32spin0280_keil.o(RESET) refers to mm32_it.o(.text.EXTI2_3_IRQHandler) for EXTI2_3_IRQHandler
    startup_mm32spin0280_keil.o(RESET) refers to mm32_it.o(.text.EXTI4_15_IRQHandler) for EXTI4_15_IRQHandler
    startup_mm32spin0280_keil.o(RESET) refers to mm32_it.o(.text.HWDIV_IRQHandler) for HWDIV_IRQHandler
    startup_mm32spin0280_keil.o(RESET) refers to mm32_it.o(.text.DMA1_Channel1_IRQHandler) for DMA1_Channel1_IRQHandler
    startup_mm32spin0280_keil.o(RESET) refers to mm32_it.o(.text.DMA1_Channel2_3_IRQHandler) for DMA1_Channel2_3_IRQHandler
    startup_mm32spin0280_keil.o(RESET) refers to mm32_it.o(.text.DMA1_Channel4_5_IRQHandler) for DMA1_Channel4_5_IRQHandler
    startup_mm32spin0280_keil.o(RESET) refers to mm32_it.o(.text.ADC1_IRQHandler) for ADC1_IRQHandler
    startup_mm32spin0280_keil.o(RESET) refers to mm32_it.o(.text.TIM1_BRK_UP_TRG_COM_IRQHandler) for TIM1_BRK_UP_TRG_COM_IRQHandler
    startup_mm32spin0280_keil.o(RESET) refers to mm32_it.o(.text.TIM1_CC_IRQHandler) for TIM1_CC_IRQHandler
    startup_mm32spin0280_keil.o(RESET) refers to iec60730_b_clocktest.o(.text.TIM2_IRQHandler) for TIM2_IRQHandler
    startup_mm32spin0280_keil.o(RESET) refers to mm32_it.o(.text.TIM3_IRQHandler) for TIM3_IRQHandler
    startup_mm32spin0280_keil.o(RESET) refers to mm32_it.o(.text.TIM8_BRK_UP_TRG_COM_IRQHandler) for TIM8_BRK_UP_TRG_COM_IRQHandler
    startup_mm32spin0280_keil.o(RESET) refers to mm32_it.o(.text.TIM8_CC_IRQHandler) for TIM8_CC_IRQHandler
    startup_mm32spin0280_keil.o(RESET) refers to mm32_it.o(.text.TIM14_IRQHandler) for TIM14_IRQHandler
    startup_mm32spin0280_keil.o(RESET) refers to mm32_it.o(.text.ADC2_IRQHandler) for ADC2_IRQHandler
    startup_mm32spin0280_keil.o(RESET) refers to mm32_it.o(.text.TIM16_IRQHandler) for TIM16_IRQHandler
    startup_mm32spin0280_keil.o(RESET) refers to mm32_it.o(.text.TIM17_IRQHandler) for TIM17_IRQHandler
    startup_mm32spin0280_keil.o(RESET) refers to mm32_it.o(.text.I2C1_IRQHandler) for I2C1_IRQHandler
    startup_mm32spin0280_keil.o(RESET) refers to mm32_it.o(.text.COMP1_2_3_4_5_IRQHandler) for COMP1_2_3_4_5_IRQHandler
    startup_mm32spin0280_keil.o(RESET) refers to mm32_it.o(.text.SPI1_IRQHandler) for SPI1_IRQHandler
    startup_mm32spin0280_keil.o(RESET) refers to mm32_it.o(.text.SPI2_IRQHandler) for SPI2_IRQHandler
    startup_mm32spin0280_keil.o(RESET) refers to mm32_it.o(.text.UART1_IRQHandler) for UART1_IRQHandler
    startup_mm32spin0280_keil.o(RESET) refers to mm32_it.o(.text.UART2_IRQHandler) for UART2_IRQHandler
    startup_mm32spin0280_keil.o(RESET) refers to mm32_it.o(.text.UART3_IRQHandler) for UART3_IRQHandler
    startup_mm32spin0280_keil.o(.text) refers to startup_mm32spin0280_keil.o(STACK) for __initial_sp
    startup_mm32spin0280_keil.o(.text) refers to system_mm32spin0280.o(.text.SystemInit) for SystemInit
    startup_mm32spin0280_keil.o(.text) refers to entry.o(.ARM.Collect$$$$00000000) for __main
    system_mm32spin0280.o(.text.SystemInit) refers to system_mm32spin0280.o(.text.SetSysClockToDefaultHSI) for SetSysClockToDefaultHSI
    system_mm32spin0280.o(.text.SystemInit) refers to system_mm32spin0280.o(.text.SetSysClock) for SetSysClock
    system_mm32spin0280.o(.ARM.exidx.text.SystemInit) refers to system_mm32spin0280.o(.text.SystemInit) for [Anonymous Symbol]
    system_mm32spin0280.o(.ARM.exidx.text.SetSysClockToDefaultHSI) refers to system_mm32spin0280.o(.text.SetSysClockToDefaultHSI) for [Anonymous Symbol]
    system_mm32spin0280.o(.text.SetSysClock) refers to system_mm32spin0280.o(.text.SetSysClockWithHsiPLL) for SetSysClockWithHsiPLL
    system_mm32spin0280.o(.ARM.exidx.text.SetSysClock) refers to system_mm32spin0280.o(.text.SetSysClock) for [Anonymous Symbol]
    system_mm32spin0280.o(.text.AutoCalPllFactor) refers to uidiv.o(.text) for __aeabi_uidiv
    system_mm32spin0280.o(.ARM.exidx.text.AutoCalPllFactor) refers to system_mm32spin0280.o(.text.AutoCalPllFactor) for [Anonymous Symbol]
    system_mm32spin0280.o(.text.SystemCoreClockUpdate) refers to uidiv.o(.text) for __aeabi_uidiv
    system_mm32spin0280.o(.text.SystemCoreClockUpdate) refers to hal_rcc.o(.text.RCC_ClockSecuritySystemCmd) for RCC_ClockSecuritySystemCmd
    system_mm32spin0280.o(.text.SystemCoreClockUpdate) refers to system_mm32spin0280.o(.data.SystemCoreClock) for SystemCoreClock
    system_mm32spin0280.o(.ARM.exidx.text.SystemCoreClockUpdate) refers to system_mm32spin0280.o(.text.SystemCoreClockUpdate) for [Anonymous Symbol]
    system_mm32spin0280.o(.text.SetSysClockWithHsiPLL) refers to system_mm32spin0280.o(.text.AutoCalPllFactor) for AutoCalPllFactor
    system_mm32spin0280.o(.text.SetSysClockWithHsiPLL) refers to system_mm32spin0280.o(.text.delay_x_cycle) for delay_x_cycle
    system_mm32spin0280.o(.text.SetSysClockWithHsiPLL) refers to system_mm32spin0280.o(.data.SystemCoreClock) for SystemCoreClock
    system_mm32spin0280.o(.ARM.exidx.text.SetSysClockWithHsiPLL) refers to system_mm32spin0280.o(.text.SetSysClockWithHsiPLL) for [Anonymous Symbol]
    system_mm32spin0280.o(.ARM.exidx.text.delay_x_cycle) refers to system_mm32spin0280.o(.text.delay_x_cycle) for [Anonymous Symbol]
    uart_classb.o(.text.Uart_init) refers to hal_rcc.o(.text.RCC_APB2PeriphClockCmd) for RCC_APB2PeriphClockCmd
    uart_classb.o(.text.Uart_init) refers to hal_rcc.o(.text.RCC_AHBPeriphClockCmd) for RCC_AHBPeriphClockCmd
    uart_classb.o(.text.Uart_init) refers to hal_uart.o(.text.UART_Init) for UART_Init
    uart_classb.o(.text.Uart_init) refers to hal_uart.o(.text.UART_Cmd) for UART_Cmd
    uart_classb.o(.text.Uart_init) refers to hal_gpio.o(.text.GPIO_PinAFConfig) for GPIO_PinAFConfig
    uart_classb.o(.text.Uart_init) refers to hal_gpio.o(.text.GPIO_Init) for GPIO_Init
    uart_classb.o(.ARM.exidx.text.Uart_init) refers to uart_classb.o(.text.Uart_init) for [Anonymous Symbol]
    uart_classb.o(.text.fputc) refers to hal_uart.o(.text.UART_GetFlagStatus) for UART_GetFlagStatus
    uart_classb.o(.text.fputc) refers to hal_uart.o(.text.UART_SendData) for UART_SendData
    uart_classb.o(.ARM.exidx.text.fputc) refers to uart_classb.o(.text.fputc) for [Anonymous Symbol]
    uart_classb.o(.text.CBUart_Init) refers to hal_rcc.o(.text.RCC_UART_ClockCmd) for RCC_UART_ClockCmd
    uart_classb.o(.text.CBUart_Init) refers to hal_rcc.o(.text.RCC_GPIO_ClockCmd) for RCC_GPIO_ClockCmd
    uart_classb.o(.text.CBUart_Init) refers to hal_uart.o(.text.UART_Init) for UART_Init
    uart_classb.o(.text.CBUart_Init) refers to hal_uart.o(.text.UART_Cmd) for UART_Cmd
    uart_classb.o(.text.CBUart_Init) refers to hal_gpio.o(.text.GPIO_PinAFConfig) for GPIO_PinAFConfig
    uart_classb.o(.text.CBUart_Init) refers to hal_gpio.o(.text.GPIO_Init) for GPIO_Init
    uart_classb.o(.ARM.exidx.text.CBUart_Init) refers to uart_classb.o(.text.CBUart_Init) for [Anonymous Symbol]
    iec60730_b_aux.o(.text.FailSafePOR) refers to printfa.o(i.__0printf) for printf
    iec60730_b_aux.o(.text.FailSafePOR) refers to hal_iwdg.o(.text.IWDG_ReloadCounter) for IWDG_ReloadCounter
    iec60730_b_aux.o(.text.FailSafePOR) refers to iec60730_b_startup.o(.bss.Error_word) for Error_word
    iec60730_b_aux.o(.text.FailSafePOR) refers to iec60730_b_startup.o(CLASS_B_RAM_REV) for TickCounterInv
    iec60730_b_aux.o(.text.FailSafePOR) refers to iec60730_b_startup.o(CLASS_B_RAM) for TickCounter
    iec60730_b_aux.o(.text.FailSafePOR) refers to iec60730_b_aux.o(.rodata.str1.1) for .L.str
    iec60730_b_aux.o(.ARM.exidx.text.FailSafePOR) refers to iec60730_b_aux.o(.text.FailSafePOR) for [Anonymous Symbol]
    iec60730_b_aux.o(.text.Iwdg_Init) refers to hal_rcc.o(.text.RCC_LSICmd) for RCC_LSICmd
    iec60730_b_aux.o(.text.Iwdg_Init) refers to hal_rcc.o(.text.RCC_GetFlagStatus) for RCC_GetFlagStatus
    iec60730_b_aux.o(.text.Iwdg_Init) refers to hal_iwdg.o(.text.IWDG_WriteAccessCmd) for IWDG_WriteAccessCmd
    iec60730_b_aux.o(.text.Iwdg_Init) refers to hal_iwdg.o(.text.IWDG_SetPrescaler) for IWDG_SetPrescaler
    iec60730_b_aux.o(.text.Iwdg_Init) refers to hal_iwdg.o(.text.PVU_CheckStatus) for PVU_CheckStatus
    iec60730_b_aux.o(.text.Iwdg_Init) refers to hal_iwdg.o(.text.RVU_CheckStatus) for RVU_CheckStatus
    iec60730_b_aux.o(.text.Iwdg_Init) refers to hal_iwdg.o(.text.IWDG_ReloadCounter) for IWDG_ReloadCounter
    iec60730_b_aux.o(.text.Iwdg_Init) refers to hal_iwdg.o(.text.IWDG_Enable) for IWDG_Enable
    iec60730_b_aux.o(.ARM.exidx.text.Iwdg_Init) refers to iec60730_b_aux.o(.text.Iwdg_Init) for [Anonymous Symbol]
    iec60730_b_aux.o(.text.WWDG_Init) refers to hal_wwdg.o(.text.WWDG_DeInit) for WWDG_DeInit
    iec60730_b_aux.o(.text.WWDG_Init) refers to hal_rcc.o(.text.RCC_APB1PeriphClockCmd) for RCC_APB1PeriphClockCmd
    iec60730_b_aux.o(.text.WWDG_Init) refers to hal_wwdg.o(.text.WWDG_SetPrescaler) for WWDG_SetPrescaler
    iec60730_b_aux.o(.text.WWDG_Init) refers to hal_wwdg.o(.text.WWDG_SetWindowValue) for WWDG_SetWindowValue
    iec60730_b_aux.o(.text.WWDG_Init) refers to hal_wwdg.o(.text.WWDG_Enable) for WWDG_Enable
    iec60730_b_aux.o(.ARM.exidx.text.WWDG_Init) refers to iec60730_b_aux.o(.text.WWDG_Init) for [Anonymous Symbol]
    iec60730_b_aux.o(.text.IEC60730_B_WDGSelfTest) refers to hal_rcc.o(.text.RCC_GetFlagStatus) for RCC_GetFlagStatus
    iec60730_b_aux.o(.text.IEC60730_B_WDGSelfTest) refers to iec60730_b_aux.o(.text.Iwdg_Init) for Iwdg_Init
    iec60730_b_aux.o(.text.IEC60730_B_WDGSelfTest) refers to iec60730_b_aux.o(.text.__NVIC_SystemReset) for __NVIC_SystemReset
    iec60730_b_aux.o(.text.IEC60730_B_WDGSelfTest) refers to iec60730_b_aux.o(.text.WWDG_Init) for WWDG_Init
    iec60730_b_aux.o(.ARM.exidx.text.IEC60730_B_WDGSelfTest) refers to iec60730_b_aux.o(.text.IEC60730_B_WDGSelfTest) for [Anonymous Symbol]
    iec60730_b_aux.o(.ARM.exidx.text.__NVIC_SystemReset) refers to iec60730_b_aux.o(.text.__NVIC_SystemReset) for [Anonymous Symbol]
    iec60730_b_aux.o(.text.HAL_GetTick) refers to iec60730_b_aux.o(.bss.uwTick) for uwTick
    iec60730_b_aux.o(.ARM.exidx.text.HAL_GetTick) refers to iec60730_b_aux.o(.text.HAL_GetTick) for [Anonymous Symbol]
    iec60730_b_aux.o(.text.NMI_Handler) refers to printfa.o(i.__0printf) for printf
    iec60730_b_aux.o(.text.NMI_Handler) refers to hal_rcc.o(.text.RCC_ClearITPendingBit) for RCC_ClearITPendingBit
    iec60730_b_aux.o(.text.NMI_Handler) refers to iec60730_b_aux.o(.rodata.str1.1) for .L.str.5
    iec60730_b_aux.o(.ARM.exidx.text.NMI_Handler) refers to iec60730_b_aux.o(.text.NMI_Handler) for [Anonymous Symbol]
    iec60730_b_aux.o(.text.SysTick_Handler) refers to modbus.o(.text.MOS_bGetInitStatus) for MOS_bGetInitStatus
    iec60730_b_aux.o(.text.SysTick_Handler) refers to iec60730_b_transpram.o(.text.IEC60730_B_TranspMarch) for IEC60730_B_TranspMarch
    iec60730_b_aux.o(.text.SysTick_Handler) refers to printfa.o(i.__0printf) for printf
    iec60730_b_aux.o(.text.SysTick_Handler) refers to iec60730_b_aux.o(.text.FailSafePOR) for FailSafePOR
    iec60730_b_aux.o(.text.SysTick_Handler) refers to iec60730_b_aux.o(.bss.uwTick) for uwTick
    iec60730_b_aux.o(.text.SysTick_Handler) refers to mm32_it.o(.bss.STK_pfGeneralTimerCallback) for STK_pfGeneralTimerCallback
    iec60730_b_aux.o(.text.SysTick_Handler) refers to iec60730_b_startup.o(CLASS_B_RAM) for TickCounter
    iec60730_b_aux.o(.text.SysTick_Handler) refers to iec60730_b_startup.o(CLASS_B_RAM_REV) for TickCounterInv
    iec60730_b_aux.o(.text.SysTick_Handler) refers to iec60730_b_aux.o(.bss.tmp0) for [Anonymous Symbol]
    iec60730_b_aux.o(.text.SysTick_Handler) refers to iec60730_b_startup.o(.bss.RAMRunTimetest_start) for RAMRunTimetest_start
    iec60730_b_aux.o(.text.SysTick_Handler) refers to iec60730_b_startup.o(.bss.RAMRunTimetest_end) for RAMRunTimetest_end
    iec60730_b_aux.o(.text.SysTick_Handler) refers to iec60730_b_startup.o(.bss.RAM_endadd_run) for RAM_endadd_run
    iec60730_b_aux.o(.text.SysTick_Handler) refers to iec60730_b_aux.o(.rodata.str1.1) for .L.str.6
    iec60730_b_aux.o(.ARM.exidx.text.SysTick_Handler) refers to iec60730_b_aux.o(.text.SysTick_Handler) for [Anonymous Symbol]
    iec60730_b_clocktest.o(.text.IEC60730_MainClockTest) refers to iec60730_b_clocktest.o(.text.IEC60730_clockrun_valuecheck) for IEC60730_clockrun_valuecheck
    iec60730_b_clocktest.o(.text.IEC60730_MainClockTest) refers to iec60730_b_startup.o(CLASS_B_RAM) for CtrlFlowCnt
    iec60730_b_clocktest.o(.text.IEC60730_MainClockTest) refers to iec60730_b_startup.o(CLASS_B_RAM_REV) for PeriodValueInv
    iec60730_b_clocktest.o(.ARM.exidx.text.IEC60730_MainClockTest) refers to iec60730_b_clocktest.o(.text.IEC60730_MainClockTest) for [Anonymous Symbol]
    iec60730_b_clocktest.o(.text.IEC60730_clockrun_valuecheck) refers to iec60730_b_startup.o(CLASS_B_RAM) for Incap_Freq
    iec60730_b_clocktest.o(.ARM.exidx.text.IEC60730_clockrun_valuecheck) refers to iec60730_b_clocktest.o(.text.IEC60730_clockrun_valuecheck) for [Anonymous Symbol]
    iec60730_b_clocktest.o(.text.IEC60730_ClockStartUpTest) refers to iec60730_b_clocktest.o(.text.IEC60730_InitClock_Xcross_Measurement) for IEC60730_InitClock_Xcross_Measurement
    iec60730_b_clocktest.o(.text.IEC60730_ClockStartUpTest) refers to iec60730_b_startup.o(CLASS_B_RAM) for CtrlFlowCnt
    iec60730_b_clocktest.o(.text.IEC60730_ClockStartUpTest) refers to iec60730_b_startup.o(CLASS_B_RAM_REV) for CtrlFlowCntInv
    iec60730_b_clocktest.o(.ARM.exidx.text.IEC60730_ClockStartUpTest) refers to iec60730_b_clocktest.o(.text.IEC60730_ClockStartUpTest) for [Anonymous Symbol]
    iec60730_b_clocktest.o(.text.IEC60730_InitClock_Xcross_Measurement) refers to iec60730_b_clocktest.o(.text.Tim2_Init) for Tim2_Init
    iec60730_b_clocktest.o(.text.IEC60730_InitClock_Xcross_Measurement) refers to hal_tim.o(.text.TIM_ClearFlag) for TIM_ClearFlag
    iec60730_b_clocktest.o(.text.IEC60730_InitClock_Xcross_Measurement) refers to hal_tim.o(.text.TIM_Cmd) for TIM_Cmd
    iec60730_b_clocktest.o(.text.IEC60730_InitClock_Xcross_Measurement) refers to hal_tim.o(.text.TIM_CCxCmd) for TIM_CCxCmd
    iec60730_b_clocktest.o(.ARM.exidx.text.IEC60730_InitClock_Xcross_Measurement) refers to iec60730_b_clocktest.o(.text.IEC60730_InitClock_Xcross_Measurement) for [Anonymous Symbol]
    iec60730_b_clocktest.o(.text.TIM3_GPIO_Init) refers to hal_rcc.o(.text.RCC_GPIO_ClockCmd) for RCC_GPIO_ClockCmd
    iec60730_b_clocktest.o(.text.TIM3_GPIO_Init) refers to hal_gpio.o(.text.GPIO_PinAFConfig) for GPIO_PinAFConfig
    iec60730_b_clocktest.o(.text.TIM3_GPIO_Init) refers to hal_gpio.o(.text.GPIO_Init) for GPIO_Init
    iec60730_b_clocktest.o(.ARM.exidx.text.TIM3_GPIO_Init) refers to iec60730_b_clocktest.o(.text.TIM3_GPIO_Init) for [Anonymous Symbol]
    iec60730_b_clocktest.o(.text.TIM3_PWM_Input_Init) refers to iec60730_b_clocktest.o(.text.TIM3_GPIO_Init) for TIM3_GPIO_Init
    iec60730_b_clocktest.o(.text.TIM3_PWM_Input_Init) refers to hal_rcc.o(.text.RCC_APB1PeriphClockCmd) for RCC_APB1PeriphClockCmd
    iec60730_b_clocktest.o(.text.TIM3_PWM_Input_Init) refers to hal_tim.o(.text.TIM_TimeBaseStructInit) for TIM_TimeBaseStructInit
    iec60730_b_clocktest.o(.text.TIM3_PWM_Input_Init) refers to hal_tim.o(.text.TIM_TimeBaseInit) for TIM_TimeBaseInit
    iec60730_b_clocktest.o(.text.TIM3_PWM_Input_Init) refers to hal_tim.o(.text.TIM_ICStructInit) for TIM_ICStructInit
    iec60730_b_clocktest.o(.text.TIM3_PWM_Input_Init) refers to hal_tim.o(.text.TIM_PWMIConfig) for TIM_PWMIConfig
    iec60730_b_clocktest.o(.text.TIM3_PWM_Input_Init) refers to hal_tim.o(.text.TIM_SelectInputTrigger) for TIM_SelectInputTrigger
    iec60730_b_clocktest.o(.text.TIM3_PWM_Input_Init) refers to hal_tim.o(.text.TIM_SelectSlaveMode) for TIM_SelectSlaveMode
    iec60730_b_clocktest.o(.text.TIM3_PWM_Input_Init) refers to hal_tim.o(.text.TIM_ITConfig) for TIM_ITConfig
    iec60730_b_clocktest.o(.text.TIM3_PWM_Input_Init) refers to hal_tim.o(.text.TIM_ClearITPendingBit) for TIM_ClearITPendingBit
    iec60730_b_clocktest.o(.text.TIM3_PWM_Input_Init) refers to hal_misc.o(.text.NVIC_Init) for NVIC_Init
    iec60730_b_clocktest.o(.text.TIM3_PWM_Input_Init) refers to hal_tim.o(.text.TIM_Cmd) for TIM_Cmd
    iec60730_b_clocktest.o(.ARM.exidx.text.TIM3_PWM_Input_Init) refers to iec60730_b_clocktest.o(.text.TIM3_PWM_Input_Init) for [Anonymous Symbol]
    iec60730_b_clocktest.o(.text.Tim2_Init) refers to hal_rcc.o(.text.RCC_APB1PeriphClockCmd) for RCC_APB1PeriphClockCmd
    iec60730_b_clocktest.o(.text.Tim2_Init) refers to hal_tim.o(.text.TIM_TimeBaseInit) for TIM_TimeBaseInit
    iec60730_b_clocktest.o(.text.Tim2_Init) refers to hal_tim.o(.text.TIM_ICInit) for TIM_ICInit
    iec60730_b_clocktest.o(.text.Tim2_Init) refers to hal_tim.o(.text.TIM_ITConfig) for TIM_ITConfig
    iec60730_b_clocktest.o(.text.Tim2_Init) refers to hal_misc.o(.text.exNVIC_Init) for exNVIC_Init
    iec60730_b_clocktest.o(.text.Tim2_Init) refers to hal_tim.o(.text.TIM_Cmd) for TIM_Cmd
    iec60730_b_clocktest.o(.text.Tim2_Init) refers to hal_rcc.o(.text.RCC_LSICmd) for RCC_LSICmd
    iec60730_b_clocktest.o(.text.Tim2_Init) refers to hal_rcc.o(.text.RCC_GetPCLK1Freq) for RCC_GetPCLK1Freq
    iec60730_b_clocktest.o(.text.Tim2_Init) refers to iec60730_b_clocktest.o(.bss.temp) for temp
    iec60730_b_clocktest.o(.ARM.exidx.text.Tim2_Init) refers to iec60730_b_clocktest.o(.text.Tim2_Init) for [Anonymous Symbol]
    iec60730_b_clocktest.o(.text.TIM2_IRQHandler) refers to hal_tim.o(.text.TIM_GetITStatus) for TIM_GetITStatus
    iec60730_b_clocktest.o(.text.TIM2_IRQHandler) refers to hal_tim.o(.text.TIM_GetCapture4) for TIM_GetCapture4
    iec60730_b_clocktest.o(.text.TIM2_IRQHandler) refers to hal_rcc.o(.text.RCC_GetPCLK1Freq) for RCC_GetPCLK1Freq
    iec60730_b_clocktest.o(.text.TIM2_IRQHandler) refers to hal_tim.o(.text.TIM_GetFlagStatus) for TIM_GetFlagStatus
    iec60730_b_clocktest.o(.text.TIM2_IRQHandler) refers to ffltui.o(.text) for __aeabi_ui2f
    iec60730_b_clocktest.o(.text.TIM2_IRQHandler) refers to fdiv.o(.text) for __aeabi_fdiv
    iec60730_b_clocktest.o(.text.TIM2_IRQHandler) refers to fmul.o(.text) for __aeabi_fmul
    iec60730_b_clocktest.o(.text.TIM2_IRQHandler) refers to ffixui.o(.text) for __aeabi_f2uiz
    iec60730_b_clocktest.o(.text.TIM2_IRQHandler) refers to hal_tim.o(.text.TIM_ClearFlag) for TIM_ClearFlag
    iec60730_b_clocktest.o(.text.TIM2_IRQHandler) refers to hal_tim.o(.text.TIM_ClearITPendingBit) for TIM_ClearITPendingBit
    iec60730_b_clocktest.o(.text.TIM2_IRQHandler) refers to iec60730_b_clocktest.o(.bss.tmpIC1) for [Anonymous Symbol]
    iec60730_b_clocktest.o(.text.TIM2_IRQHandler) refers to iec60730_b_startup.o(CLASS_B_RAM) for LSIPeriodFlag
    iec60730_b_clocktest.o(.text.TIM2_IRQHandler) refers to iec60730_b_startup.o(CLASS_B_RAM_REV) for PeriodValueInv
    iec60730_b_clocktest.o(.ARM.exidx.text.TIM2_IRQHandler) refers to iec60730_b_clocktest.o(.text.TIM2_IRQHandler) for [Anonymous Symbol]
    iec60730_b_clocktest.o(.text.IEC60730_HSE_LSIcheck) refers to iec60730_b_startup.o(CLASS_B_RAM) for LSIPeriodFlag
    iec60730_b_clocktest.o(.ARM.exidx.text.IEC60730_HSE_LSIcheck) refers to iec60730_b_clocktest.o(.text.IEC60730_HSE_LSIcheck) for [Anonymous Symbol]
    iec60730_b_clocktest.o(.text.IEC60730_HSI_LSIcheck) refers to iec60730_b_startup.o(CLASS_B_RAM) for LSIPeriodFlag
    iec60730_b_clocktest.o(.ARM.exidx.text.IEC60730_HSI_LSIcheck) refers to iec60730_b_clocktest.o(.text.IEC60730_HSI_LSIcheck) for [Anonymous Symbol]
    iec60730_b_runtimetest.o(.text.IEC60730_InitRunTimeChecks) refers to iec60730_b_transpram.o(.text.IEC60730_B_TranspMarchInit) for IEC60730_B_TranspMarchInit
    iec60730_b_runtimetest.o(.text.IEC60730_InitRunTimeChecks) refers to uidiv.o(.text) for __aeabi_uidiv
    iec60730_b_runtimetest.o(.text.IEC60730_InitRunTimeChecks) refers to iec60730_b_runtimetest.o(.text.SysTick_Config) for SysTick_Config
    iec60730_b_runtimetest.o(.text.IEC60730_InitRunTimeChecks) refers to printfa.o(i.__0printf) for printf
    iec60730_b_runtimetest.o(.text.IEC60730_InitRunTimeChecks) refers to iec60730_b_aux.o(.text.FailSafePOR) for FailSafePOR
    iec60730_b_runtimetest.o(.text.IEC60730_InitRunTimeChecks) refers to hal_crc.o(.text.CRC_ResetDR) for CRC_ResetDR
    iec60730_b_runtimetest.o(.text.IEC60730_InitRunTimeChecks) refers to hal_crc.o(.text.CRC_CalcBlockCRC) for CRC_CalcBlockCRC
    iec60730_b_runtimetest.o(.text.IEC60730_InitRunTimeChecks) refers to iec60730_b_startup.o(.text.Flashtest_config) for Flashtest_config
    iec60730_b_runtimetest.o(.text.IEC60730_InitRunTimeChecks) refers to iec60730_b_flashtest.o(.text.IEC60730_FlashCrc32Init) for IEC60730_FlashCrc32Init
    iec60730_b_runtimetest.o(.text.IEC60730_InitRunTimeChecks) refers to iec60730_b_startup.o(CLASS_B_RAM) for TickCounter
    iec60730_b_runtimetest.o(.text.IEC60730_InitRunTimeChecks) refers to iec60730_b_startup.o(CLASS_B_RAM_REV) for TickCounterInv
    iec60730_b_runtimetest.o(.text.IEC60730_InitRunTimeChecks) refers to iec60730_b_startup.o(STACK_BOTTOM) for aStackOverFlowPtrn
    iec60730_b_runtimetest.o(.text.IEC60730_InitRunTimeChecks) refers to system_mm32spin0280.o(.data.SystemCoreClock) for SystemCoreClock
    iec60730_b_runtimetest.o(.text.IEC60730_InitRunTimeChecks) refers to iec60730_b_runtimetest.o(.rodata.str1.1) for .L.str
    iec60730_b_runtimetest.o(.text.IEC60730_InitRunTimeChecks) refers to iec60730_b_startup.o(.bss.App_STEPS_NUMBER) for App_STEPS_NUMBER
    iec60730_b_runtimetest.o(.text.IEC60730_InitRunTimeChecks) refers to iec60730_b_runtimetest.o(.bss.FULL_FLASH_CHECKED) for FULL_FLASH_CHECKED
    iec60730_b_runtimetest.o(.text.IEC60730_InitRunTimeChecks) refers to iec60730_b_runtimetest.o(.bss.FlashRuntestcall) for FlashRuntestcall
    iec60730_b_runtimetest.o(.text.IEC60730_InitRunTimeChecks) refers to iec60730_b_flashtest.o(.text.IEC60730_crc32Run) for IEC60730_crc32Run
    iec60730_b_runtimetest.o(.ARM.exidx.text.IEC60730_InitRunTimeChecks) refers to iec60730_b_runtimetest.o(.text.IEC60730_InitRunTimeChecks) for [Anonymous Symbol]
    iec60730_b_runtimetest.o(.text.SysTick_Config) refers to iec60730_b_runtimetest.o(.text.__NVIC_SetPriority) for __NVIC_SetPriority
    iec60730_b_runtimetest.o(.ARM.exidx.text.SysTick_Config) refers to iec60730_b_runtimetest.o(.text.SysTick_Config) for [Anonymous Symbol]
    iec60730_b_runtimetest.o(.text.IEC60730_B_CpuRunTime_test) refers to iec60730_b_cpurunkeil.o(.text) for IEC60730_B_RunTimeCPUTest
    iec60730_b_runtimetest.o(.text.IEC60730_B_CpuRunTime_test) refers to iec60730_b_startup.o(CLASS_B_RAM) for CtrlFlowCnt
    iec60730_b_runtimetest.o(.text.IEC60730_B_CpuRunTime_test) refers to iec60730_b_startup.o(CLASS_B_RAM_REV) for CtrlFlowCntInv
    iec60730_b_runtimetest.o(.ARM.exidx.text.IEC60730_B_CpuRunTime_test) refers to iec60730_b_runtimetest.o(.text.IEC60730_B_CpuRunTime_test) for [Anonymous Symbol]
    iec60730_b_runtimetest.o(.text.IEC60730_Stack_Check) refers to iec60730_b_runtimetest.o(.text.IEC60730_CheckStack) for IEC60730_CheckStack
    iec60730_b_runtimetest.o(.text.IEC60730_Stack_Check) refers to iec60730_b_startup.o(CLASS_B_RAM) for CtrlFlowCnt
    iec60730_b_runtimetest.o(.text.IEC60730_Stack_Check) refers to iec60730_b_startup.o(CLASS_B_RAM_REV) for CtrlFlowCntInv
    iec60730_b_runtimetest.o(.ARM.exidx.text.IEC60730_Stack_Check) refers to iec60730_b_runtimetest.o(.text.IEC60730_Stack_Check) for [Anonymous Symbol]
    iec60730_b_runtimetest.o(.text.IEC60730_CheckStack) refers to iec60730_b_startup.o(CLASS_B_RAM) for CtrlFlowCnt
    iec60730_b_runtimetest.o(.text.IEC60730_CheckStack) refers to iec60730_b_startup.o(STACK_BOTTOM) for aStackOverFlowPtrn
    iec60730_b_runtimetest.o(.text.IEC60730_CheckStack) refers to iec60730_b_startup.o(CLASS_B_RAM_REV) for CtrlFlowCntInv
    iec60730_b_runtimetest.o(.ARM.exidx.text.IEC60730_CheckStack) refers to iec60730_b_runtimetest.o(.text.IEC60730_CheckStack) for [Anonymous Symbol]
    iec60730_b_runtimetest.o(.text.IEC60730_ClockTest_RunTime) refers to iec60730_b_clocktest.o(.text.IEC60730_MainClockTest) for IEC60730_MainClockTest
    iec60730_b_runtimetest.o(.text.IEC60730_ClockTest_RunTime) refers to printfa.o(i.__0printf) for printf
    iec60730_b_runtimetest.o(.text.IEC60730_ClockTest_RunTime) refers to iec60730_b_aux.o(.text.FailSafePOR) for FailSafePOR
    iec60730_b_runtimetest.o(.text.IEC60730_ClockTest_RunTime) refers to iec60730_b_startup.o(CLASS_B_RAM) for CtrlFlowCnt
    iec60730_b_runtimetest.o(.text.IEC60730_ClockTest_RunTime) refers to iec60730_b_runtimetest.o(.rodata.str1.1) for .L.str.3
    iec60730_b_runtimetest.o(.text.IEC60730_ClockTest_RunTime) refers to iec60730_b_startup.o(CLASS_B_RAM_REV) for CtrlFlowCntInv
    iec60730_b_runtimetest.o(.text.IEC60730_ClockTest_RunTime) refers to iec60730_b_runtimetest.o(.bss.runtime_checkindx) for runtime_checkindx
    iec60730_b_runtimetest.o(.ARM.exidx.text.IEC60730_ClockTest_RunTime) refers to iec60730_b_runtimetest.o(.text.IEC60730_ClockTest_RunTime) for [Anonymous Symbol]
    iec60730_b_runtimetest.o(.text.IEC60730_DoRunTimeChecks) refers to iec60730_b_runtimetest.o(.text.IEC60730_B_CpuRunTime_test) for IEC60730_B_CpuRunTime_test
    iec60730_b_runtimetest.o(.text.IEC60730_DoRunTimeChecks) refers to printfa.o(i.__0printf) for printf
    iec60730_b_runtimetest.o(.text.IEC60730_DoRunTimeChecks) refers to iec60730_b_aux.o(.text.FailSafePOR) for FailSafePOR
    iec60730_b_runtimetest.o(.text.IEC60730_DoRunTimeChecks) refers to iec60730_b_runtimetest.o(.text.IEC60730_Stack_Check) for IEC60730_Stack_Check
    iec60730_b_runtimetest.o(.text.IEC60730_DoRunTimeChecks) refers to iec60730_b_runtimetest.o(.text.IEC60730_ClockTest_RunTime) for IEC60730_ClockTest_RunTime
    iec60730_b_runtimetest.o(.text.IEC60730_DoRunTimeChecks) refers to iec60730_b_runtimetest.o(.text.IEC60730_B_FlashRunTime_test) for IEC60730_B_FlashRunTime_test
    iec60730_b_runtimetest.o(.text.IEC60730_DoRunTimeChecks) refers to iec60730_b_startup.o(CLASS_B_RAM) for TimeBaseFlag
    iec60730_b_runtimetest.o(.text.IEC60730_DoRunTimeChecks) refers to iec60730_b_startup.o(CLASS_B_RAM_REV) for TimeBaseFlagInv
    iec60730_b_runtimetest.o(.text.IEC60730_DoRunTimeChecks) refers to iec60730_b_runtimetest.o(.rodata.str1.1) for .L.str.7
    iec60730_b_runtimetest.o(.text.IEC60730_DoRunTimeChecks) refers to iec60730_b_runtimetest.o(.bss.runtime_checkindx) for runtime_checkindx
    iec60730_b_runtimetest.o(.ARM.exidx.text.IEC60730_DoRunTimeChecks) refers to iec60730_b_runtimetest.o(.text.IEC60730_DoRunTimeChecks) for [Anonymous Symbol]
    iec60730_b_runtimetest.o(.text.IEC60730_B_FlashRunTime_test) refers to printfa.o(i.__0printf) for printf
    iec60730_b_runtimetest.o(.text.IEC60730_B_FlashRunTime_test) refers to iec60730_b_aux.o(.text.FailSafePOR) for FailSafePOR
    iec60730_b_runtimetest.o(.text.IEC60730_B_FlashRunTime_test) refers to iec60730_b_runtimetest.o(.bss.runtime_flash_CtrlFlow_indx) for runtime_flash_CtrlFlow_indx
    iec60730_b_runtimetest.o(.text.IEC60730_B_FlashRunTime_test) refers to iec60730_b_startup.o(CLASS_B_RAM) for CtrlFlowCnt
    iec60730_b_runtimetest.o(.text.IEC60730_B_FlashRunTime_test) refers to iec60730_b_startup.o(CLASS_B_RAM_REV) for CtrlFlowCntInv
    iec60730_b_runtimetest.o(.text.IEC60730_B_FlashRunTime_test) refers to iec60730_b_runtimetest.o(.rodata.str1.1) for .L.str.7
    iec60730_b_runtimetest.o(.text.IEC60730_B_FlashRunTime_test) refers to iec60730_b_runtimetest.o(.bss.rom_test) for rom_test
    iec60730_b_runtimetest.o(.text.IEC60730_B_FlashRunTime_test) refers to iec60730_b_runtimetest.o(.bss.FULL_FLASH_CHECKED) for FULL_FLASH_CHECKED
    iec60730_b_runtimetest.o(.text.IEC60730_B_FlashRunTime_test) refers to iec60730_b_runtimetest.o(.bss.runtime_checkindx) for runtime_checkindx
    iec60730_b_runtimetest.o(.text.IEC60730_B_FlashRunTime_test) refers to iec60730_b_runtimetest.o(.bss.FlashRuntestcall) for FlashRuntestcall
    iec60730_b_runtimetest.o(.ARM.exidx.text.IEC60730_B_FlashRunTime_test) refers to iec60730_b_runtimetest.o(.text.IEC60730_B_FlashRunTime_test) for [Anonymous Symbol]
    iec60730_b_runtimetest.o(.ARM.exidx.text.__NVIC_SetPriority) refers to iec60730_b_runtimetest.o(.text.__NVIC_SetPriority) for [Anonymous Symbol]
    iec60730_b_startup.o(.text.Flashtest_config) refers to uidiv.o(.text) for __aeabi_uidiv
    iec60730_b_startup.o(.text.Flashtest_config) refers to iec60730_b_startup.o(.bss.App_ROM_START) for App_ROM_START
    iec60730_b_startup.o(.text.Flashtest_config) refers to iec60730_b_startup.o(.bss.App_ROM_END) for App_ROM_END
    iec60730_b_startup.o(.text.Flashtest_config) refers to iec60730_b_startup.o(.bss.App_ROM_SIZE) for App_ROM_SIZE
    iec60730_b_startup.o(.text.Flashtest_config) refers to iec60730_b_startup.o(.bss.App_ROM_SIZEinWORDS) for App_ROM_SIZEinWORDS
    iec60730_b_startup.o(.text.Flashtest_config) refers to iec60730_b_startup.o(.bss.App_STEPS_NUMBER) for App_STEPS_NUMBER
    iec60730_b_startup.o(.text.Flashtest_config) refers to iec60730_b_startup.o(.bss.App_FLASH_BLOCK_WORDS) for App_FLASH_BLOCK_WORDS
    iec60730_b_startup.o(.text.Flashtest_config) refers to iec60730_b_startup.o(.bss.App_REF_CRC32) for App_REF_CRC32
    iec60730_b_startup.o(.text.Flashtest_config) refers to iec60730_b_startup.o(.bss.FlashFulltestcall) for FlashFulltestcall
    iec60730_b_startup.o(.text.Flashtest_config) refers to iec60730_b_flashtest.o(.text.IEC60730_B_FullFlash_test) for IEC60730_B_FullFlash_test
    iec60730_b_startup.o(.ARM.exidx.text.Flashtest_config) refers to iec60730_b_startup.o(.text.Flashtest_config) for [Anonymous Symbol]
    iec60730_b_startup.o(.text.Ramtest_config) refers to iec60730_b_startup.o(.bss.RAMBuffertest_end) for RAMBuffertest_end
    iec60730_b_startup.o(.text.Ramtest_config) refers to iec60730_b_startup.o(.bss.RAMRunTimetest_start) for RAMRunTimetest_start
    iec60730_b_startup.o(.text.Ramtest_config) refers to iec60730_b_startup.o(.bss.RAMRunTimetest_end) for RAMRunTimetest_end
    iec60730_b_startup.o(.text.Ramtest_config) refers to iec60730_b_startup.o(.bss.RAM_endadd_run) for RAM_endadd_run
    iec60730_b_startup.o(.ARM.exidx.text.Ramtest_config) refers to iec60730_b_startup.o(.text.Ramtest_config) for [Anonymous Symbol]
    iec60730_b_startup.o(.text.IEC60730_B_FullCpu_test) refers to iec60730_b_cpustartkeil.o(.text) for IEC60730_B_StartUpCPUTest
    iec60730_b_startup.o(.text.IEC60730_B_FullCpu_test) refers to iec60730_b_startup.o(CLASS_B_RAM) for CtrlFlowCnt
    iec60730_b_startup.o(.text.IEC60730_B_FullCpu_test) refers to iec60730_b_startup.o(CLASS_B_RAM_REV) for CtrlFlowCntInv
    iec60730_b_startup.o(.ARM.exidx.text.IEC60730_B_FullCpu_test) refers to iec60730_b_startup.o(.text.IEC60730_B_FullCpu_test) for [Anonymous Symbol]
    iec60730_b_startup.o(.text.IEC60730_ClockTest_Startup) refers to iec60730_b_clocktest.o(.text.IEC60730_ClockStartUpTest) for IEC60730_ClockStartUpTest
    iec60730_b_startup.o(.text.IEC60730_ClockTest_Startup) refers to iec60730_b_aux.o(.text.FailSafePOR) for FailSafePOR
    iec60730_b_startup.o(.text.IEC60730_ClockTest_Startup) refers to iec60730_b_startup.o(CLASS_B_RAM) for CtrlFlowCnt
    iec60730_b_startup.o(.text.IEC60730_ClockTest_Startup) refers to iec60730_b_startup.o(CLASS_B_RAM_REV) for CtrlFlowCntInv
    iec60730_b_startup.o(.ARM.exidx.text.IEC60730_ClockTest_Startup) refers to iec60730_b_startup.o(.text.IEC60730_ClockTest_Startup) for [Anonymous Symbol]
    iec60730_b_startup.o(.text.$Sub$$main) refers to iec60730_b_startup.o(.text.IEC60730_B_startup) for IEC60730_B_startup
    iec60730_b_startup.o(.text.$Sub$$main) refers to main.o(.text.main) for $Super$$main
    iec60730_b_startup.o(.ARM.exidx.text.$Sub$$main) refers to iec60730_b_startup.o(.text.$Sub$$main) for [Anonymous Symbol]
    iec60730_b_startup.o(.text.IEC60730_B_startup) refers to uart_classb.o(.text.CBUart_Init) for CBUart_Init
    iec60730_b_startup.o(.text.IEC60730_B_startup) refers to iec60730_b_startup.o(.text.IEC60730_B_FullCpu_test) for IEC60730_B_FullCpu_test
    iec60730_b_startup.o(.text.IEC60730_B_startup) refers to iec60730_b_aux.o(.text.FailSafePOR) for FailSafePOR
    iec60730_b_startup.o(.text.IEC60730_B_startup) refers to iec60730_b_aux.o(.text.IEC60730_B_WDGSelfTest) for IEC60730_B_WDGSelfTest
    iec60730_b_startup.o(.text.IEC60730_B_startup) refers to iec60730_b_startup.o(.text.Flashtest_config) for Flashtest_config
    iec60730_b_startup.o(.text.IEC60730_B_startup) refers to iec60730_b_startup.o(.text.control_flow_check_point) for control_flow_check_point
    iec60730_b_startup.o(.text.IEC60730_B_startup) refers to iec60730_b_startup.o(.text.Ramtest_config) for Ramtest_config
    iec60730_b_startup.o(.text.IEC60730_B_startup) refers to iec60730_b_ramtestkeil.o(.text) for IEC60730_B_FullRamMarchC
    iec60730_b_startup.o(.text.IEC60730_B_startup) refers to iec60730_b_startup.o(.text.IEC60730_B_CRC_StoreclassBData) for IEC60730_B_CRC_StoreclassBData
    iec60730_b_startup.o(.text.IEC60730_B_startup) refers to iec60730_b_startup.o(.text.IEC60730_ClockTest_Startup) for IEC60730_ClockTest_Startup
    iec60730_b_startup.o(.text.IEC60730_B_startup) refers to entry.o(.ARM.Collect$$$$00000000) for __main
    iec60730_b_startup.o(.text.IEC60730_B_startup) refers to iec60730_b_startup.o(CLASS_B_RAM_REV) for TickCounterInv
    iec60730_b_startup.o(.text.IEC60730_B_startup) refers to iec60730_b_startup.o(CLASS_B_RAM) for TickCounter
    iec60730_b_startup.o(.text.IEC60730_B_startup) refers to iec60730_b_startup.o(.bss.FlashFulltestcall) for FlashFulltestcall
    iec60730_b_startup.o(.text.IEC60730_B_startup) refers to iec60730_b_startup.o(.bss.RAM_endadd_run) for RAM_endadd_run
    iec60730_b_startup.o(.text.IEC60730_B_startup) refers to iec60730_b_startup.o(STACK_BOTTOM) for aStackOverFlowPtrn
    iec60730_b_startup.o(.ARM.exidx.text.IEC60730_B_startup) refers to iec60730_b_startup.o(.text.IEC60730_B_startup) for [Anonymous Symbol]
    iec60730_b_startup.o(.text.control_flow_check_point) refers to iec60730_b_startup.o(CLASS_B_RAM) for CtrlFlowCnt
    iec60730_b_startup.o(.text.control_flow_check_point) refers to iec60730_b_startup.o(CLASS_B_RAM_REV) for CtrlFlowCntInv
    iec60730_b_startup.o(.ARM.exidx.text.control_flow_check_point) refers to iec60730_b_startup.o(.text.control_flow_check_point) for [Anonymous Symbol]
    iec60730_b_startup.o(.text.IEC60730_B_CRC_StoreclassBData) refers to hal_crc.o(.text.CRC_ResetDR) for CRC_ResetDR
    iec60730_b_startup.o(.text.IEC60730_B_CRC_StoreclassBData) refers to hal_crc.o(.text.CRC_CalcBlockCRC) for CRC_CalcBlockCRC
    iec60730_b_startup.o(.text.IEC60730_B_CRC_StoreclassBData) refers to iec60730_b_startup.o(CLASS_B_RAM) for CtrlFlowCnt
    iec60730_b_startup.o(.text.IEC60730_B_CRC_StoreclassBData) refers to iec60730_b_startup.o(CLASS_B_RAM_REV) for RefCrc32Inv
    iec60730_b_startup.o(.ARM.exidx.text.IEC60730_B_CRC_StoreclassBData) refers to iec60730_b_startup.o(.text.IEC60730_B_CRC_StoreclassBData) for [Anonymous Symbol]
    mlib.o(.text) refers to mlib.o(.constdata) for .constdata
    iec60730_b_cpurunkeil.o(.text) refers to iec60730_b_aux.o(.text.FailSafePOR) for FailSafePOR
    iec60730_b_cpurunkeil.o(.text) refers to iec60730_b_startup.o(CLASS_B_RAM) for CtrlFlowCnt
    iec60730_b_cpurunkeil.o(.text) refers to iec60730_b_cpustartkeil.o(.text) for conAA
    iec60730_b_cpurunkeil.o(.text) refers to iec60730_b_startup.o(CLASS_B_RAM_REV) for CtrlFlowCntInv
    iec60730_b_cpustartkeil.o(.text) refers (Special) to iec60730_b_startup.o(.bss.Error_word) for Error_word
    iec60730_b_cpustartkeil.o(.text) refers to iec60730_b_aux.o(.text.FailSafePOR) for FailSafePOR
    iec60730_b_cpustartkeil.o(.text) refers to iec60730_b_startup.o(CLASS_B_RAM) for CtrlFlowCnt
    iec60730_b_cpustartkeil.o(.text) refers to iec60730_b_startup.o(CLASS_B_RAM_REV) for CtrlFlowCntInv
    iec60730_b_ramtestkeil.o(.text) refers to iec60730_b_cpustartkeil.o(.text) for conAA
    iec60730_b_ramtestkeil.o(.text) refers to iec60730_b_startup.o(CLASS_B_RAM) for ISRCtrlFlowCnt
    iec60730_b_ramtestkeil.o(.text) refers to iec60730_b_startup.o(CLASS_B_RAM_REV) for ISRCtrlFlowCntInv
    iec60730_b_flashtest.o(.text.IEC60730_FlashCrc32Init) refers to hal_crc.o(.text.CRC_ResetDR) for CRC_ResetDR
    iec60730_b_flashtest.o(.text.IEC60730_FlashCrc32Init) refers to iec60730_b_startup.o(.bss.App_ROM_START) for App_ROM_START
    iec60730_b_flashtest.o(.text.IEC60730_FlashCrc32Init) refers to iec60730_b_startup.o(CLASS_B_RAM) for pRunCrc32Chk
    iec60730_b_flashtest.o(.text.IEC60730_FlashCrc32Init) refers to iec60730_b_startup.o(CLASS_B_RAM_REV) for pRunCrc32ChkInv
    iec60730_b_flashtest.o(.ARM.exidx.text.IEC60730_FlashCrc32Init) refers to iec60730_b_flashtest.o(.text.IEC60730_FlashCrc32Init) for [Anonymous Symbol]
    iec60730_b_flashtest.o(.text.IEC60730_B_FullFlash_test) refers to hal_rcc.o(.text.RCC_AHBPeriphClockCmd) for RCC_AHBPeriphClockCmd
    iec60730_b_flashtest.o(.text.IEC60730_B_FullFlash_test) refers to hal_crc.o(.text.CRC_ResetDR) for CRC_ResetDR
    iec60730_b_flashtest.o(.text.IEC60730_B_FullFlash_test) refers to iec60730_b_startup.o(CLASS_B_RAM) for CtrlFlowCnt
    iec60730_b_flashtest.o(.text.IEC60730_B_FullFlash_test) refers to iec60730_b_startup.o(.bss.App_ROM_SIZEinWORDS) for App_ROM_SIZEinWORDS
    iec60730_b_flashtest.o(.text.IEC60730_B_FullFlash_test) refers to iec60730_b_startup.o(CLASS_B_RAM_REV) for CtrlFlowCntInv
    iec60730_b_flashtest.o(.text.IEC60730_B_FullFlash_test) refers to iec60730_b_startup.o(.bss.App_REF_CRC32) for App_REF_CRC32
    iec60730_b_flashtest.o(.text.IEC60730_B_FullFlash_test) refers to iec60730_b_startup.o(.bss.App_ROM_START) for App_ROM_START
    iec60730_b_flashtest.o(.ARM.exidx.text.IEC60730_B_FullFlash_test) refers to iec60730_b_flashtest.o(.text.IEC60730_B_FullFlash_test) for [Anonymous Symbol]
    iec60730_b_flashtest.o(.text.IEC60730_crc32Run) refers to iec60730_b_flashtest.o(.text.IEC60730_FlashCrc32Init) for IEC60730_FlashCrc32Init
    iec60730_b_flashtest.o(.text.IEC60730_crc32Run) refers to iec60730_b_startup.o(CLASS_B_RAM) for CtrlFlowCnt
    iec60730_b_flashtest.o(.text.IEC60730_crc32Run) refers to iec60730_b_startup.o(CLASS_B_RAM_REV) for pRunCrc32ChkInv
    iec60730_b_flashtest.o(.text.IEC60730_crc32Run) refers to iec60730_b_startup.o(.bss.App_ROM_END) for App_ROM_END
    iec60730_b_flashtest.o(.text.IEC60730_crc32Run) refers to iec60730_b_startup.o(.bss.App_REF_CRC32) for App_REF_CRC32
    iec60730_b_flashtest.o(.text.IEC60730_crc32Run) refers to iec60730_b_startup.o(.bss.App_FLASH_BLOCK_WORDS) for App_FLASH_BLOCK_WORDS
    iec60730_b_flashtest.o(.ARM.exidx.text.IEC60730_crc32Run) refers to iec60730_b_flashtest.o(.text.IEC60730_crc32Run) for [Anonymous Symbol]
    iec60730_b_transpram.o(.text.IEC60730_B_TranspMarchInit) refers to iec60730_b_startup.o(.text.Ramtest_config) for Ramtest_config
    iec60730_b_transpram.o(.text.IEC60730_B_TranspMarchInit) refers to iec60730_b_startup.o(.bss.RAMRunTimetest_start) for RAMRunTimetest_start
    iec60730_b_transpram.o(.text.IEC60730_B_TranspMarchInit) refers to iec60730_b_startup.o(RUN_TIME_RAM_PNT) for pRunTimeRamChk
    iec60730_b_transpram.o(.ARM.exidx.text.IEC60730_B_TranspMarchInit) refers to iec60730_b_transpram.o(.text.IEC60730_B_TranspMarchInit) for [Anonymous Symbol]
    iec60730_b_transpram.o(.text.IEC60730_B_TranspMarch) refers to iec60730_b_ramtestkeil.o(.text) for IEC60730_B_TranspRamMarchCXStep
    iec60730_b_transpram.o(.text.IEC60730_B_TranspMarch) refers to iec60730_b_startup.o(RUN_TIME_RAM_PNT) for pRunTimeRamChk
    iec60730_b_transpram.o(.text.IEC60730_B_TranspMarch) refers to iec60730_b_startup.o(RUN_TIME_RAM_BUF) for aRunTimeRamBuf
    iec60730_b_transpram.o(.ARM.exidx.text.IEC60730_B_TranspMarch) refers to iec60730_b_transpram.o(.text.IEC60730_B_TranspMarch) for [Anonymous Symbol]
    iec60730_b_transpram.o(.text.IEC60730_B_StartupMarch) refers to iec60730_b_ramtestkeil.o(.text) for IEC60730_B_TranspRamMarchCXStep
    iec60730_b_transpram.o(.text.IEC60730_B_StartupMarch) refers to iec60730_b_startup.o(RUN_TIME_RAM_PNT) for pRunTimeRamChk
    iec60730_b_transpram.o(.text.IEC60730_B_StartupMarch) refers to iec60730_b_startup.o(RUN_TIME_RAM_BUF) for aRunTimeRamBuf
    iec60730_b_transpram.o(.ARM.exidx.text.IEC60730_B_StartupMarch) refers to iec60730_b_transpram.o(.text.IEC60730_B_StartupMarch) for [Anonymous Symbol]
    iec60730_b_transpram.o(.text.IEC60730_B_StartupMarch_VA5) refers to iec60730_b_ramtestkeil.o(.text) for IEC60730_B_TranspRamMarchCXStep
    iec60730_b_transpram.o(.text.IEC60730_B_StartupMarch_VA5) refers to iec60730_b_startup.o(RUN_TIME_RAM_PNT) for pRunTimeRamChk
    iec60730_b_transpram.o(.text.IEC60730_B_StartupMarch_VA5) refers to iec60730_b_startup.o(RUN_TIME_RAM_BUF) for aRunTimeRamBuf
    iec60730_b_transpram.o(.ARM.exidx.text.IEC60730_B_StartupMarch_VA5) refers to iec60730_b_transpram.o(.text.IEC60730_B_StartupMarch_VA5) for [Anonymous Symbol]
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry10a.o(.ARM.Collect$$$$0000000D) for __rt_final_cpp
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry11a.o(.ARM.Collect$$$$0000000F) for __rt_final_exit
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry7b.o(.ARM.Collect$$$$00000008) for _main_clock
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry8b.o(.ARM.Collect$$$$0000000A) for _main_cpp_init
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry9a.o(.ARM.Collect$$$$0000000B) for _main_init
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry5.o(.ARM.Collect$$$$00000004) for _main_scatterload
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry2.o(.ARM.Collect$$$$00000001) for _main_stk
    idiv.o(.text) refers to uidiv.o(.text) for __aeabi_uidivmod
    printfa.o(i.__0fprintf) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i.__0fprintf) refers to printfa.o(i._printf_core) for _printf_core
    printfa.o(i.__0fprintf) refers to uart_classb.o(.text.fputc) for fputc
    printfa.o(i.__0printf) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i.__0printf) refers to printfa.o(i._printf_core) for _printf_core
    printfa.o(i.__0printf) refers to uart_classb.o(.text.fputc) for fputc
    printfa.o(i.__0printf) refers to stdout.o(.data) for __stdout
    printfa.o(i.__0snprintf) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i.__0snprintf) refers to printfa.o(i._printf_core) for _printf_core
    printfa.o(i.__0snprintf) refers to printfa.o(i._snputc) for _snputc
    printfa.o(i.__0sprintf) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i.__0sprintf) refers to printfa.o(i._printf_core) for _printf_core
    printfa.o(i.__0sprintf) refers to printfa.o(i._sputc) for _sputc
    printfa.o(i.__0vfprintf) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i.__0vfprintf) refers to printfa.o(i._printf_core) for _printf_core
    printfa.o(i.__0vfprintf) refers to uart_classb.o(.text.fputc) for fputc
    printfa.o(i.__0vprintf) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i.__0vprintf) refers to printfa.o(i._printf_core) for _printf_core
    printfa.o(i.__0vprintf) refers to uart_classb.o(.text.fputc) for fputc
    printfa.o(i.__0vprintf) refers to stdout.o(.data) for __stdout
    printfa.o(i.__0vsnprintf) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i.__0vsnprintf) refers to printfa.o(i._printf_core) for _printf_core
    printfa.o(i.__0vsnprintf) refers to printfa.o(i._snputc) for _snputc
    printfa.o(i.__0vsprintf) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i.__0vsprintf) refers to printfa.o(i._printf_core) for _printf_core
    printfa.o(i.__0vsprintf) refers to printfa.o(i._sputc) for _sputc
    printfa.o(i._fp_digits) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i._fp_digits) refers to dmul.o(.text) for __aeabi_dmul
    printfa.o(i._fp_digits) refers to ddiv.o(.text) for __aeabi_ddiv
    printfa.o(i._fp_digits) refers to cdrcmple.o(.text) for __aeabi_cdrcmple
    printfa.o(i._fp_digits) refers to dadd.o(.text) for __aeabi_dadd
    printfa.o(i._fp_digits) refers to dfixul.o(.text) for __aeabi_d2ulz
    printfa.o(i._fp_digits) refers to uldiv.o(.text) for __aeabi_uldivmod
    printfa.o(i._printf_core) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i._printf_core) refers to printfa.o(i._printf_pre_padding) for _printf_pre_padding
    printfa.o(i._printf_core) refers to uldiv.o(.text) for __aeabi_uldivmod
    printfa.o(i._printf_core) refers to printfa.o(i._printf_post_padding) for _printf_post_padding
    printfa.o(i._printf_core) refers to printfa.o(i._fp_digits) for _fp_digits
    printfa.o(i._printf_core) refers to uidiv.o(.text) for __aeabi_uidivmod
    printfa.o(i._printf_post_padding) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i._printf_pre_padding) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i._snputc) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i._sputc) refers (Special) to iusefp.o(.text) for __I$use$fp
    fmul.o(.text) refers (Special) to iusefp.o(.text) for __I$use$fp
    fdiv.o(.text) refers (Special) to iusefp.o(.text) for __I$use$fp
    fdiv.o(.text) refers to fepilogue.o(.text) for _float_round
    dadd.o(.text) refers (Special) to iusefp.o(.text) for __I$use$fp
    dadd.o(.text) refers to llshl.o(.text) for __aeabi_llsl
    dadd.o(.text) refers to llsshr.o(.text) for __aeabi_lasr
    dadd.o(.text) refers to depilogue.o(.text) for _double_epilogue
    dmul.o(.text) refers (Special) to iusefp.o(.text) for __I$use$fp
    dmul.o(.text) refers to depilogue.o(.text) for _double_epilogue
    ddiv.o(.text) refers (Special) to iusefp.o(.text) for __I$use$fp
    ddiv.o(.text) refers to depilogue.o(.text) for _double_round
    dcmple.o(.text) refers (Special) to iusefp.o(.text) for __I$use$fp
    dcmplt.o(.text) refers (Special) to iusefp.o(.text) for __I$use$fp
    dcmpge.o(.text) refers (Special) to iusefp.o(.text) for __I$use$fp
    ffltui.o(.text) refers (Special) to iusefp.o(.text) for __I$use$fp
    ffltui.o(.text) refers to fepilogue.o(.text) for _float_epilogue
    dflti.o(.text) refers (Special) to iusefp.o(.text) for __I$use$fp
    dflti.o(.text) refers to depilogue.o(.text) for _double_epilogue
    ffixui.o(.text) refers (Special) to iusefp.o(.text) for __I$use$fp
    dfixi.o(.text) refers (Special) to iusefp.o(.text) for __I$use$fp
    dfixi.o(.text) refers to llushr.o(.text) for __aeabi_llsr
    f2d.o(.text) refers (Special) to iusefp.o(.text) for __I$use$fp
    entry2.o(.ARM.Collect$$$$00000001) refers to entry2.o(.ARM.Collect$$$$00002712) for __lit__00000000
    entry2.o(.ARM.Collect$$$$00002712) refers to startup_mm32spin0280_keil.o(STACK) for __initial_sp
    entry2.o(__vectab_stack_and_reset_area) refers to startup_mm32spin0280_keil.o(STACK) for __initial_sp
    entry2.o(__vectab_stack_and_reset_area) refers to entry.o(.ARM.Collect$$$$00000000) for __main
    entry5.o(.ARM.Collect$$$$00000004) refers to init.o(.text) for __scatterload
    entry9a.o(.ARM.Collect$$$$0000000B) refers to iec60730_b_startup.o(.text.$Sub$$main) for main
    entry9b.o(.ARM.Collect$$$$0000000C) refers to iec60730_b_startup.o(.text.$Sub$$main) for main
    uldiv.o(.text) refers to llushr.o(.text) for __aeabi_llsr
    uldiv.o(.text) refers to llshl.o(.text) for __aeabi_llsl
    fepilogue.o(.text) refers (Special) to iusefp.o(.text) for __I$use$fp
    depilogue.o(.text) refers (Special) to iusefp.o(.text) for __I$use$fp
    depilogue.o(.text) refers to depilogue.o(i.__ARM_clz) for __ARM_clz
    depilogue.o(.text) refers to llshl.o(.text) for __aeabi_llsl
    depilogue.o(.text) refers to llushr.o(.text) for __aeabi_llsr
    dfixul.o(.text) refers (Special) to iusefp.o(.text) for __I$use$fp
    dfixul.o(.text) refers to llushr.o(.text) for __aeabi_llsr
    dfixul.o(.text) refers to llshl.o(.text) for __aeabi_llsl
    cdrcmple.o(.text) refers (Special) to iusefp.o(.text) for __I$use$fp
    init.o(.text) refers to entry5.o(.ARM.Collect$$$$00000004) for __main_after_scatterload
    depilogue.o(i.__ARM_clz) refers (Special) to iusefp.o(.text) for __I$use$fp


==============================================================================

Removing Unused input sections from the image.

    Removing delay.o(.text), (0 bytes).
    Removing delay.o(.text.DELAY_Init), (52 bytes).
    Removing delay.o(.ARM.exidx.text.DELAY_Init), (8 bytes).
    Removing delay.o(.text.SysTick_Config), (88 bytes).
    Removing delay.o(.ARM.exidx.text.SysTick_Config), (8 bytes).
    Removing delay.o(.text.__NVIC_SetPriority), (144 bytes).
    Removing delay.o(.ARM.exidx.text.__NVIC_SetPriority), (8 bytes).
    Removing delay.o(.text.DELAY_Ms), (36 bytes).
    Removing delay.o(.ARM.exidx.text.DELAY_Ms), (8 bytes).
    Removing delay.o(.bss.sTimingDelay), (4 bytes).
    Removing main.o(.text), (0 bytes).
    Removing main.o(.ARM.exidx.text.WDG_Init), (8 bytes).
    Removing main.o(.ARM.exidx.text.WDG_Refresh), (8 bytes).
    Removing main.o(.ARM.exidx.text.main), (8 bytes).
    Removing main.o(.bss.systick), (24 bytes).
    Removing sys.o(.text), (0 bytes).
    Removing sys.o(.text.exRCC_ClkPrescaler_Init), (68 bytes).
    Removing sys.o(.ARM.exidx.text.exRCC_ClkPrescaler_Init), (8 bytes).
    Removing sys.o(.text.SYSCLK_Init), (956 bytes).
    Removing sys.o(.ARM.exidx.text.SYSCLK_Init), (8 bytes).
    Removing sys.o(.text.DELAY_xUs), (120 bytes).
    Removing sys.o(.ARM.exidx.text.DELAY_xUs), (8 bytes).
    Removing sys.o(.text.RCC_SetDefault), (84 bytes).
    Removing sys.o(.ARM.exidx.text.RCC_SetDefault), (8 bytes).
    Removing sys.o(.text.SystemReInit), (32 bytes).
    Removing sys.o(.ARM.exidx.text.SystemReInit), (8 bytes).
    Removing sys.o(.data.gSystemClockValue), (4 bytes).
    Removing sys.o(.rodata.cRCC_ClockPrescalerTable), (12 bytes).
    Removing sys.o(.rodata..LSYSCLK_Init.latency_pllmul_plldiv_sysclksrc_pllsrc_table), (105 bytes).
    Removing board.o(.text), (0 bytes).
    Removing board.o(.ARM.exidx.text.Bsp_Op_Init), (8 bytes).
    Removing board.o(.ARM.exidx.text.Bsp_Adc_Init), (8 bytes).
    Removing board.o(.ARM.exidx.text.Bsp_Comp_Init), (8 bytes).
    Removing board.o(.ARM.exidx.text.Bsp_Led_Init), (8 bytes).
    Removing board.o(.ARM.exidx.text.Bsp_Pwm_Init), (8 bytes).
    Removing board.o(.text.BSP_vIdlePortInit), (164 bytes).
    Removing board.o(.ARM.exidx.text.BSP_vIdlePortInit), (8 bytes).
    Removing board.o(.text.BSP_vIICInit), (56 bytes).
    Removing board.o(.ARM.exidx.text.BSP_vIICInit), (8 bytes).
    Removing board.o(.text.BSP_vExti9Config), (56 bytes).
    Removing board.o(.ARM.exidx.text.BSP_vExti9Config), (8 bytes).
    Removing board.o(.text.BSP_vExti7Config), (52 bytes).
    Removing board.o(.ARM.exidx.text.BSP_vExti7Config), (8 bytes).
    Removing board.o(.ARM.exidx.text.BSP_vUARTInit), (8 bytes).
    Removing board.o(.ARM.exidx.text.Bsp_Capture_Init), (8 bytes).
    Removing board.o(.ARM.exidx.text.Bsp_PWM_Output_Init), (8 bytes).
    Removing board.o(.ARM.exidx.text.BSP_vDirectionDetect_Init), (8 bytes).
    Removing board.o(.ARM.exidx.text.Bsp_Gpio_Init), (8 bytes).
    Removing board.o(.ARM.exidx.text.Board_ADC_Init), (8 bytes).
    Removing board.o(.ARM.exidx.text.Board_Comp_Init), (8 bytes).
    Removing board.o(.text.BOD_vI2CConfig), (2 bytes).
    Removing board.o(.ARM.exidx.text.BOD_vI2CConfig), (8 bytes).
    Removing board.o(.text.BOD_vExti9Config), (12 bytes).
    Removing board.o(.ARM.exidx.text.BOD_vExti9Config), (8 bytes).
    Removing board.o(.text.EXTI9_NVIC_Config), (50 bytes).
    Removing board.o(.ARM.exidx.text.EXTI9_NVIC_Config), (8 bytes).
    Removing board.o(.text.EXTI_NVIC_Init), (24 bytes).
    Removing board.o(.ARM.exidx.text.EXTI_NVIC_Init), (8 bytes).
    Removing board.o(.text.BOD_vExti7Config), (12 bytes).
    Removing board.o(.ARM.exidx.text.BOD_vExti7Config), (8 bytes).
    Removing board.o(.text.EXTI7_NVIC_Config), (48 bytes).
    Removing board.o(.ARM.exidx.text.EXTI7_NVIC_Config), (8 bytes).
    Removing board.o(.ARM.exidx.text.Peripheral_Init), (8 bytes).
    Removing mm32_it.o(.text), (0 bytes).
    Removing mm32_it.o(.ARM.exidx.text.NVIC_Configure), (8 bytes).
    Removing mm32_it.o(.ARM.exidx.text.Interrupt_Init), (8 bytes).
    Removing mm32_it.o(.ARM.exidx.text.__NVIC_SetPriority), (8 bytes).
    Removing mm32_it.o(.ARM.exidx.text.WWDG_IRQHandler), (8 bytes).
    Removing mm32_it.o(.ARM.exidx.text.PVD_IRQHandler), (8 bytes).
    Removing mm32_it.o(.ARM.exidx.text.PWM_IRQHandler), (8 bytes).
    Removing mm32_it.o(.ARM.exidx.text.FLASH_IRQHandler), (8 bytes).
    Removing mm32_it.o(.ARM.exidx.text.RCC_IRQHandler), (8 bytes).
    Removing mm32_it.o(.ARM.exidx.text.EXTI0_1_IRQHandler), (8 bytes).
    Removing mm32_it.o(.ARM.exidx.text.EXTI2_3_IRQHandler), (8 bytes).
    Removing mm32_it.o(.ARM.exidx.text.EXTI4_15_IRQHandler), (8 bytes).
    Removing mm32_it.o(.ARM.exidx.text.HWDIV_IRQHandler), (8 bytes).
    Removing mm32_it.o(.ARM.exidx.text.DMA1_Channel1_IRQHandler), (8 bytes).
    Removing mm32_it.o(.ARM.exidx.text.DMA1_Channel2_3_IRQHandler), (8 bytes).
    Removing mm32_it.o(.ARM.exidx.text.DMA1_Channel4_5_IRQHandler), (8 bytes).
    Removing mm32_it.o(.ARM.exidx.text.ADC1_IRQHandler), (8 bytes).
    Removing mm32_it.o(.ARM.exidx.text.TIM1_BRK_UP_TRG_COM_IRQHandler), (8 bytes).
    Removing mm32_it.o(.ARM.exidx.text.TIM1_CC_IRQHandler), (8 bytes).
    Removing mm32_it.o(.ARM.exidx.text.TIM3_IRQHandler), (8 bytes).
    Removing mm32_it.o(.ARM.exidx.text.TIM8_BRK_UP_TRG_COM_IRQHandler), (8 bytes).
    Removing mm32_it.o(.ARM.exidx.text.TIM8_CC_IRQHandler), (8 bytes).
    Removing mm32_it.o(.ARM.exidx.text.TIM14_IRQHandler), (8 bytes).
    Removing mm32_it.o(.ARM.exidx.text.ADC2_IRQHandler), (8 bytes).
    Removing mm32_it.o(.ARM.exidx.text.MIT_vReadNormalADCValue), (8 bytes).
    Removing mm32_it.o(.ARM.exidx.text.TIM16_IRQHandler), (8 bytes).
    Removing mm32_it.o(.ARM.exidx.text.TIM17_IRQHandler), (8 bytes).
    Removing mm32_it.o(.ARM.exidx.text.I2C1_IRQHandler), (8 bytes).
    Removing mm32_it.o(.ARM.exidx.text.COMP1_2_3_4_5_IRQHandler), (8 bytes).
    Removing mm32_it.o(.ARM.exidx.text.SPI1_IRQHandler), (8 bytes).
    Removing mm32_it.o(.ARM.exidx.text.SPI2_IRQHandler), (8 bytes).
    Removing mm32_it.o(.ARM.exidx.text.UART1_IRQHandler), (8 bytes).
    Removing mm32_it.o(.ARM.exidx.text.UART2_IRQHandler), (8 bytes).
    Removing mm32_it.o(.text.CSM_IRQn_IRQHan), (2 bytes).
    Removing mm32_it.o(.ARM.exidx.text.CSM_IRQn_IRQHan), (8 bytes).
    Removing mm32_it.o(.ARM.exidx.text.UART3_IRQHandler), (8 bytes).
    Removing mm32_it.o(.ARM.exidx.text.STK_vSetGenericTimerCallbackFunc), (8 bytes).
    Removing mm32_it.o(.ARM.exidx.text.UART_vSetUartReceiveCallbackFunc), (8 bytes).
    Removing mm32_it.o(.ARM.exidx.text.MIT_ptGetCaptureData), (8 bytes).
    Removing user_function.o(.text), (0 bytes).
    Removing user_function.o(.ARM.exidx.text.Init_Parameter), (8 bytes).
    Removing user_function.o(.ARM.exidx.text.MLIB_Neg_Q15), (8 bytes).
    Removing user_function.o(.ARM.exidx.text.variable_reset), (8 bytes).
    Removing user_function.o(.ARM.exidx.text.Var_Filt), (8 bytes).
    Removing user_function.o(.ARM.exidx.text.MLIB_FilterMA_Q15), (8 bytes).
    Removing user_function.o(.ARM.exidx.text.UFN_vBackwardParamStartupInit), (8 bytes).
    Removing user_function.o(.ARM.exidx.text.UFN_vForwardParamStartupInit), (8 bytes).
    Removing user_function.o(.ARM.exidx.text.MLIB_AddSat_Q31), (8 bytes).
    Removing user_function.o(.ARM.exidx.text.MLIB_ShR_Q31), (8 bytes).
    Removing user_function.o(.ARM.exidx.text.MLIB_SubSat_Q31), (8 bytes).
    Removing user_function.o(.ARM.exidx.text.MLIB_Sat_Q15), (8 bytes).
    Removing modbus.o(.text), (0 bytes).
    Removing modbus.o(.ARM.exidx.text.MOS_vTriggerEvent), (8 bytes).
    Removing modbus.o(.ARM.exidx.text.MOS_vEventHandler), (8 bytes).
    Removing modbus.o(.ARM.exidx.text.MOS_vRegisterHandler), (8 bytes).
    Removing modbus.o(.ARM.exidx.text.MOS_vWriteDataIntoEEP), (8 bytes).
    Removing modbus.o(.ARM.exidx.text.MOS_vSlaveAddressUpdate), (8 bytes).
    Removing modbus.o(.ARM.exidx.text.MOS_vCallbackInit), (8 bytes).
    Removing modbus.o(.ARM.exidx.text.MOS_vTimeoutInterrupt), (8 bytes).
    Removing modbus.o(.ARM.exidx.text.MOS_vDataReceiveInterrupt), (8 bytes).
    Removing modbus.o(.ARM.exidx.text.MOS_vModbusInit), (8 bytes).
    Removing modbus.o(.ARM.exidx.text.MOS_vModbusProtocalConfig), (8 bytes).
    Removing modbus.o(.ARM.exidx.text.MOS_vConfigureSlaveAddress), (8 bytes).
    Removing modbus.o(.text.MOS_vModbusTransmitEnalbe), (2 bytes).
    Removing modbus.o(.ARM.exidx.text.MOS_vModbusTransmitEnalbe), (8 bytes).
    Removing modbus.o(.ARM.exidx.text.MOS_vCheckWriteDataCommand), (8 bytes).
    Removing modbus.o(.ARM.exidx.text.MOS_vModbudFun6), (8 bytes).
    Removing modbus.o(.ARM.exidx.text.MOS_vCheckReadAllDataCommand), (8 bytes).
    Removing modbus.o(.ARM.exidx.text.MOS_vModbusFun4), (8 bytes).
    Removing modbus.o(.ARM.exidx.text.MOS_vReadWriteDataCommon), (8 bytes).
    Removing modbus.o(.ARM.exidx.text.MOS_vModBusHandler_2), (8 bytes).
    Removing modbus.o(.ARM.exidx.text.MOS_bGetInitStatus), (8 bytes).
    Removing modbus.o(.bss.Reg), (24 bytes).
    Removing modbus.o(.rodata.MOS_auModebusIntervalTime), (7 bytes).
    Removing modbuscrc.o(.text), (0 bytes).
    Removing modbuscrc.o(.ARM.exidx.text.crc16), (8 bytes).
    Removing timeslice.o(.text), (0 bytes).
    Removing timeslice.o(.ARM.exidx.text.TSE_vAdaptInterfaceFromFlag2TaskCall), (8 bytes).
    Removing timeslice.o(.ARM.exidx.text.TSE_vRegisterHandler), (8 bytes).
    Removing timeslice.o(.ARM.exidx.text.TSE_vSliceTaskHandle), (8 bytes).
    Removing speedcontrol.o(.text), (0 bytes).
    Removing speedcontrol.o(.ARM.exidx.text.SCL_vMotorDirectionCheck), (8 bytes).
    Removing speedcontrol.o(.ARM.exidx.text.SCL_bDataFilter), (8 bytes).
    Removing speedcontrol.o(.ARM.exidx.text.SCL_vCalculateActualSpeedFromPU), (8 bytes).
    Removing speedcontrol.o(.ARM.exidx.text.SCL_vCalcualteTargetSpeed), (8 bytes).
    Removing speedcontrol.o(.ARM.exidx.text.MLIB_Mul_Q15), (8 bytes).
    Removing speedcontrol.o(.ARM.exidx.text.SCL_vSpeedControlPWMHandle), (8 bytes).
    Removing speedcontrol.o(.ARM.exidx.text.SCL_vSpeedControlModbusHandle), (8 bytes).
    Removing speedcontrol.o(.ARM.exidx.text.SCL_vSpeedControlHandle), (8 bytes).
    Removing speedcontrol.o(.text.SCL_bGetMotorDirection), (12 bytes).
    Removing speedcontrol.o(.ARM.exidx.text.SCL_bGetMotorDirection), (8 bytes).
    Removing foc_pmsm.o(.text), (0 bytes).
    Removing foc_pmsm.o(.ARM.exidx.text.DcBus_Ripple_suppress), (8 bytes).
    Removing foc_pmsm.o(.ARM.exidx.text.Get_ADC_Result), (8 bytes).
    Removing foc_pmsm.o(.ARM.exidx.text.PMSM_Obs), (8 bytes).
    Removing foc_pmsm.o(.ARM.exidx.text.MLIB_Mul_Q15), (8 bytes).
    Removing foc_pmsm.o(.ARM.exidx.text.FOC_Current_Controller), (8 bytes).
    Removing foc_pmsm.o(.ARM.exidx.text.MCFLIB_Park_S16), (8 bytes).
    Removing foc_pmsm.o(.ARM.exidx.text.MLIB_Neg_Q15), (8 bytes).
    Removing foc_pmsm.o(.ARM.exidx.text.MCFLIB_InvPark_S16), (8 bytes).
    Removing foc_pmsm.o(.text.MOT_u16GetVariantResistorDigitalValue), (12 bytes).
    Removing foc_pmsm.o(.ARM.exidx.text.MOT_u16GetVariantResistorDigitalValue), (8 bytes).
    Removing foc_pmsm.o(.bss.MOT_s16SpdAdcValue), (2 bytes).
    Removing ramp.o(.text), (0 bytes).
    Removing ramp.o(.text.QMATH_sin), (232 bytes).
    Removing ramp.o(.ARM.exidx.text.QMATH_sin), (8 bytes).
    Removing ramp.o(.text.RMP_vCalTrapezoidalCurve), (296 bytes).
    Removing ramp.o(.ARM.exidx.text.RMP_vCalTrapezoidalCurve), (8 bytes).
    Removing ramp.o(.text.RMP_vCalcSmootherSinusoidalSpeedRampCurve), (236 bytes).
    Removing ramp.o(.ARM.exidx.text.RMP_vCalcSmootherSinusoidalSpeedRampCurve), (8 bytes).
    Removing ramp.o(.text.MLIB_Mul_Q15), (38 bytes).
    Removing ramp.o(.ARM.exidx.text.MLIB_Mul_Q15), (8 bytes).
    Removing ramp.o(.text.RMP_vUpdateSwitchSpeed), (44 bytes).
    Removing ramp.o(.ARM.exidx.text.RMP_vUpdateSwitchSpeed), (8 bytes).
    Removing ramp.o(.text.RMP_vConfigureStartupAlgorithm), (116 bytes).
    Removing ramp.o(.ARM.exidx.text.RMP_vConfigureStartupAlgorithm), (8 bytes).
    Removing ramp.o(.text.RMP_ptGetRampDataPointer), (8 bytes).
    Removing ramp.o(.ARM.exidx.text.RMP_ptGetRampDataPointer), (8 bytes).
    Removing ramp.o(.rodata.QMATH_SineTable512), (1026 bytes).
    Removing ramp.o(.bss.RMP_tMotorPara), (12 bytes).
    Removing ramp.o(.bss.RMP_tMotorData), (32 bytes).
    Removing statemachine.o(.text), (0 bytes).
    Removing statemachine.o(.ARM.exidx.text.M1_Fault_Fast), (8 bytes).
    Removing statemachine.o(.ARM.exidx.text.M1_Init_Fast), (8 bytes).
    Removing statemachine.o(.ARM.exidx.text.M1_Stop_Fast), (8 bytes).
    Removing statemachine.o(.ARM.exidx.text.M1_Run_Fast), (8 bytes).
    Removing statemachine.o(.ARM.exidx.text.M1_Fault_Slow), (8 bytes).
    Removing statemachine.o(.ARM.exidx.text.M1_Init_Slow), (8 bytes).
    Removing statemachine.o(.ARM.exidx.text.M1_Stop_Slow), (8 bytes).
    Removing statemachine.o(.ARM.exidx.text.M1_Run_Slow), (8 bytes).
    Removing statemachine.o(.ARM.exidx.text.M1_FaultDetection), (8 bytes).
    Removing statemachine.o(.ARM.exidx.text.M1_SwitchInitStop), (8 bytes).
    Removing statemachine.o(.ARM.exidx.text.M1_SwitchStopFault), (8 bytes).
    Removing statemachine.o(.ARM.exidx.text.M1_SwitchRunFault), (8 bytes).
    Removing statemachine.o(.ARM.exidx.text.Fault_LED_Disp), (8 bytes).
    Removing statemachine.o(.ARM.exidx.text.M1_SwitchFaultStop), (8 bytes).
    Removing statemachine.o(.ARM.exidx.text.M1_SwitchStopRun), (8 bytes).
    Removing statemachine.o(.ARM.exidx.text.M1_SwitchRunReadyWindDet), (8 bytes).
    Removing statemachine.o(.ARM.exidx.text.M1_SwitchRunWindDetBrake), (8 bytes).
    Removing statemachine.o(.ARM.exidx.text.M1_SwitchRunWindDetAlign), (8 bytes).
    Removing statemachine.o(.text.M1_SwitchRunBrakeReady), (12 bytes).
    Removing statemachine.o(.ARM.exidx.text.M1_SwitchRunBrakeReady), (8 bytes).
    Removing statemachine.o(.ARM.exidx.text.M1_SwitchRunWindDetReady), (8 bytes).
    Removing statemachine.o(.text.M1_SwitchRunWindDetSpin), (64 bytes).
    Removing statemachine.o(.ARM.exidx.text.M1_SwitchRunWindDetSpin), (8 bytes).
    Removing statemachine.o(.ARM.exidx.text.PWM_Update), (8 bytes).
    Removing statemachine.o(.ARM.exidx.text.MLIB_Mul_Q15), (8 bytes).
    Removing statemachine.o(.ARM.exidx.text.MOT_vAngleSmoothSwitch), (8 bytes).
    Removing statemachine.o(.ARM.exidx.text.M1_RunCalibFast), (8 bytes).
    Removing statemachine.o(.ARM.exidx.text.M1_RunReadyFast), (8 bytes).
    Removing statemachine.o(.ARM.exidx.text.M1_RunWindDetFast), (8 bytes).
    Removing statemachine.o(.ARM.exidx.text.M1_RunBrakeFast), (8 bytes).
    Removing statemachine.o(.ARM.exidx.text.M1_RunAlignFast), (8 bytes).
    Removing statemachine.o(.ARM.exidx.text.M1_RunStartupFast), (8 bytes).
    Removing statemachine.o(.ARM.exidx.text.M1_RunSpinFast), (8 bytes).
    Removing statemachine.o(.ARM.exidx.text.M1_RunFreewheelFast), (8 bytes).
    Removing statemachine.o(.ARM.exidx.text.M1_SwitchRunCalibReady), (8 bytes).
    Removing statemachine.o(.ARM.exidx.text.MCFLIB_Clark_Sat_S16), (8 bytes).
    Removing statemachine.o(.ARM.exidx.text.M1_RunCalibSlow), (8 bytes).
    Removing statemachine.o(.ARM.exidx.text.M1_RunReadySlow), (8 bytes).
    Removing statemachine.o(.ARM.exidx.text.M1_RunWindDetSlow), (8 bytes).
    Removing statemachine.o(.ARM.exidx.text.M1_RunBrakeSlow), (8 bytes).
    Removing statemachine.o(.ARM.exidx.text.M1_RunAlignSlow), (8 bytes).
    Removing statemachine.o(.ARM.exidx.text.M1_RunStartupSlow), (8 bytes).
    Removing statemachine.o(.ARM.exidx.text.M1_RunSpinSlow), (8 bytes).
    Removing statemachine.o(.ARM.exidx.text.M1_RunFreewheelSlow), (8 bytes).
    Removing statemachine.o(.ARM.exidx.text.M1_SwitchRunAlignReady), (8 bytes).
    Removing statemachine.o(.ARM.exidx.text.M1_SwitchRunAlignStartup), (8 bytes).
    Removing statemachine.o(.ARM.exidx.text.MLIB_Conv_Q31s), (8 bytes).
    Removing statemachine.o(.ARM.exidx.text.MLIB_Conv_Q15l), (8 bytes).
    Removing statemachine.o(.ARM.exidx.text.M1_SwitchRunStartupFreewheel), (8 bytes).
    Removing statemachine.o(.ARM.exidx.text.M1_SwitchRunStartupSpin), (8 bytes).
    Removing statemachine.o(.ARM.exidx.text.M1_SwitchRunSpinFreewheel), (8 bytes).
    Removing statemachine.o(.ARM.exidx.text.M1_SwitchRunFreewheelReady), (8 bytes).
    Removing winddetection.o(.text), (0 bytes).
    Removing winddetection.o(.ARM.exidx.text.WDN_vInitWindDetection), (8 bytes).
    Removing winddetection.o(.ARM.exidx.text.MCFLIB_Clark_Sat_S16), (8 bytes).
    Removing winddetection.o(.ARM.exidx.text.MCFLIB_Park_S16), (8 bytes).
    Removing winddetection.o(.ARM.exidx.text.MCFLIB_InvPark_S16), (8 bytes).
    Removing winddetection.o(.ARM.exidx.text.WDN_vWindDetection), (8 bytes).
    Removing winddetection.o(.ARM.exidx.text.WDN_AlignInit), (8 bytes).
    Removing winddetection.o(.ARM.exidx.text.WDN_vCalculateBemfPeak), (8 bytes).
    Removing winddetection.o(.text.WDN_vConfigureStartupParam), (376 bytes).
    Removing winddetection.o(.ARM.exidx.text.WDN_vConfigureStartupParam), (8 bytes).
    Removing fshandle.o(.text), (0 bytes).
    Removing fshandle.o(.ARM.exidx.text.FHE_vHandleTask), (8 bytes).
    Removing fshandle.o(.ARM.exidx.text.FHE_vFunctionSafetyCheck), (8 bytes).
    Removing fsmcu.o(.text), (0 bytes).
    Removing fsmcu.o(.ARM.exidx.text.FMC_vSetSystickTimerRegisters), (8 bytes).
    Removing fsmcu.o(.text.FMC_vEnDisAbleSystickTimer), (26 bytes).
    Removing fsmcu.o(.ARM.exidx.text.FMC_vEnDisAbleSystickTimer), (8 bytes).
    Removing fsmcu.o(.ARM.exidx.text.FMC_u32GetSystickTimerCounter), (8 bytes).
    Removing fsphaseloss.o(.text), (0 bytes).
    Removing fsphaseloss.o(.ARM.exidx.text.FPL_vPhaselossprepareSamples), (8 bytes).
    Removing fsphaseloss.o(.ARM.exidx.text.FPL_vPhaseLossEvaluation), (8 bytes).
    Removing fsphaseloss.o(.text.RMP_vOpenPhaseCheckSimple), (64 bytes).
    Removing fsphaseloss.o(.ARM.exidx.text.RMP_vOpenPhaseCheckSimple), (8 bytes).
    Removing fsphaseloss.o(.text.RMP_vOpenPhaseCheckSimpleImplementation), (180 bytes).
    Removing fsphaseloss.o(.ARM.exidx.text.RMP_vOpenPhaseCheckSimpleImplementation), (8 bytes).
    Removing fsphaseloss.o(.ARM.exidx.text.RMP_vOpenPhaseCheckComplex), (8 bytes).
    Removing fsphaseloss.o(.ARM.exidx.text.FPL_vEvaluateStaticVector), (8 bytes).
    Removing fsphaseloss.o(.ARM.exidx.text.FPL_vEvaluateCurrentAsymmetry), (8 bytes).
    Removing fsphaseloss.o(.ARM.exidx.text.FPL_vEvaluateVoltageAsymmetry), (8 bytes).
    Removing fsphaseloss.o(.ARM.exidx.text.FPL_vPhaseLossCheck), (8 bytes).
    Removing fsphaseloss.o(.bss.FPL_tPhaseLossDataSimple), (28 bytes).
    Removing fsphaseloss.o(.data.FPL_tPhaseLossParaSimple), (4 bytes).
    Removing fsphaseloss.o(.bss.RMP_tPhaseOpenPresentCount), (4 bytes).
    Removing fsrotorlock.o(.text), (0 bytes).
    Removing fsrotorlock.o(.ARM.exidx.text.FRK_vcalcCurrentVector), (8 bytes).
    Removing fsrotorlock.o(.ARM.exidx.text.FRK_vcalcVoltageVector), (8 bytes).
    Removing fsrotorlock.o(.ARM.exidx.text.FRK_vcalcBemf), (8 bytes).
    Removing fsrotorlock.o(.ARM.exidx.text.MLIB_Mul_Q15), (8 bytes).
    Removing fsrotorlock.o(.ARM.exidx.text.FRK_vLockedRotorEvaluation), (8 bytes).
    Removing fsrotorlock.o(.ARM.exidx.text.FRK_vCheckMotorLockComplex), (8 bytes).
    Removing fsrotorlock.o(.text.FRK_bCheckLockedRotorSimple), (252 bytes).
    Removing fsrotorlock.o(.ARM.exidx.text.FRK_bCheckLockedRotorSimple), (8 bytes).
    Removing fsrotorlock.o(.ARM.exidx.text.FRK_vCheckMotorLock), (8 bytes).
    Removing fsrotorlock.o(.bss.FRK_tSimpleRotorLockData), (16 bytes).
    Removing fsrotorlock.o(.data.FRK_tSimpleRotorLockPara), (4 bytes).
    Removing speedmonitor.o(.text), (0 bytes).
    Removing speedmonitor.o(.text.SMR_vInitModelCalculation), (20 bytes).
    Removing speedmonitor.o(.ARM.exidx.text.SMR_vInitModelCalculation), (8 bytes).
    Removing speedmonitor.o(.text.SMR_vMotorModelCalculation), (404 bytes).
    Removing speedmonitor.o(.ARM.exidx.text.SMR_vMotorModelCalculation), (8 bytes).
    Removing speedmonitor.o(.text.SMR_tgetPWMDutyValues), (196 bytes).
    Removing speedmonitor.o(.ARM.exidx.text.SMR_tgetPWMDutyValues), (8 bytes).
    Removing speedmonitor.o(.text.SMR_vGetPhaseVoltage), (192 bytes).
    Removing speedmonitor.o(.ARM.exidx.text.SMR_vGetPhaseVoltage), (8 bytes).
    Removing speedmonitor.o(.ARM.exidx.text.MLIB_Mul_Q15), (8 bytes).
    Removing speedmonitor.o(.ARM.exidx.text.SMR_vIndependentMotorModelCalculation), (8 bytes).
    Removing speedmonitor.o(.text.SMR_tGetFSVData), (8 bytes).
    Removing speedmonitor.o(.ARM.exidx.text.SMR_tGetFSVData), (8 bytes).
    Removing speedmonitor.o(.text.SMR_vSpeedEvaluationSimple), (168 bytes).
    Removing speedmonitor.o(.ARM.exidx.text.SMR_vSpeedEvaluationSimple), (8 bytes).
    Removing speedmonitor.o(.ARM.exidx.text.SMR_vSpeedEvaluationComplex), (8 bytes).
    Removing speedmonitor.o(.ARM.exidx.text.SMR_vSpeedEvaluation), (8 bytes).
    Removing speedmonitor.o(.ARM.exidx.text.SMR_vCheckSpeedMonitorImplement), (8 bytes).
    Removing speedmonitor.o(.ARM.exidx.text.SMR_vCheckSpeedMonitor), (8 bytes).
    Removing speedmonitor.o(.bss.SMR_u32SpeedErrorCounter), (4 bytes).
    Removing speedmonitor.o(.bss.SMR_tSpeedDiff), (4 bytes).
    Removing speedmonitor.o(.bss.SMR_tFluxAlfa), (12 bytes).
    Removing speedmonitor.o(.bss.SMR_tFluxBeta), (12 bytes).
    Removing speedmonitor.o(.data.SMR_tPT1CoefFlx), (4 bytes).
    Removing speedmonitor.o(.bss.SMR_tPsiCart), (8 bytes).
    Removing speedmonitor.o(.bss.SMR_tPsiPol), (8 bytes).
    Removing speedmonitor.o(.bss.SMR_tFluxVoltPsiCalc), (2 bytes).
    Removing speedmonitor.o(.bss.SMR_tFluxVoltPsiLast), (2 bytes).
    Removing speedmonitor.o(.bss.SMR_tStepDeltaPsiActu), (12 bytes).
    Removing speedmonitor.o(.data.SMR_tFltCoefDPsi), (4 bytes).
    Removing speedmonitor.o(.data.SMR_tSpeedDiffLimitPos), (4 bytes).
    Removing speedmonitor.o(.data.SMR_tSpeedDiffLimitNeg), (4 bytes).
    Removing speedmonitor.o(.bss.SMR_tActualTime), (8 bytes).
    Removing speedmonitor.o(.bss.SMR_tCycleStartTime), (8 bytes).
    Removing speedmonitor.o(.data.SMR_u32CycleTimeCheck), (4 bytes).
    Removing speedmonitor.o(.data.SMR_u32SpeedErrorLimit), (4 bytes).
    Removing speedmonitor.o(.bss.SMR_tgetPWMDutyValues.ptTemp), (4 bytes).
    Removing speedmonitor.o(.bss.SMR_tgetPWMDutyValues.Temp), (6 bytes).
    Removing speedmonitor.o(.bss.SMR_u16TestValue), (2 bytes).
    Removing speedmonitor.o(.bss.BackupModel), (20 bytes).
    Removing fsclock.o(.text), (0 bytes).
    Removing fsclock.o(.ARM.exidx.text.STK_vTriggerSafeTime), (8 bytes).
    Removing fsclock.o(.ARM.exidx.text.STK_tGetSafeTime), (8 bytes).
    Removing fsclock.o(.ARM.exidx.text.FCK_vInitSafeTime), (8 bytes).
    Removing fscommon.o(.text), (0 bytes).
    Removing fscommon.o(.ARM.exidx.text.FCN_vGetPhaseVoltage), (8 bytes).
    Removing fscommon.o(.ARM.exidx.text.MLIB_Mul_Q15), (8 bytes).
    Removing fscommon.o(.ARM.exidx.text.FCN_vGetThreePhaseVol), (8 bytes).
    Removing common_1.o(.text), (0 bytes).
    Removing common_1.o(.text.COM_vCheckOverThresholdLimit), (134 bytes).
    Removing common_1.o(.ARM.exidx.text.COM_vCheckOverThresholdLimit), (8 bytes).
    Removing current.o(.text), (0 bytes).
    Removing current.o(.text.CUR_tGetCurVal), (128 bytes).
    Removing current.o(.ARM.exidx.text.CUR_tGetCurVal), (8 bytes).
    Removing current.o(.text.CUR_bInitOffsetCurrentVoltage), (176 bytes).
    Removing current.o(.ARM.exidx.text.CUR_bInitOffsetCurrentVoltage), (8 bytes).
    Removing current.o(.text.CUR_bCheckMotCurrentMeasValues), (132 bytes).
    Removing current.o(.ARM.exidx.text.CUR_bCheckMotCurrentMeasValues), (8 bytes).
    Removing current.o(.text.CUR_vCheckMotCurrentMeasOffsetVoltage), (224 bytes).
    Removing current.o(.ARM.exidx.text.CUR_vCheckMotCurrentMeasOffsetVoltage), (8 bytes).
    Removing current.o(.text.CUR_vCalcCurrentQuantities), (172 bytes).
    Removing current.o(.ARM.exidx.text.CUR_vCalcCurrentQuantities), (8 bytes).
    Removing current.o(.text.CUR_vSetPositioningCurr), (104 bytes).
    Removing current.o(.ARM.exidx.text.CUR_vSetPositioningCurr), (8 bytes).
    Removing current.o(.text.CUR_vFetchAndCalcPhaseCurrents), (148 bytes).
    Removing current.o(.ARM.exidx.text.CUR_vFetchAndCalcPhaseCurrents), (8 bytes).
    Removing current.o(.ARM.exidx.text.CUR_vGetThreePhaseCur), (8 bytes).
    Removing current.o(.ARM.exidx.text.CUR_vSetOffsetMeasState), (8 bytes).
    Removing current.o(.text.CUR_ptGetOverCurCallBackFunc), (8 bytes).
    Removing current.o(.ARM.exidx.text.CUR_ptGetOverCurCallBackFunc), (8 bytes).
    Removing current.o(.text.CUR_vHandleOverCurIntMeasChanM1), (16 bytes).
    Removing current.o(.ARM.exidx.text.CUR_vHandleOverCurIntMeasChanM1), (8 bytes).
    Removing current.o(.text.CUR_vGetThreePhaseRawValue), (60 bytes).
    Removing current.o(.ARM.exidx.text.CUR_vGetThreePhaseRawValue), (8 bytes).
    Removing current.o(.text.CUR_vCurRMSFilterInit), (2 bytes).
    Removing current.o(.ARM.exidx.text.CUR_vCurRMSFilterInit), (8 bytes).
    Removing current.o(.text.CUR_vCalThreePhaseCurRMS), (112 bytes).
    Removing current.o(.ARM.exidx.text.CUR_vCalThreePhaseCurRMS), (8 bytes).
    Removing current.o(.text.CUR_u16GetThreePhaseRMS), (12 bytes).
    Removing current.o(.ARM.exidx.text.CUR_u16GetThreePhaseRMS), (8 bytes).
    Removing current.o(.ARM.exidx.text.CUR_updatePhaseCurrentBuffer), (8 bytes).
    Removing current.o(.ARM.exidx.text.CUR_vGetPhaseCurrentBufferSamples), (8 bytes).
    Removing current.o(.ARM.exidx.text.CUR_tGetPhaseCurrentCalPointer), (8 bytes).
    Removing current.o(.text.CUR_vResetCurrentValues), (32 bytes).
    Removing current.o(.ARM.exidx.text.CUR_vResetCurrentValues), (8 bytes).
    Removing current.o(.text.MCFLIB_Clark_Sat_S16), (124 bytes).
    Removing current.o(.ARM.exidx.text.MCFLIB_Clark_Sat_S16), (8 bytes).
    Removing current.o(.text.CUR_uiGetPhaseCurABridge1), (20 bytes).
    Removing current.o(.ARM.exidx.text.CUR_uiGetPhaseCurABridge1), (8 bytes).
    Removing current.o(.text.CUR_uiGetPhaseCurBBridge1), (20 bytes).
    Removing current.o(.ARM.exidx.text.CUR_uiGetPhaseCurBBridge1), (8 bytes).
    Removing current.o(.data.CUR_ucOffsetSampleCounter), (1 bytes).
    Removing current.o(.bss.CUR_tLastTimeStamp), (8 bytes).
    Removing current.o(.rodata.CUR_tParaBridge1), (16 bytes).
    Removing current.o(.bss.CUR_tThreePhaseCurRms), (32 bytes).
    Removing current.o(.data.CUR_tFilterCoefCurRMS), (4 bytes).
    Removing current.o(.data.CUR_tFilterCoefOffset), (4 bytes).
    Removing current.o(.data.CUR_tFilterCoefImax), (4 bytes).
    Removing current.o(.data.CUR_tFilterCoefIq), (4 bytes).
    Removing voltage.o(.text), (0 bytes).
    Removing voltage.o(.text.VOL_bCheckLowVoltageCondition), (200 bytes).
    Removing voltage.o(.ARM.exidx.text.VOL_bCheckLowVoltageCondition), (8 bytes).
    Removing voltage.o(.text.VOL_tGetDclVolV), (12 bytes).
    Removing voltage.o(.ARM.exidx.text.VOL_tGetDclVolV), (8 bytes).
    Removing voltage.o(.text.VOL_vSampleDclVoltage), (92 bytes).
    Removing voltage.o(.ARM.exidx.text.VOL_vSampleDclVoltage), (8 bytes).
    Removing voltage.o(.text.VOL_vTrackVoltageValues), (328 bytes).
    Removing voltage.o(.ARM.exidx.text.VOL_vTrackVoltageValues), (8 bytes).
    Removing voltage.o(.ARM.exidx.text.VOL_tGetDclVolRawSampleQ), (8 bytes).
    Removing voltage.o(.text.VOL_tGetDclVolQ), (12 bytes).
    Removing voltage.o(.ARM.exidx.text.VOL_tGetDclVolQ), (8 bytes).
    Removing voltage.o(.text.VOL_tGet13_5VolmV), (12 bytes).
    Removing voltage.o(.ARM.exidx.text.VOL_tGet13_5VolmV), (8 bytes).
    Removing voltage.o(.text.VOL_tGetInternalVoltRefVolmV), (12 bytes).
    Removing voltage.o(.ARM.exidx.text.VOL_tGetInternalVoltRefVolmV), (8 bytes).
    Removing voltage.o(.text.VOL_bInitDcLinkVoltageMeasurement), (132 bytes).
    Removing voltage.o(.ARM.exidx.text.VOL_bInitDcLinkVoltageMeasurement), (8 bytes).
    Removing voltage.o(.text.VOL_bVoltageErrorDetection), (90 bytes).
    Removing voltage.o(.ARM.exidx.text.VOL_bVoltageErrorDetection), (8 bytes).
    Removing voltage.o(.text.VOL_vCheckInternalReferenceVoltageCondition), (32 bytes).
    Removing voltage.o(.ARM.exidx.text.VOL_vCheckInternalReferenceVoltageCondition), (8 bytes).
    Removing voltage.o(.text.VOL_bCheckUnderVoltageCondition), (200 bytes).
    Removing voltage.o(.ARM.exidx.text.VOL_bCheckUnderVoltageCondition), (8 bytes).
    Removing voltage.o(.text.VOL_bCheckOverVoltageCondition), (200 bytes).
    Removing voltage.o(.ARM.exidx.text.VOL_bCheckOverVoltageCondition), (8 bytes).
    Removing voltage.o(.text.VOL_bHandleTask), (228 bytes).
    Removing voltage.o(.ARM.exidx.text.VOL_bHandleTask), (8 bytes).
    Removing voltage.o(.text.VOL_vCalcVolLowPassFilters), (96 bytes).
    Removing voltage.o(.ARM.exidx.text.VOL_vCalcVolLowPassFilters), (8 bytes).
    Removing voltage.o(.bss.VOL_tActualTimeLowVoltage), (8 bytes).
    Removing voltage.o(.bss.VOL_bLowVoltageMode), (1 bytes).
    Removing voltage.o(.bss.VOL_bLowVoltageOK), (1 bytes).
    Removing voltage.o(.bss.VOL_uiDclVoltageAdValue), (4 bytes).
    Removing voltage.o(.bss.VOL_ui13_5VoltageValue), (4 bytes).
    Removing voltage.o(.bss.VOL_tVrefIntVolADValue), (4 bytes).
    Removing voltage.o(.bss.VOL_t13_5VolSampleQ), (4 bytes).
    Removing voltage.o(.bss.VOL_tVrefIntVolSampleQ), (4 bytes).
    Removing voltage.o(.bss.VOL_tDclVolPerSampleIntQ), (4 bytes).
    Removing voltage.o(.bss.VOL_tVrefIntVolPerSampleIntQ), (4 bytes).
    Removing voltage.o(.bss.VOL_tDclVolMaxTrackQ), (4 bytes).
    Removing voltage.o(.data.VOL_tDclVolMinTrackQ), (4 bytes).
    Removing voltage.o(.data.VOL_ucPeriodSampleCtr), (4 bytes).
    Removing voltage.o(.bss.VOL_tDclVolMaxQ), (4 bytes).
    Removing voltage.o(.bss.VOL_tDclVolPerSampleIntResultQ), (4 bytes).
    Removing voltage.o(.bss.VOL_tVrefIntVolPerSampleIntResultQ), (4 bytes).
    Removing voltage.o(.bss.VOL_tDclVoltageQ), (4 bytes).
    Removing voltage.o(.bss.VOL_tVrefIntVolQ), (4 bytes).
    Removing voltage.o(.bss.VOL_tDCLVoltageV), (4 bytes).
    Removing voltage.o(.bss.VOL_tVrefIntVoltagemV), (4 bytes).
    Removing voltage.o(.bss.VOL_uiDCLVoltagePeakValueV), (4 bytes).
    Removing voltage.o(.data.VOL_bVoltageSampleRefreshed), (1 bytes).
    Removing voltage.o(.bss.VOL_t13_5VoltagemV), (4 bytes).
    Removing voltage.o(.bss.VOL_tDCLVoltageDmpdV), (12 bytes).
    Removing voltage.o(.bss.VOL_tDCLPeakVoltageDmpdQ), (12 bytes).
    Removing voltage.o(.data.VOL_tSafeTimeStamp), (8 bytes).
    Removing voltage.o(.bss.VOL_tActualTimeUnderVoltage), (8 bytes).
    Removing voltage.o(.bss.VOL_bUnderVoltageMode), (1 bytes).
    Removing voltage.o(.bss.VOL_bUnderVoltageOK), (1 bytes).
    Removing voltage.o(.bss.VOL_tActualTimeOverVoltage), (8 bytes).
    Removing voltage.o(.bss.VOL_bOverVoltageMode), (1 bytes).
    Removing voltage.o(.bss.VOL_bOverVoltageOK), (1 bytes).
    Removing voltage.o(.data.VOL_tVoltageFilterConst), (4 bytes).
    Removing voltage.o(.bss.VOL_tDCLPeakVoltageDmpdV), (12 bytes).
    Removing voltage.o(.data.VOL_tDclPeakVoltageFilterConst), (4 bytes).
    Removing math.o(.text), (0 bytes).
    Removing math.o(.ARM.exidx.text.FPM_vCart2Pol), (8 bytes).
    Removing math.o(.text.FPM_ulSqrt), (108 bytes).
    Removing math.o(.ARM.exidx.text.FPM_ulSqrt), (8 bytes).
    Removing math.o(.text.QMATH_max), (60 bytes).
    Removing math.o(.ARM.exidx.text.QMATH_max), (8 bytes).
    Removing math.o(.text.QMATH_min), (60 bytes).
    Removing math.o(.ARM.exidx.text.QMATH_min), (8 bytes).
    Removing math.o(.text.QMATH_limit), (96 bytes).
    Removing math.o(.ARM.exidx.text.QMATH_limit), (8 bytes).
    Removing math.o(.rodata.FPM_tSineTabQ15), (1024 bytes).
    Removing filter.o(.text), (0 bytes).
    Removing filter.o(.ARM.exidx.text.FIR_vCalcFilter), (8 bytes).
    Removing filter.o(.text.FIR_vInitFilterOutput), (32 bytes).
    Removing filter.o(.ARM.exidx.text.FIR_vInitFilterOutput), (8 bytes).
    Removing transfer.o(.text), (0 bytes).
    Removing transfer.o(.ARM.exidx.text.TRR_vClarkeTrans), (8 bytes).
    Removing transfer.o(.text.TRR_vForwardTransformation), (176 bytes).
    Removing transfer.o(.ARM.exidx.text.TRR_vForwardTransformation), (8 bytes).
    Removing transfer.o(.text.TRR_vBackwardTransformation), (176 bytes).
    Removing transfer.o(.ARM.exidx.text.TRR_vBackwardTransformation), (8 bytes).
    Removing drv_adc.o(.text), (0 bytes).
    Removing drv_adc.o(.ARM.exidx.text.Drv_Adc_Basic_Init), (8 bytes).
    Removing drv_adc.o(.ARM.exidx.text.Drv_Adc_Channel_Init), (8 bytes).
    Removing drv_comp.o(.text), (0 bytes).
    Removing drv_comp.o(.ARM.exidx.text.Drv_Comp_Init), (8 bytes).
    Removing drv_div.o(.text), (0 bytes).
    Removing drv_div.o(.ARM.exidx.text.Drv_Hwdiv_Init), (8 bytes).
    Removing drv_div.o(.ARM.exidx.text.HDIV_SignInit), (8 bytes).
    Removing drv_div.o(.ARM.exidx.text.Division), (8 bytes).
    Removing drv_iic.o(.text), (0 bytes).
    Removing drv_iic.o(.text.DRV_vIICSDAConfigure), (128 bytes).
    Removing drv_iic.o(.ARM.exidx.text.DRV_vIICSDAConfigure), (8 bytes).
    Removing drv_iwdg.o(.text), (0 bytes).
    Removing drv_iwdg.o(.ARM.exidx.text.Drv_Iwdg_Init), (8 bytes).
    Removing drv_led.o(.text), (0 bytes).
    Removing drv_led.o(.text.Led_On), (26 bytes).
    Removing drv_led.o(.ARM.exidx.text.Led_On), (8 bytes).
    Removing drv_led.o(.text.Led_Off), (26 bytes).
    Removing drv_led.o(.ARM.exidx.text.Led_Off), (8 bytes).
    Removing drv_led.o(.text.Led_Toggle), (32 bytes).
    Removing drv_led.o(.ARM.exidx.text.Led_Toggle), (8 bytes).
    Removing drv_opamp.o(.text), (0 bytes).
    Removing drv_opamp.o(.ARM.exidx.text.Drv_Opamp_Init), (8 bytes).
    Removing drv_pwm.o(.text), (0 bytes).
    Removing drv_pwm.o(.ARM.exidx.text.Drv_Pwm_Init), (8 bytes).
    Removing drv_pwm.o(.ARM.exidx.text.TIM_vSetCompareValues), (8 bytes).
    Removing drv_pwm.o(.ARM.exidx.text.TIM_vSetOutputs), (8 bytes).
    Removing drv_pwm.o(.ARM.exidx.text.TIM_bSetOutputConfig), (8 bytes).
    Removing drv_pwm.o(.ARM.exidx.text.TIM_vDutyCycleToCompare), (8 bytes).
    Removing drv_pwm.o(.ARM.exidx.text.TIM_vBrakeInit), (8 bytes).
    Removing drv_pwm.o(.ARM.exidx.text.TIM_bBrakeUpdate), (8 bytes).
    Removing drv_sci.o(.text), (0 bytes).
    Removing drv_sci.o(.text._sys_exit), (12 bytes).
    Removing drv_sci.o(.ARM.exidx.text._sys_exit), (8 bytes).
    Removing drv_sci.o(.ARM.exidx.text.UART_vCONSOLE_Init), (8 bytes).
    Removing drv_sci.o(.ARM.exidx.text.UART_vNVICConfigure), (8 bytes).
    Removing drv_sci.o(.ARM.exidx.text.UART_vWriteData), (8 bytes).
    Removing drv_sci.o(.ARM.exidx.text.UART_vGetUARTData), (8 bytes).
    Removing drv_sci.o(.text.UART_vModbusRxEnable), (16 bytes).
    Removing drv_sci.o(.ARM.exidx.text.UART_vModbusRxEnable), (8 bytes).
    Removing drv_sci.o(.text.UART_vModbusRxDisable), (16 bytes).
    Removing drv_sci.o(.ARM.exidx.text.UART_vModbusRxDisable), (8 bytes).
    Removing drv_sci.o(.text.UART_vModbusTxEnable), (16 bytes).
    Removing drv_sci.o(.ARM.exidx.text.UART_vModbusTxEnable), (8 bytes).
    Removing drv_sci.o(.ARM.exidx.text.UART_vModbusTxDisable), (8 bytes).
    Removing drv_sci.o(.ARM.exidx.text.UART_bUARTTXBUFEMPT), (8 bytes).
    Removing drv_sci.o(.text.UART_vVOFAUARTInit), (148 bytes).
    Removing drv_sci.o(.ARM.exidx.text.UART_vVOFAUARTInit), (8 bytes).
    Removing drv_sqrt.o(.text), (0 bytes).
    Removing drv_sqrt.o(.ARM.exidx.text.Drv_Sqrt_Init), (8 bytes).
    Removing drv_sqrt.o(.ARM.exidx.text.Hw_Sqrt), (8 bytes).
    Removing drv_counter.o(.text), (0 bytes).
    Removing drv_counter.o(.ARM.exidx.text.Drv_Tim16_Counter_Init), (8 bytes).
    Removing drv_counter.o(.text.Drv_Tim16_EnDisable), (52 bytes).
    Removing drv_counter.o(.ARM.exidx.text.Drv_Tim16_EnDisable), (8 bytes).
    Removing drv_counter.o(.ARM.exidx.text.Drv_u32GetTim16CountVal), (8 bytes).
    Removing drv_output.o(.text), (0 bytes).
    Removing drv_output.o(.ARM.exidx.text.Drv_Tim17_PWM_Out_Init), (8 bytes).
    Removing drv_output.o(.ARM.exidx.text.Drv_vPwmOutputInit), (8 bytes).
    Removing drv_output.o(.ARM.exidx.text.Drv_vSetOutputFreq), (8 bytes).
    Removing drv_output.o(.text.Drv_vEnablePWMOutput), (16 bytes).
    Removing drv_output.o(.ARM.exidx.text.Drv_vEnablePWMOutput), (8 bytes).
    Removing drv_capture.o(.text), (0 bytes).
    Removing drv_capture.o(.ARM.exidx.text.Drv_Tim3_Pwm_In_Init), (8 bytes).
    Removing drv_capture.o(.ARM.exidx.text.Drv_vCaptureInit), (8 bytes).
    Removing drv_dma.o(.text), (0 bytes).
    Removing drv_dma.o(.text.DMA_Channel4_Init), (100 bytes).
    Removing drv_dma.o(.ARM.exidx.text.DMA_Channel4_Init), (8 bytes).
    Removing hal_adc.o(.text), (0 bytes).
    Removing hal_adc.o(.text.ADC_DeInit), (68 bytes).
    Removing hal_adc.o(.ARM.exidx.text.ADC_DeInit), (8 bytes).
    Removing hal_adc.o(.ARM.exidx.text.ADC_Init), (8 bytes).
    Removing hal_adc.o(.ARM.exidx.text.ADC_StructInit), (8 bytes).
    Removing hal_adc.o(.ARM.exidx.text.ADC_Cmd), (8 bytes).
    Removing hal_adc.o(.text.ADC_DMACmd), (52 bytes).
    Removing hal_adc.o(.ARM.exidx.text.ADC_DMACmd), (8 bytes).
    Removing hal_adc.o(.ARM.exidx.text.ADC_ITConfig), (8 bytes).
    Removing hal_adc.o(.text.ADC_SoftwareStartConvCmd), (56 bytes).
    Removing hal_adc.o(.ARM.exidx.text.ADC_SoftwareStartConvCmd), (8 bytes).
    Removing hal_adc.o(.text.ADC_GetSoftwareStartConvStatus), (24 bytes).
    Removing hal_adc.o(.ARM.exidx.text.ADC_GetSoftwareStartConvStatus), (8 bytes).
    Removing hal_adc.o(.ARM.exidx.text.ADC_RegularChannelConfig), (8 bytes).
    Removing hal_adc.o(.ARM.exidx.text.ADC_TempSensorVrefintCmd), (8 bytes).
    Removing hal_adc.o(.ARM.exidx.text.ADC_ExternalTrigConvCmd), (8 bytes).
    Removing hal_adc.o(.text.ADC_ExternalTrigConvConfig), (44 bytes).
    Removing hal_adc.o(.ARM.exidx.text.ADC_ExternalTrigConvConfig), (8 bytes).
    Removing hal_adc.o(.text.ADC_GetConversionValue), (18 bytes).
    Removing hal_adc.o(.ARM.exidx.text.ADC_GetConversionValue), (8 bytes).
    Removing hal_adc.o(.text.ADC_GetDualModeConversionValue), (12 bytes).
    Removing hal_adc.o(.ARM.exidx.text.ADC_GetDualModeConversionValue), (8 bytes).
    Removing hal_adc.o(.text.ADC_AnalogWatchdogCmd), (52 bytes).
    Removing hal_adc.o(.ARM.exidx.text.ADC_AnalogWatchdogCmd), (8 bytes).
    Removing hal_adc.o(.text.ADC_AnalogWatchdogThresholdsConfig), (46 bytes).
    Removing hal_adc.o(.ARM.exidx.text.ADC_AnalogWatchdogThresholdsConfig), (8 bytes).
    Removing hal_adc.o(.text.ADC_AnalogWatchdogSingleChannelConfig), (46 bytes).
    Removing hal_adc.o(.ARM.exidx.text.ADC_AnalogWatchdogSingleChannelConfig), (8 bytes).
    Removing hal_adc.o(.text.ADC_TempSensorCmd), (22 bytes).
    Removing hal_adc.o(.ARM.exidx.text.ADC_TempSensorCmd), (8 bytes).
    Removing hal_adc.o(.text.ADC_VrefintCmd), (22 bytes).
    Removing hal_adc.o(.ARM.exidx.text.ADC_VrefintCmd), (8 bytes).
    Removing hal_adc.o(.text.exADC_TempSensorVrefintCmd), (124 bytes).
    Removing hal_adc.o(.ARM.exidx.text.exADC_TempSensorVrefintCmd), (8 bytes).
    Removing hal_adc.o(.text.ADC_GetFlagStatus), (58 bytes).
    Removing hal_adc.o(.ARM.exidx.text.ADC_GetFlagStatus), (8 bytes).
    Removing hal_adc.o(.text.ADC_ClearFlag), (52 bytes).
    Removing hal_adc.o(.ARM.exidx.text.ADC_ClearFlag), (8 bytes).
    Removing hal_adc.o(.text.ADC_GetITStatus), (58 bytes).
    Removing hal_adc.o(.ARM.exidx.text.ADC_GetITStatus), (8 bytes).
    Removing hal_adc.o(.ARM.exidx.text.ADC_ClearITPendingBit), (8 bytes).
    Removing hal_adc.o(.ARM.exidx.text.ADC_ANY_CH_Config), (8 bytes).
    Removing hal_adc.o(.ARM.exidx.text.ADC_ANY_NUM_Config), (8 bytes).
    Removing hal_adc.o(.ARM.exidx.text.ADC_ANY_Cmd), (8 bytes).
    Removing hal_adc.o(.text.ADC_AutoInjectedConvCmd), (52 bytes).
    Removing hal_adc.o(.ARM.exidx.text.ADC_AutoInjectedConvCmd), (8 bytes).
    Removing hal_adc.o(.text.ADC_ExternalTrigInjectedConvertConfig), (56 bytes).
    Removing hal_adc.o(.ARM.exidx.text.ADC_ExternalTrigInjectedConvertConfig), (8 bytes).
    Removing hal_adc.o(.text.ADC_ExternalTrigInjectedConvCmd), (52 bytes).
    Removing hal_adc.o(.ARM.exidx.text.ADC_ExternalTrigInjectedConvCmd), (8 bytes).
    Removing hal_adc.o(.text.ADC_InjectedConvCmd), (52 bytes).
    Removing hal_adc.o(.ARM.exidx.text.ADC_InjectedConvCmd), (8 bytes).
    Removing hal_adc.o(.text.ADC_SoftwareStartInjectedConvCmd), (52 bytes).
    Removing hal_adc.o(.ARM.exidx.text.ADC_SoftwareStartInjectedConvCmd), (8 bytes).
    Removing hal_adc.o(.text.ADC_InjectedSequencerConfig), (60 bytes).
    Removing hal_adc.o(.ARM.exidx.text.ADC_InjectedSequencerConfig), (8 bytes).
    Removing hal_adc.o(.text.ADC_InjectedSequencerLengthConfig), (48 bytes).
    Removing hal_adc.o(.ARM.exidx.text.ADC_InjectedSequencerLengthConfig), (8 bytes).
    Removing hal_adc.o(.text.ADC_InjectedSequencerChannelConfig), (80 bytes).
    Removing hal_adc.o(.ARM.exidx.text.ADC_InjectedSequencerChannelConfig), (8 bytes).
    Removing hal_adc.o(.text.ADC_GetInjectedConversionValue), (48 bytes).
    Removing hal_adc.o(.ARM.exidx.text.ADC_GetInjectedConversionValue), (8 bytes).
    Removing hal_adc.o(.text.ADC_GetInjectedCurrentConvertedValue), (20 bytes).
    Removing hal_adc.o(.ARM.exidx.text.ADC_GetInjectedCurrentConvertedValue), (8 bytes).
    Removing hal_adc.o(.text.ADC_SetInjectedOffset), (40 bytes).
    Removing hal_adc.o(.ARM.exidx.text.ADC_SetInjectedOffset), (8 bytes).
    Removing hal_adc.o(.text.ADC_GetChannelConvertedValue), (32 bytes).
    Removing hal_adc.o(.ARM.exidx.text.ADC_GetChannelConvertedValue), (8 bytes).
    Removing hal_adc.o(.ARM.exidx.text.ADC_Calibration), (8 bytes).
    Removing hal_bkp.o(.text), (0 bytes).
    Removing hal_bkp.o(.text.BKP_WriteBackupRegister), (36 bytes).
    Removing hal_bkp.o(.ARM.exidx.text.BKP_WriteBackupRegister), (8 bytes).
    Removing hal_bkp.o(.text.BKP_ReadBackupRegister), (24 bytes).
    Removing hal_bkp.o(.ARM.exidx.text.BKP_ReadBackupRegister), (8 bytes).
    Removing hal_bkp.o(.text.exBKP_Init), (48 bytes).
    Removing hal_bkp.o(.ARM.exidx.text.exBKP_Init), (8 bytes).
    Removing hal_bkp.o(.text.exBKP_ImmWrite), (60 bytes).
    Removing hal_bkp.o(.ARM.exidx.text.exBKP_ImmWrite), (8 bytes).
    Removing hal_bkp.o(.text.exBKP_ImmRead), (56 bytes).
    Removing hal_bkp.o(.ARM.exidx.text.exBKP_ImmRead), (8 bytes).
    Removing hal_comp.o(.text), (0 bytes).
    Removing hal_comp.o(.ARM.exidx.text.COMP_DeInit), (8 bytes).
    Removing hal_comp.o(.ARM.exidx.text.COMP_Init), (8 bytes).
    Removing hal_comp.o(.text.COMP_StructInit), (56 bytes).
    Removing hal_comp.o(.ARM.exidx.text.COMP_StructInit), (8 bytes).
    Removing hal_comp.o(.ARM.exidx.text.COMP_Cmd), (8 bytes).
    Removing hal_comp.o(.ARM.exidx.text.COMP_SetCrv), (8 bytes).
    Removing hal_comp.o(.text.COMP_SwitchCmd), (68 bytes).
    Removing hal_comp.o(.ARM.exidx.text.COMP_SwitchCmd), (8 bytes).
    Removing hal_comp.o(.text.COMP_GetOutputLevel), (48 bytes).
    Removing hal_comp.o(.ARM.exidx.text.COMP_GetOutputLevel), (8 bytes).
    Removing hal_comp.o(.text.COMP_LockConfig), (36 bytes).
    Removing hal_comp.o(.ARM.exidx.text.COMP_LockConfig), (8 bytes).
    Removing hal_comp.o(.text.exCOMP_CrvCmd), (52 bytes).
    Removing hal_comp.o(.ARM.exidx.text.exCOMP_CrvCmd), (8 bytes).
    Removing hal_comp.o(.text.exCOMP_SwitchCrv), (28 bytes).
    Removing hal_comp.o(.ARM.exidx.text.exCOMP_SwitchCrv), (8 bytes).
    Removing hal_comp.o(.text.exCOMP_CrvSrc), (28 bytes).
    Removing hal_comp.o(.ARM.exidx.text.exCOMP_CrvSrc), (8 bytes).
    Removing hal_comp.o(.text.COMP_POLL_Init), (96 bytes).
    Removing hal_comp.o(.ARM.exidx.text.COMP_POLL_Init), (8 bytes).
    Removing hal_crc.o(.text), (0 bytes).
    Removing hal_crc.o(.ARM.exidx.text.CRC_ResetDR), (8 bytes).
    Removing hal_crc.o(.text.CRC_CalcCRC), (24 bytes).
    Removing hal_crc.o(.ARM.exidx.text.CRC_CalcCRC), (8 bytes).
    Removing hal_crc.o(.ARM.exidx.text.CRC_CalcBlockCRC), (8 bytes).
    Removing hal_crc.o(.text.CRC_GetCRC), (12 bytes).
    Removing hal_crc.o(.ARM.exidx.text.CRC_GetCRC), (8 bytes).
    Removing hal_crc.o(.text.CRC_SetIDRegister), (24 bytes).
    Removing hal_crc.o(.ARM.exidx.text.CRC_SetIDRegister), (8 bytes).
    Removing hal_crc.o(.text.CRC_GetIDRegister), (12 bytes).
    Removing hal_crc.o(.ARM.exidx.text.CRC_GetIDRegister), (8 bytes).
    Removing hal_crc.o(.text.CRC_RevData), (24 bytes).
    Removing hal_crc.o(.ARM.exidx.text.CRC_RevData), (8 bytes).
    Removing hal_csm.o(.text), (0 bytes).
    Removing hal_dac.o(.text), (0 bytes).
    Removing hal_dac.o(.text.DAC_DeInit), (12 bytes).
    Removing hal_dac.o(.ARM.exidx.text.DAC_DeInit), (8 bytes).
    Removing hal_dac.o(.text.DAC_Init), (64 bytes).
    Removing hal_dac.o(.ARM.exidx.text.DAC_Init), (8 bytes).
    Removing hal_dac.o(.text.DAC_StructInit), (26 bytes).
    Removing hal_dac.o(.ARM.exidx.text.DAC_StructInit), (8 bytes).
    Removing hal_dac.o(.text.DAC_Cmd), (72 bytes).
    Removing hal_dac.o(.ARM.exidx.text.DAC_Cmd), (8 bytes).
    Removing hal_dac.o(.text.DAC_DMACmd), (76 bytes).
    Removing hal_dac.o(.ARM.exidx.text.DAC_DMACmd), (8 bytes).
    Removing hal_dac.o(.text.DAC_SoftwareTriggerCmd), (76 bytes).
    Removing hal_dac.o(.ARM.exidx.text.DAC_SoftwareTriggerCmd), (8 bytes).
    Removing hal_dac.o(.text.DAC_DualSoftwareTriggerCmd), (52 bytes).
    Removing hal_dac.o(.ARM.exidx.text.DAC_DualSoftwareTriggerCmd), (8 bytes).
    Removing hal_dac.o(.text.DAC_WaveGenerationCmd), (84 bytes).
    Removing hal_dac.o(.ARM.exidx.text.DAC_WaveGenerationCmd), (8 bytes).
    Removing hal_dac.o(.text.DAC_SetChannel1Data), (36 bytes).
    Removing hal_dac.o(.ARM.exidx.text.DAC_SetChannel1Data), (8 bytes).
    Removing hal_dac.o(.text.DAC_SetChannel2Data), (36 bytes).
    Removing hal_dac.o(.ARM.exidx.text.DAC_SetChannel2Data), (8 bytes).
    Removing hal_dac.o(.text.DAC_SetDualChannelData), (88 bytes).
    Removing hal_dac.o(.ARM.exidx.text.DAC_SetDualChannelData), (8 bytes).
    Removing hal_dac.o(.text.DAC_GetDataOutputValue), (28 bytes).
    Removing hal_dac.o(.ARM.exidx.text.DAC_GetDataOutputValue), (8 bytes).
    Removing hal_dbg.o(.text), (0 bytes).
    Removing hal_dbg.o(.text.DBGMCU_Configure), (56 bytes).
    Removing hal_dbg.o(.ARM.exidx.text.DBGMCU_Configure), (8 bytes).
    Removing hal_div.o(.text), (0 bytes).
    Removing hal_div.o(.text.HWDivider_Init), (64 bytes).
    Removing hal_div.o(.ARM.exidx.text.HWDivider_Init), (8 bytes).
    Removing hal_div.o(.text.HWDivider_Calc), (76 bytes).
    Removing hal_div.o(.ARM.exidx.text.HWDivider_Calc), (8 bytes).
    Removing hal_div.o(.text.Divider_Calc), (28 bytes).
    Removing hal_div.o(.ARM.exidx.text.Divider_Calc), (8 bytes).
    Removing hal_dma.o(.text), (0 bytes).
    Removing hal_dma.o(.text.DMA_DeInit), (72 bytes).
    Removing hal_dma.o(.ARM.exidx.text.DMA_DeInit), (8 bytes).
    Removing hal_dma.o(.text.DMA_Init), (116 bytes).
    Removing hal_dma.o(.ARM.exidx.text.DMA_Init), (8 bytes).
    Removing hal_dma.o(.text.DMA_StructInit), (62 bytes).
    Removing hal_dma.o(.ARM.exidx.text.DMA_StructInit), (8 bytes).
    Removing hal_dma.o(.text.DMA_Cmd), (52 bytes).
    Removing hal_dma.o(.ARM.exidx.text.DMA_Cmd), (8 bytes).
    Removing hal_dma.o(.text.DMA_ITConfig), (66 bytes).
    Removing hal_dma.o(.ARM.exidx.text.DMA_ITConfig), (8 bytes).
    Removing hal_dma.o(.text.DMA_SetCurrDataCounter), (26 bytes).
    Removing hal_dma.o(.ARM.exidx.text.DMA_SetCurrDataCounter), (8 bytes).
    Removing hal_dma.o(.text.DMA_GetCurrDataCounter), (18 bytes).
    Removing hal_dma.o(.ARM.exidx.text.DMA_GetCurrDataCounter), (8 bytes).
    Removing hal_dma.o(.text.DMA_GetFlagStatus), (40 bytes).
    Removing hal_dma.o(.ARM.exidx.text.DMA_GetFlagStatus), (8 bytes).
    Removing hal_dma.o(.text.DMA_ClearFlag), (24 bytes).
    Removing hal_dma.o(.ARM.exidx.text.DMA_ClearFlag), (8 bytes).
    Removing hal_dma.o(.text.DMA_GetITStatus), (40 bytes).
    Removing hal_dma.o(.ARM.exidx.text.DMA_GetITStatus), (8 bytes).
    Removing hal_dma.o(.text.DMA_ClearITPendingBit), (24 bytes).
    Removing hal_dma.o(.ARM.exidx.text.DMA_ClearITPendingBit), (8 bytes).
    Removing hal_dma.o(.text.exDMA_SetPeripheralAddress), (24 bytes).
    Removing hal_dma.o(.ARM.exidx.text.exDMA_SetPeripheralAddress), (8 bytes).
    Removing hal_dma.o(.text.exDMA_SetTransmitLen), (26 bytes).
    Removing hal_dma.o(.ARM.exidx.text.exDMA_SetTransmitLen), (8 bytes).
    Removing hal_dma.o(.text.exDMA_SetMemoryAddress), (24 bytes).
    Removing hal_dma.o(.ARM.exidx.text.exDMA_SetMemoryAddress), (8 bytes).
    Removing hal_dma.o(.text.exDMA_ClearITPendingBit), (52 bytes).
    Removing hal_dma.o(.ARM.exidx.text.exDMA_ClearITPendingBit), (8 bytes).
    Removing hal_exti.o(.text), (0 bytes).
    Removing hal_exti.o(.text.EXTI_DeInit), (92 bytes).
    Removing hal_exti.o(.ARM.exidx.text.EXTI_DeInit), (8 bytes).
    Removing hal_exti.o(.text.exEXTI_LineDisable), (68 bytes).
    Removing hal_exti.o(.ARM.exidx.text.exEXTI_LineDisable), (8 bytes).
    Removing hal_exti.o(.text.EXTI_MemoryRemapConfig), (32 bytes).
    Removing hal_exti.o(.ARM.exidx.text.EXTI_MemoryRemapConfig), (8 bytes).
    Removing hal_exti.o(.text.EXTI_DMAChannelRemapConfig), (56 bytes).
    Removing hal_exti.o(.ARM.exidx.text.EXTI_DMAChannelRemapConfig), (8 bytes).
    Removing hal_exti.o(.text.EXTI_LineConfig), (84 bytes).
    Removing hal_exti.o(.ARM.exidx.text.EXTI_LineConfig), (8 bytes).
    Removing hal_exti.o(.text.EXTI_Init), (244 bytes).
    Removing hal_exti.o(.ARM.exidx.text.EXTI_Init), (8 bytes).
    Removing hal_exti.o(.text.EXTI_StructInit), (32 bytes).
    Removing hal_exti.o(.ARM.exidx.text.EXTI_StructInit), (8 bytes).
    Removing hal_exti.o(.text.EXTI_GenerateSWInterrupt), (28 bytes).
    Removing hal_exti.o(.ARM.exidx.text.EXTI_GenerateSWInterrupt), (8 bytes).
    Removing hal_exti.o(.ARM.exidx.text.EXTI_GetFlagStatus), (8 bytes).
    Removing hal_exti.o(.ARM.exidx.text.EXTI_ClearFlag), (8 bytes).
    Removing hal_exti.o(.text.EXTI_GetITStatus), (72 bytes).
    Removing hal_exti.o(.ARM.exidx.text.EXTI_GetITStatus), (8 bytes).
    Removing hal_exti.o(.text.EXTI_ClearITPendingBit), (24 bytes).
    Removing hal_exti.o(.ARM.exidx.text.EXTI_ClearITPendingBit), (8 bytes).
    Removing hal_exti.o(.text.exEXTI_GetAllFlagStatus), (12 bytes).
    Removing hal_exti.o(.ARM.exidx.text.exEXTI_GetAllFlagStatus), (8 bytes).
    Removing hal_flash.o(.text), (0 bytes).
    Removing hal_flash.o(.text.FLASH_SetLatency), (36 bytes).
    Removing hal_flash.o(.ARM.exidx.text.FLASH_SetLatency), (8 bytes).
    Removing hal_flash.o(.text.FLASH_PrefetchBufferCmd), (40 bytes).
    Removing hal_flash.o(.ARM.exidx.text.FLASH_PrefetchBufferCmd), (8 bytes).
    Removing hal_flash.o(.text.FLASH_Lock), (16 bytes).
    Removing hal_flash.o(.ARM.exidx.text.FLASH_Lock), (8 bytes).
    Removing hal_flash.o(.text.FLASH_Unlock), (24 bytes).
    Removing hal_flash.o(.ARM.exidx.text.FLASH_Unlock), (8 bytes).
    Removing hal_flash.o(.text.FLASH_OPTB_Enable), (24 bytes).
    Removing hal_flash.o(.ARM.exidx.text.FLASH_OPTB_Enable), (8 bytes).
    Removing hal_flash.o(.text.FLASH_ErasePage), (56 bytes).
    Removing hal_flash.o(.ARM.exidx.text.FLASH_ErasePage), (8 bytes).
    Removing hal_flash.o(.text.FLASH_WaitForLastOperation), (148 bytes).
    Removing hal_flash.o(.ARM.exidx.text.FLASH_WaitForLastOperation), (8 bytes).
    Removing hal_flash.o(.text.FLASH_EraseAllPages), (40 bytes).
    Removing hal_flash.o(.ARM.exidx.text.FLASH_EraseAllPages), (8 bytes).
    Removing hal_flash.o(.text.FLASH_EraseOptionBytes), (48 bytes).
    Removing hal_flash.o(.ARM.exidx.text.FLASH_EraseOptionBytes), (8 bytes).
    Removing hal_flash.o(.text.FLASH_ProgramHalfWord), (48 bytes).
    Removing hal_flash.o(.ARM.exidx.text.FLASH_ProgramHalfWord), (8 bytes).
    Removing hal_flash.o(.text.FLASH_ProgramWord), (64 bytes).
    Removing hal_flash.o(.ARM.exidx.text.FLASH_ProgramWord), (8 bytes).
    Removing hal_flash.o(.text.FLASH_ProgramOptionByteData), (92 bytes).
    Removing hal_flash.o(.ARM.exidx.text.FLASH_ProgramOptionByteData), (8 bytes).
    Removing hal_flash.o(.text.FLASH_ProgramOptionHalfWord), (60 bytes).
    Removing hal_flash.o(.ARM.exidx.text.FLASH_ProgramOptionHalfWord), (8 bytes).
    Removing hal_flash.o(.text.FLASH_EnableWriteProtection), (100 bytes).
    Removing hal_flash.o(.ARM.exidx.text.FLASH_EnableWriteProtection), (8 bytes).
    Removing hal_flash.o(.text.FLASH_UserOptionByteConfig), (104 bytes).
    Removing hal_flash.o(.ARM.exidx.text.FLASH_UserOptionByteConfig), (8 bytes).
    Removing hal_flash.o(.text.FLASH_GetUserOptionByte), (12 bytes).
    Removing hal_flash.o(.ARM.exidx.text.FLASH_GetUserOptionByte), (8 bytes).
    Removing hal_flash.o(.text.FLASH_GetWriteProtectionOptionByte), (12 bytes).
    Removing hal_flash.o(.ARM.exidx.text.FLASH_GetWriteProtectionOptionByte), (8 bytes).
    Removing hal_flash.o(.text.FLASH_GetPrefetchBufferStatus), (16 bytes).
    Removing hal_flash.o(.ARM.exidx.text.FLASH_GetPrefetchBufferStatus), (8 bytes).
    Removing hal_flash.o(.text.FLASH_GetFlagStatus), (76 bytes).
    Removing hal_flash.o(.ARM.exidx.text.FLASH_GetFlagStatus), (8 bytes).
    Removing hal_flash.o(.text.FLASH_ClearFlag), (24 bytes).
    Removing hal_flash.o(.ARM.exidx.text.FLASH_ClearFlag), (8 bytes).
    Removing hal_flash.o(.text.FLASH_GetStatus), (84 bytes).
    Removing hal_flash.o(.ARM.exidx.text.FLASH_GetStatus), (8 bytes).
    Removing hal_flash.o(.text.exFLASH_EraseEE), (30 bytes).
    Removing hal_flash.o(.ARM.exidx.text.exFLASH_EraseEE), (8 bytes).
    Removing hal_flash.o(.text.exFLASH_ProgramEE), (96 bytes).
    Removing hal_flash.o(.ARM.exidx.text.exFLASH_ProgramEE), (8 bytes).
    Removing hal_flash.o(.text.exFLASH_FindEmpty), (100 bytes).
    Removing hal_flash.o(.ARM.exidx.text.exFLASH_FindEmpty), (8 bytes).
    Removing hal_flash.o(.text.exFLASH_Locate), (136 bytes).
    Removing hal_flash.o(.ARM.exidx.text.exFLASH_Locate), (8 bytes).
    Removing hal_flash.o(.text.exFLASH_WriteEE), (208 bytes).
    Removing hal_flash.o(.ARM.exidx.text.exFLASH_WriteEE), (8 bytes).
    Removing hal_flash.o(.text.exFLASH_ReadEE), (76 bytes).
    Removing hal_flash.o(.ARM.exidx.text.exFLASH_ReadEE), (8 bytes).
    Removing hal_gpio.o(.text), (0 bytes).
    Removing hal_gpio.o(.text.GPIO_DeInit), (120 bytes).
    Removing hal_gpio.o(.ARM.exidx.text.GPIO_DeInit), (8 bytes).
    Removing hal_gpio.o(.text.GPIO_AFIODeInit), (76 bytes).
    Removing hal_gpio.o(.ARM.exidx.text.GPIO_AFIODeInit), (8 bytes).
    Removing hal_gpio.o(.ARM.exidx.text.GPIO_Init), (8 bytes).
    Removing hal_gpio.o(.ARM.exidx.text.GPIO_StructInit), (8 bytes).
    Removing hal_gpio.o(.ARM.exidx.text.GPIO_ReadInputDataBit), (8 bytes).
    Removing hal_gpio.o(.text.GPIO_ReadInputData), (18 bytes).
    Removing hal_gpio.o(.ARM.exidx.text.GPIO_ReadInputData), (8 bytes).
    Removing hal_gpio.o(.text.GPIO_ReadOutputDataBit), (44 bytes).
    Removing hal_gpio.o(.ARM.exidx.text.GPIO_ReadOutputDataBit), (8 bytes).
    Removing hal_gpio.o(.text.GPIO_ReadOutputData), (18 bytes).
    Removing hal_gpio.o(.ARM.exidx.text.GPIO_ReadOutputData), (8 bytes).
    Removing hal_gpio.o(.text.GPIO_SetBits), (26 bytes).
    Removing hal_gpio.o(.ARM.exidx.text.GPIO_SetBits), (8 bytes).
    Removing hal_gpio.o(.text.GPIO_ResetBits), (26 bytes).
    Removing hal_gpio.o(.ARM.exidx.text.GPIO_ResetBits), (8 bytes).
    Removing hal_gpio.o(.text.GPIO_WriteBit), (58 bytes).
    Removing hal_gpio.o(.ARM.exidx.text.GPIO_WriteBit), (8 bytes).
    Removing hal_gpio.o(.text.GPIO_Write), (26 bytes).
    Removing hal_gpio.o(.ARM.exidx.text.GPIO_Write), (8 bytes).
    Removing hal_gpio.o(.text.GPIO_PinLock), (66 bytes).
    Removing hal_gpio.o(.ARM.exidx.text.GPIO_PinLock), (8 bytes).
    Removing hal_gpio.o(.text.GPIO_PinLockConfig), (60 bytes).
    Removing hal_gpio.o(.ARM.exidx.text.GPIO_PinLockConfig), (8 bytes).
    Removing hal_gpio.o(.ARM.exidx.text.GPIO_PinAFConfig), (8 bytes).
    Removing hal_gpio.o(.text.exGPIO_PinAFConfig), (176 bytes).
    Removing hal_gpio.o(.ARM.exidx.text.exGPIO_PinAFConfig), (8 bytes).
    Removing hal_i2c.o(.text), (0 bytes).
    Removing hal_i2c.o(.text.I2C_DeInit), (40 bytes).
    Removing hal_i2c.o(.ARM.exidx.text.I2C_DeInit), (8 bytes).
    Removing hal_i2c.o(.text.I2C_Init), (280 bytes).
    Removing hal_i2c.o(.ARM.exidx.text.I2C_Init), (8 bytes).
    Removing hal_i2c.o(.text.I2C_StructInit), (40 bytes).
    Removing hal_i2c.o(.ARM.exidx.text.I2C_StructInit), (8 bytes).
    Removing hal_i2c.o(.text.I2C_Cmd), (52 bytes).
    Removing hal_i2c.o(.ARM.exidx.text.I2C_Cmd), (8 bytes).
    Removing hal_i2c.o(.text.I2C_DMACmd), (88 bytes).
    Removing hal_i2c.o(.ARM.exidx.text.I2C_DMACmd), (8 bytes).
    Removing hal_i2c.o(.text.I2C_GenerateSTART), (52 bytes).
    Removing hal_i2c.o(.ARM.exidx.text.I2C_GenerateSTART), (8 bytes).
    Removing hal_i2c.o(.text.I2C_GenerateSTOP), (80 bytes).
    Removing hal_i2c.o(.ARM.exidx.text.I2C_GenerateSTOP), (8 bytes).
    Removing hal_i2c.o(.text.I2C_OwnAddress2Config), (44 bytes).
    Removing hal_i2c.o(.ARM.exidx.text.I2C_OwnAddress2Config), (8 bytes).
    Removing hal_i2c.o(.text.I2C_DualAddressCmd), (60 bytes).
    Removing hal_i2c.o(.ARM.exidx.text.I2C_DualAddressCmd), (8 bytes).
    Removing hal_i2c.o(.text.I2C_GeneralCallCmd), (56 bytes).
    Removing hal_i2c.o(.ARM.exidx.text.I2C_GeneralCallCmd), (8 bytes).
    Removing hal_i2c.o(.text.I2C_ITConfig), (84 bytes).
    Removing hal_i2c.o(.ARM.exidx.text.I2C_ITConfig), (8 bytes).
    Removing hal_i2c.o(.text.I2C_ReadCmd), (20 bytes).
    Removing hal_i2c.o(.ARM.exidx.text.I2C_ReadCmd), (8 bytes).
    Removing hal_i2c.o(.text.I2C_SendData), (26 bytes).
    Removing hal_i2c.o(.ARM.exidx.text.I2C_SendData), (8 bytes).
    Removing hal_i2c.o(.text.I2C_ReceiveData), (28 bytes).
    Removing hal_i2c.o(.ARM.exidx.text.I2C_ReceiveData), (8 bytes).
    Removing hal_i2c.o(.text.I2C_Send7bitAddress), (38 bytes).
    Removing hal_i2c.o(.ARM.exidx.text.I2C_Send7bitAddress), (8 bytes).
    Removing hal_i2c.o(.text.I2C_ReadRegister), (26 bytes).
    Removing hal_i2c.o(.ARM.exidx.text.I2C_ReadRegister), (8 bytes).
    Removing hal_i2c.o(.text.I2C_GetLastEvent), (24 bytes).
    Removing hal_i2c.o(.ARM.exidx.text.I2C_GetLastEvent), (8 bytes).
    Removing hal_i2c.o(.text.I2C_CheckEvent), (72 bytes).
    Removing hal_i2c.o(.ARM.exidx.text.I2C_CheckEvent), (8 bytes).
    Removing hal_i2c.o(.text.I2C_GetFlagStatus), (132 bytes).
    Removing hal_i2c.o(.ARM.exidx.text.I2C_GetFlagStatus), (8 bytes).
    Removing hal_i2c.o(.text.I2C_ClearFlag), (206 bytes).
    Removing hal_i2c.o(.ARM.exidx.text.I2C_ClearFlag), (8 bytes).
    Removing hal_i2c.o(.text.I2C_GetITStatus), (42 bytes).
    Removing hal_i2c.o(.ARM.exidx.text.I2C_GetITStatus), (8 bytes).
    Removing hal_i2c.o(.text.I2C_ClearITPendingBit), (198 bytes).
    Removing hal_i2c.o(.ARM.exidx.text.I2C_ClearITPendingBit), (8 bytes).
    Removing hal_i2c.o(.text.I2C_SendSlaveAddress), (28 bytes).
    Removing hal_i2c.o(.ARM.exidx.text.I2C_SendSlaveAddress), (8 bytes).
    Removing hal_i2c.o(.text.I2C_SlaveConfigure), (52 bytes).
    Removing hal_i2c.o(.ARM.exidx.text.I2C_SlaveConfigure), (8 bytes).
    Removing hal_i2c.o(.text.I2C_DMAConfigure), (34 bytes).
    Removing hal_i2c.o(.ARM.exidx.text.I2C_DMAConfigure), (8 bytes).
    Removing hal_i2c.o(.text.I2C_SlaveReceivedAddressMask), (30 bytes).
    Removing hal_i2c.o(.ARM.exidx.text.I2C_SlaveReceivedAddressMask), (8 bytes).
    Removing hal_i2c.o(.text.I2C_GetSlaveReceivedAddr), (18 bytes).
    Removing hal_i2c.o(.ARM.exidx.text.I2C_GetSlaveReceivedAddr), (8 bytes).
    Removing hal_i2c.o(.bss.I2C_DMA_DIR), (2 bytes).
    Removing hal_i2c.o(.bss.I2C_CMD_DIR), (1 bytes).
    Removing hal_iwdg.o(.text), (0 bytes).
    Removing hal_iwdg.o(.ARM.exidx.text.IWDG_WriteAccessCmd), (8 bytes).
    Removing hal_iwdg.o(.ARM.exidx.text.IWDG_SetPrescaler), (8 bytes).
    Removing hal_iwdg.o(.ARM.exidx.text.PVU_CheckStatus), (8 bytes).
    Removing hal_iwdg.o(.ARM.exidx.text.IWDG_SetReload), (8 bytes).
    Removing hal_iwdg.o(.ARM.exidx.text.RVU_CheckStatus), (8 bytes).
    Removing hal_iwdg.o(.text.IWDG_GetReload), (12 bytes).
    Removing hal_iwdg.o(.ARM.exidx.text.IWDG_GetReload), (8 bytes).
    Removing hal_iwdg.o(.ARM.exidx.text.IWDG_ReloadCounter), (8 bytes).
    Removing hal_iwdg.o(.ARM.exidx.text.IWDG_Enable), (8 bytes).
    Removing hal_iwdg.o(.ARM.exidx.text.IWDG_GetFlagStatus), (8 bytes).
    Removing hal_iwdg.o(.text.IVU_CheckStatus), (20 bytes).
    Removing hal_iwdg.o(.ARM.exidx.text.IVU_CheckStatus), (8 bytes).
    Removing hal_iwdg.o(.text.IWDG_OverflowConfig), (40 bytes).
    Removing hal_iwdg.o(.ARM.exidx.text.IWDG_OverflowConfig), (8 bytes).
    Removing hal_iwdg.o(.text.IWDG_ClearITPendingBit), (16 bytes).
    Removing hal_iwdg.o(.ARM.exidx.text.IWDG_ClearITPendingBit), (8 bytes).
    Removing hal_iwdg.o(.text.IWDG_ClearIT), (16 bytes).
    Removing hal_iwdg.o(.ARM.exidx.text.IWDG_ClearIT), (8 bytes).
    Removing hal_iwdg.o(.text.IWDG_EnableIT), (16 bytes).
    Removing hal_iwdg.o(.ARM.exidx.text.IWDG_EnableIT), (8 bytes).
    Removing hal_iwdg.o(.text.IWDG_Reset), (16 bytes).
    Removing hal_iwdg.o(.ARM.exidx.text.IWDG_Reset), (8 bytes).
    Removing hal_iwdg.o(.text.IWDG_SetIGen), (24 bytes).
    Removing hal_iwdg.o(.ARM.exidx.text.IWDG_SetIGen), (8 bytes).
    Removing hal_iwdg.o(.text.IWDG_GetCnt), (12 bytes).
    Removing hal_iwdg.o(.ARM.exidx.text.IWDG_GetCnt), (8 bytes).
    Removing hal_iwdg.o(.text.IWDG_GetPS), (12 bytes).
    Removing hal_iwdg.o(.ARM.exidx.text.IWDG_GetPS), (8 bytes).
    Removing hal_misc.o(.text), (0 bytes).
    Removing hal_misc.o(.ARM.exidx.text.NVIC_Init), (8 bytes).
    Removing hal_misc.o(.ARM.exidx.text.exNVIC_Init), (8 bytes).
    Removing hal_misc.o(.text.NVIC_SystemLPConfig), (64 bytes).
    Removing hal_misc.o(.ARM.exidx.text.NVIC_SystemLPConfig), (8 bytes).
    Removing hal_misc.o(.text.SysTick_CLKSourceConfig), (48 bytes).
    Removing hal_misc.o(.ARM.exidx.text.SysTick_CLKSourceConfig), (8 bytes).
    Removing hal_opamp.o(.text), (0 bytes).
    Removing hal_opamp.o(.ARM.exidx.text.OPAMP_Configure), (8 bytes).
    Removing hal_opamp.o(.text.OPAMP_Cmd), (56 bytes).
    Removing hal_opamp.o(.ARM.exidx.text.OPAMP_Cmd), (8 bytes).
    Removing hal_pwr.o(.text), (0 bytes).
    Removing hal_pwr.o(.text.PWR_DeInit), (12 bytes).
    Removing hal_pwr.o(.ARM.exidx.text.PWR_DeInit), (8 bytes).
    Removing hal_pwr.o(.text.PWR_BackupAccessCmd), (56 bytes).
    Removing hal_pwr.o(.ARM.exidx.text.PWR_BackupAccessCmd), (8 bytes).
    Removing hal_pwr.o(.text.PWR_PVDCmd), (52 bytes).
    Removing hal_pwr.o(.ARM.exidx.text.PWR_PVDCmd), (8 bytes).
    Removing hal_pwr.o(.text.PWR_PVDLevelConfig), (36 bytes).
    Removing hal_pwr.o(.ARM.exidx.text.PWR_PVDLevelConfig), (8 bytes).
    Removing hal_pwr.o(.text.PWR_WakeUpPinCmd), (56 bytes).
    Removing hal_pwr.o(.ARM.exidx.text.PWR_WakeUpPinCmd), (8 bytes).
    Removing hal_pwr.o(.text.PWR_EnterSTOPMode), (88 bytes).
    Removing hal_pwr.o(.ARM.exidx.text.PWR_EnterSTOPMode), (8 bytes).
    Removing hal_pwr.o(.text.PWR_EnterSTANDBYMode), (48 bytes).
    Removing hal_pwr.o(.ARM.exidx.text.PWR_EnterSTANDBYMode), (8 bytes).
    Removing hal_pwr.o(.text.PWR_GetFlagStatus), (28 bytes).
    Removing hal_pwr.o(.ARM.exidx.text.PWR_GetFlagStatus), (8 bytes).
    Removing hal_pwr.o(.text.PWR_ClearFlag), (28 bytes).
    Removing hal_pwr.o(.ARM.exidx.text.PWR_ClearFlag), (8 bytes).
    Removing hal_rcc.o(.text), (0 bytes).
    Removing hal_rcc.o(.text.RCC_DeInit), (72 bytes).
    Removing hal_rcc.o(.ARM.exidx.text.RCC_DeInit), (8 bytes).
    Removing hal_rcc.o(.text.RCC_HSEConfig), (92 bytes).
    Removing hal_rcc.o(.ARM.exidx.text.RCC_HSEConfig), (8 bytes).
    Removing hal_rcc.o(.ARM.exidx.text.RCC_GetFlagStatus), (8 bytes).
    Removing hal_rcc.o(.text.RCC_WaitForHSEStartUp), (96 bytes).
    Removing hal_rcc.o(.ARM.exidx.text.RCC_WaitForHSEStartUp), (8 bytes).
    Removing hal_rcc.o(.text.RCC_WaitForFlagStartUp), (76 bytes).
    Removing hal_rcc.o(.ARM.exidx.text.RCC_WaitForFlagStartUp), (8 bytes).
    Removing hal_rcc.o(.text.RCC_HSICmd), (36 bytes).
    Removing hal_rcc.o(.ARM.exidx.text.RCC_HSICmd), (8 bytes).
    Removing hal_rcc.o(.text.RCC_SYSCLKConfig), (36 bytes).
    Removing hal_rcc.o(.ARM.exidx.text.RCC_SYSCLKConfig), (8 bytes).
    Removing hal_rcc.o(.text.RCC_PLLDMDNConfig), (52 bytes).
    Removing hal_rcc.o(.ARM.exidx.text.RCC_PLLDMDNConfig), (8 bytes).
    Removing hal_rcc.o(.text.RCC_PLLCmd), (36 bytes).
    Removing hal_rcc.o(.ARM.exidx.text.RCC_PLLCmd), (8 bytes).
    Removing hal_rcc.o(.text.RCC_PLLConfig), (60 bytes).
    Removing hal_rcc.o(.ARM.exidx.text.RCC_PLLConfig), (8 bytes).
    Removing hal_rcc.o(.text.RCC_GetSYSCLKSource), (16 bytes).
    Removing hal_rcc.o(.ARM.exidx.text.RCC_GetSYSCLKSource), (8 bytes).
    Removing hal_rcc.o(.text.RCC_HCLKConfig), (36 bytes).
    Removing hal_rcc.o(.ARM.exidx.text.RCC_HCLKConfig), (8 bytes).
    Removing hal_rcc.o(.text.RCC_PCLK1Config), (36 bytes).
    Removing hal_rcc.o(.ARM.exidx.text.RCC_PCLK1Config), (8 bytes).
    Removing hal_rcc.o(.text.RCC_PCLK2Config), (40 bytes).
    Removing hal_rcc.o(.ARM.exidx.text.RCC_PCLK2Config), (8 bytes).
    Removing hal_rcc.o(.text.RCC_ADCCLKConfig), (40 bytes).
    Removing hal_rcc.o(.ARM.exidx.text.RCC_ADCCLKConfig), (8 bytes).
    Removing hal_rcc.o(.ARM.exidx.text.RCC_LSICmd), (8 bytes).
    Removing hal_rcc.o(.ARM.exidx.text.RCC_GetSysClockFreq), (8 bytes).
    Removing hal_rcc.o(.ARM.exidx.text.RCC_GetHCLKFreq), (8 bytes).
    Removing hal_rcc.o(.ARM.exidx.text.RCC_GetPCLK1Freq), (8 bytes).
    Removing hal_rcc.o(.ARM.exidx.text.RCC_GetPCLK2Freq), (8 bytes).
    Removing hal_rcc.o(.text.RCC_GetClocksFreq), (88 bytes).
    Removing hal_rcc.o(.ARM.exidx.text.RCC_GetClocksFreq), (8 bytes).
    Removing hal_rcc.o(.ARM.exidx.text.RCC_AHBPeriphClockCmd), (8 bytes).
    Removing hal_rcc.o(.ARM.exidx.text.RCC_APB2PeriphClockCmd), (8 bytes).
    Removing hal_rcc.o(.ARM.exidx.text.RCC_APB1PeriphClockCmd), (8 bytes).
    Removing hal_rcc.o(.text.RCC_APB2PeriphResetCmd), (56 bytes).
    Removing hal_rcc.o(.ARM.exidx.text.RCC_APB2PeriphResetCmd), (8 bytes).
    Removing hal_rcc.o(.text.RCC_APB1PeriphResetCmd), (56 bytes).
    Removing hal_rcc.o(.ARM.exidx.text.RCC_APB1PeriphResetCmd), (8 bytes).
    Removing hal_rcc.o(.text.RCC_AHBPeriphResetCmd), (56 bytes).
    Removing hal_rcc.o(.ARM.exidx.text.RCC_AHBPeriphResetCmd), (8 bytes).
    Removing hal_rcc.o(.text.RCC_BackupResetCmd), (40 bytes).
    Removing hal_rcc.o(.ARM.exidx.text.RCC_BackupResetCmd), (8 bytes).
    Removing hal_rcc.o(.ARM.exidx.text.RCC_ClockSecuritySystemCmd), (8 bytes).
    Removing hal_rcc.o(.text.RCC_MCOConfig), (32 bytes).
    Removing hal_rcc.o(.ARM.exidx.text.RCC_MCOConfig), (8 bytes).
    Removing hal_rcc.o(.text.RCC_ClearFlag), (20 bytes).
    Removing hal_rcc.o(.ARM.exidx.text.RCC_ClearFlag), (8 bytes).
    Removing hal_rcc.o(.text.RCC_ITConfig), (68 bytes).
    Removing hal_rcc.o(.ARM.exidx.text.RCC_ITConfig), (8 bytes).
    Removing hal_rcc.o(.text.RCC_GetITStatus), (28 bytes).
    Removing hal_rcc.o(.ARM.exidx.text.RCC_GetITStatus), (8 bytes).
    Removing hal_rcc.o(.ARM.exidx.text.RCC_ClearITPendingBit), (8 bytes).
    Removing hal_rcc.o(.text.RCC_APB1PeriphReset), (36 bytes).
    Removing hal_rcc.o(.ARM.exidx.text.RCC_APB1PeriphReset), (8 bytes).
    Removing hal_rcc.o(.text.RCC_APB2PeriphReset), (36 bytes).
    Removing hal_rcc.o(.ARM.exidx.text.RCC_APB2PeriphReset), (8 bytes).
    Removing hal_rcc.o(.text.RCC_AHBPeriphReset), (36 bytes).
    Removing hal_rcc.o(.ARM.exidx.text.RCC_AHBPeriphReset), (8 bytes).
    Removing hal_rcc.o(.ARM.exidx.text.exRCC_APB1PeriphReset), (8 bytes).
    Removing hal_rcc.o(.text.exRCC_BackupReset), (2 bytes).
    Removing hal_rcc.o(.ARM.exidx.text.exRCC_BackupReset), (8 bytes).
    Removing hal_rcc.o(.ARM.exidx.text.exRCC_APB2PeriphReset), (8 bytes).
    Removing hal_rcc.o(.text.exRCC_AHBPeriphReset), (36 bytes).
    Removing hal_rcc.o(.ARM.exidx.text.exRCC_AHBPeriphReset), (8 bytes).
    Removing hal_rcc.o(.text.exRCC_SystickDisable), (16 bytes).
    Removing hal_rcc.o(.ARM.exidx.text.exRCC_SystickDisable), (8 bytes).
    Removing hal_rcc.o(.text.exRCC_SystickEnable), (40 bytes).
    Removing hal_rcc.o(.ARM.exidx.text.exRCC_SystickEnable), (8 bytes).
    Removing hal_rcc.o(.text.SysTick_Config), (88 bytes).
    Removing hal_rcc.o(.ARM.exidx.text.SysTick_Config), (8 bytes).
    Removing hal_rcc.o(.text.RCC_ADC_ClockCmd), (136 bytes).
    Removing hal_rcc.o(.ARM.exidx.text.RCC_ADC_ClockCmd), (8 bytes).
    Removing hal_rcc.o(.text.RCC_COMP_ClockCmd), (80 bytes).
    Removing hal_rcc.o(.ARM.exidx.text.RCC_COMP_ClockCmd), (8 bytes).
    Removing hal_rcc.o(.text.RCC_CRC_ClockCmd), (76 bytes).
    Removing hal_rcc.o(.ARM.exidx.text.RCC_CRC_ClockCmd), (8 bytes).
    Removing hal_rcc.o(.text.RCC_DIV_ClockCmd), (80 bytes).
    Removing hal_rcc.o(.ARM.exidx.text.RCC_DIV_ClockCmd), (8 bytes).
    Removing hal_rcc.o(.text.RCC_DMA_ClockCmd), (76 bytes).
    Removing hal_rcc.o(.ARM.exidx.text.RCC_DMA_ClockCmd), (8 bytes).
    Removing hal_rcc.o(.ARM.exidx.text.RCC_GPIO_ClockCmd), (8 bytes).
    Removing hal_rcc.o(.text.RCC_I2C_ClockCmd), (80 bytes).
    Removing hal_rcc.o(.ARM.exidx.text.RCC_I2C_ClockCmd), (8 bytes).
    Removing hal_rcc.o(.text.RCC_SPI_ClockCmd), (140 bytes).
    Removing hal_rcc.o(.ARM.exidx.text.RCC_SPI_ClockCmd), (8 bytes).
    Removing hal_rcc.o(.ARM.exidx.text.RCC_UART_ClockCmd), (8 bytes).
    Removing hal_rcc.o(.text.__NVIC_SetPriority), (144 bytes).
    Removing hal_rcc.o(.ARM.exidx.text.__NVIC_SetPriority), (8 bytes).
    Removing hal_rcc.o(.rodata.RCC_PLLConfig.DNDM_Item), (30 bytes).
    Removing hal_rcc.o(.rodata.cst4), (4 bytes).
    Removing hal_spi.o(.text), (0 bytes).
    Removing hal_spi.o(.text.SPI_DeInit), (104 bytes).
    Removing hal_spi.o(.ARM.exidx.text.SPI_DeInit), (8 bytes).
    Removing hal_spi.o(.text.SPI_Init), (232 bytes).
    Removing hal_spi.o(.ARM.exidx.text.SPI_Init), (8 bytes).
    Removing hal_spi.o(.text.SPI_StructInit), (52 bytes).
    Removing hal_spi.o(.ARM.exidx.text.SPI_StructInit), (8 bytes).
    Removing hal_spi.o(.text.SPI_Cmd), (52 bytes).
    Removing hal_spi.o(.ARM.exidx.text.SPI_Cmd), (8 bytes).
    Removing hal_spi.o(.text.SPI_ITConfig), (86 bytes).
    Removing hal_spi.o(.ARM.exidx.text.SPI_ITConfig), (8 bytes).
    Removing hal_spi.o(.text.SPI_DMACmd), (56 bytes).
    Removing hal_spi.o(.ARM.exidx.text.SPI_DMACmd), (8 bytes).
    Removing hal_spi.o(.text.SPI_FifoTrigger), (66 bytes).
    Removing hal_spi.o(.ARM.exidx.text.SPI_FifoTrigger), (8 bytes).
    Removing hal_spi.o(.text.SPI_SendData), (112 bytes).
    Removing hal_spi.o(.ARM.exidx.text.SPI_SendData), (8 bytes).
    Removing hal_spi.o(.text.SPI_ReceiveData), (120 bytes).
    Removing hal_spi.o(.ARM.exidx.text.SPI_ReceiveData), (8 bytes).
    Removing hal_spi.o(.text.SPI_CSInternalSelected), (52 bytes).
    Removing hal_spi.o(.ARM.exidx.text.SPI_CSInternalSelected), (8 bytes).
    Removing hal_spi.o(.text.SPI_NSSInternalSoftwareConfig), (56 bytes).
    Removing hal_spi.o(.ARM.exidx.text.SPI_NSSInternalSoftwareConfig), (8 bytes).
    Removing hal_spi.o(.text.SPI_DataSizeConfig), (64 bytes).
    Removing hal_spi.o(.ARM.exidx.text.SPI_DataSizeConfig), (8 bytes).
    Removing hal_spi.o(.text.SPI_DataSizeTypeConfig), (44 bytes).
    Removing hal_spi.o(.ARM.exidx.text.SPI_DataSizeTypeConfig), (8 bytes).
    Removing hal_spi.o(.text.SPI_BiDirectionalLineConfig), (94 bytes).
    Removing hal_spi.o(.ARM.exidx.text.SPI_BiDirectionalLineConfig), (8 bytes).
    Removing hal_spi.o(.text.SPI_GetFlagStatus), (44 bytes).
    Removing hal_spi.o(.ARM.exidx.text.SPI_GetFlagStatus), (8 bytes).
    Removing hal_spi.o(.text.SPI_GetITStatus), (44 bytes).
    Removing hal_spi.o(.ARM.exidx.text.SPI_GetITStatus), (8 bytes).
    Removing hal_spi.o(.text.SPI_ClearITPendingBit), (32 bytes).
    Removing hal_spi.o(.ARM.exidx.text.SPI_ClearITPendingBit), (8 bytes).
    Removing hal_spi.o(.text.SPI_RxBytes), (26 bytes).
    Removing hal_spi.o(.ARM.exidx.text.SPI_RxBytes), (8 bytes).
    Removing hal_spi.o(.text.SPI_SlaveAdjust), (52 bytes).
    Removing hal_spi.o(.ARM.exidx.text.SPI_SlaveAdjust), (8 bytes).
    Removing hal_spi.o(.text.exSPI_ITCmd), (52 bytes).
    Removing hal_spi.o(.ARM.exidx.text.exSPI_ITCmd), (8 bytes).
    Removing hal_spi.o(.text.exSPI_ITConfig), (66 bytes).
    Removing hal_spi.o(.ARM.exidx.text.exSPI_ITConfig), (8 bytes).
    Removing hal_spi.o(.text.exSPI_DMACmd), (56 bytes).
    Removing hal_spi.o(.ARM.exidx.text.exSPI_DMACmd), (8 bytes).
    Removing hal_spi.o(.text.exSPI_CSInternalSelected), (52 bytes).
    Removing hal_spi.o(.ARM.exidx.text.exSPI_CSInternalSelected), (8 bytes).
    Removing hal_spi.o(.text.exSPI_DataEdgeAdjust), (104 bytes).
    Removing hal_spi.o(.ARM.exidx.text.exSPI_DataEdgeAdjust), (8 bytes).
    Removing hal_spi.o(.text.I2S_Cmd), (56 bytes).
    Removing hal_spi.o(.ARM.exidx.text.I2S_Cmd), (8 bytes).
    Removing hal_spi.o(.text.I2S_Init), (516 bytes).
    Removing hal_spi.o(.ARM.exidx.text.I2S_Init), (8 bytes).
    Removing hal_sqrt.o(.text), (0 bytes).
    Removing hal_sqrt.o(.text.HWRoot_Set), (24 bytes).
    Removing hal_sqrt.o(.ARM.exidx.text.HWRoot_Set), (8 bytes).
    Removing hal_sqrt.o(.text.HWRoot_Get), (12 bytes).
    Removing hal_sqrt.o(.ARM.exidx.text.HWRoot_Get), (8 bytes).
    Removing hal_tim.o(.text), (0 bytes).
    Removing hal_tim.o(.ARM.exidx.text.TIM_DeInit), (8 bytes).
    Removing hal_tim.o(.ARM.exidx.text.TIM_TimeBaseInit), (8 bytes).
    Removing hal_tim.o(.ARM.exidx.text.TIM_OC1Init), (8 bytes).
    Removing hal_tim.o(.ARM.exidx.text.TIM_OC2Init), (8 bytes).
    Removing hal_tim.o(.ARM.exidx.text.TIM_OC3Init), (8 bytes).
    Removing hal_tim.o(.ARM.exidx.text.TIM_OC4Init), (8 bytes).
    Removing hal_tim.o(.ARM.exidx.text.TIM_ICInit), (8 bytes).
    Removing hal_tim.o(.ARM.exidx.text.TI1_Configure), (8 bytes).
    Removing hal_tim.o(.ARM.exidx.text.TIM_SetIC1Prescaler), (8 bytes).
    Removing hal_tim.o(.ARM.exidx.text.TI2_Configure), (8 bytes).
    Removing hal_tim.o(.ARM.exidx.text.TIM_SetIC2Prescaler), (8 bytes).
    Removing hal_tim.o(.ARM.exidx.text.TI3_Configure), (8 bytes).
    Removing hal_tim.o(.ARM.exidx.text.TIM_SetIC3Prescaler), (8 bytes).
    Removing hal_tim.o(.ARM.exidx.text.TI4_Configure), (8 bytes).
    Removing hal_tim.o(.ARM.exidx.text.TIM_SetIC4Prescaler), (8 bytes).
    Removing hal_tim.o(.ARM.exidx.text.TIM_PWMIConfig), (8 bytes).
    Removing hal_tim.o(.ARM.exidx.text.TIM_BDTRConfig), (8 bytes).
    Removing hal_tim.o(.ARM.exidx.text.TIM_TimeBaseStructInit), (8 bytes).
    Removing hal_tim.o(.ARM.exidx.text.TIM_OCStructInit), (8 bytes).
    Removing hal_tim.o(.ARM.exidx.text.TIM_ICStructInit), (8 bytes).
    Removing hal_tim.o(.text.TIM_BDTRStructInit), (42 bytes).
    Removing hal_tim.o(.ARM.exidx.text.TIM_BDTRStructInit), (8 bytes).
    Removing hal_tim.o(.ARM.exidx.text.TIM_Cmd), (8 bytes).
    Removing hal_tim.o(.ARM.exidx.text.TIM_CtrlPWMOutputs), (8 bytes).
    Removing hal_tim.o(.ARM.exidx.text.TIM_ITConfig), (8 bytes).
    Removing hal_tim.o(.text.TIM_GenerateEvent), (24 bytes).
    Removing hal_tim.o(.ARM.exidx.text.TIM_GenerateEvent), (8 bytes).
    Removing hal_tim.o(.text.TIM_DMAConfig), (40 bytes).
    Removing hal_tim.o(.ARM.exidx.text.TIM_DMAConfig), (8 bytes).
    Removing hal_tim.o(.text.TIM_DMACmd), (60 bytes).
    Removing hal_tim.o(.ARM.exidx.text.TIM_DMACmd), (8 bytes).
    Removing hal_tim.o(.text.TIM_InternalClockConfig), (22 bytes).
    Removing hal_tim.o(.ARM.exidx.text.TIM_InternalClockConfig), (8 bytes).
    Removing hal_tim.o(.text.TIM_ITRxExternalClockConfig), (46 bytes).
    Removing hal_tim.o(.ARM.exidx.text.TIM_ITRxExternalClockConfig), (8 bytes).
    Removing hal_tim.o(.ARM.exidx.text.TIM_SelectInputTrigger), (8 bytes).
    Removing hal_tim.o(.text.TIM_TIxExternalClockConfig), (102 bytes).
    Removing hal_tim.o(.ARM.exidx.text.TIM_TIxExternalClockConfig), (8 bytes).
    Removing hal_tim.o(.text.TIM_ETRConfig), (124 bytes).
    Removing hal_tim.o(.ARM.exidx.text.TIM_ETRConfig), (8 bytes).
    Removing hal_tim.o(.text.TIM_ETRClockMode1Config), (80 bytes).
    Removing hal_tim.o(.ARM.exidx.text.TIM_ETRClockMode1Config), (8 bytes).
    Removing hal_tim.o(.text.TIM_ETRClockMode2Config), (80 bytes).
    Removing hal_tim.o(.ARM.exidx.text.TIM_ETRClockMode2Config), (8 bytes).
    Removing hal_tim.o(.text.TIM_PrescalerConfig), (42 bytes).
    Removing hal_tim.o(.ARM.exidx.text.TIM_PrescalerConfig), (8 bytes).
    Removing hal_tim.o(.text.TIM_CounterModeConfig), (38 bytes).
    Removing hal_tim.o(.ARM.exidx.text.TIM_CounterModeConfig), (8 bytes).
    Removing hal_tim.o(.text.TIM_EncoderInterfaceConfig), (104 bytes).
    Removing hal_tim.o(.ARM.exidx.text.TIM_EncoderInterfaceConfig), (8 bytes).
    Removing hal_tim.o(.text.TIM_ForcedOC1Config), (38 bytes).
    Removing hal_tim.o(.ARM.exidx.text.TIM_ForcedOC1Config), (8 bytes).
    Removing hal_tim.o(.text.TIM_ForcedOC2Config), (42 bytes).
    Removing hal_tim.o(.ARM.exidx.text.TIM_ForcedOC2Config), (8 bytes).
    Removing hal_tim.o(.text.TIM_ForcedOC3Config), (38 bytes).
    Removing hal_tim.o(.ARM.exidx.text.TIM_ForcedOC3Config), (8 bytes).
    Removing hal_tim.o(.text.TIM_ForcedOC4Config), (42 bytes).
    Removing hal_tim.o(.ARM.exidx.text.TIM_ForcedOC4Config), (8 bytes).
    Removing hal_tim.o(.ARM.exidx.text.TIM_ARRPreloadConfig), (8 bytes).
    Removing hal_tim.o(.text.TIM_SelectCOM), (52 bytes).
    Removing hal_tim.o(.ARM.exidx.text.TIM_SelectCOM), (8 bytes).
    Removing hal_tim.o(.text.TIM_SelectCCDMA), (52 bytes).
    Removing hal_tim.o(.ARM.exidx.text.TIM_SelectCCDMA), (8 bytes).
    Removing hal_tim.o(.text.TIM_CCPreloadControl), (52 bytes).
    Removing hal_tim.o(.ARM.exidx.text.TIM_CCPreloadControl), (8 bytes).
    Removing hal_tim.o(.ARM.exidx.text.TIM_OC1PreloadConfig), (8 bytes).
    Removing hal_tim.o(.ARM.exidx.text.TIM_OC2PreloadConfig), (8 bytes).
    Removing hal_tim.o(.ARM.exidx.text.TIM_OC3PreloadConfig), (8 bytes).
    Removing hal_tim.o(.text.TIM_OC4PreloadConfig), (42 bytes).
    Removing hal_tim.o(.ARM.exidx.text.TIM_OC4PreloadConfig), (8 bytes).
    Removing hal_tim.o(.text.TIM_OC1FastConfig), (38 bytes).
    Removing hal_tim.o(.ARM.exidx.text.TIM_OC1FastConfig), (8 bytes).
    Removing hal_tim.o(.text.TIM_OC2FastConfig), (42 bytes).
    Removing hal_tim.o(.ARM.exidx.text.TIM_OC2FastConfig), (8 bytes).
    Removing hal_tim.o(.text.TIM_OC3FastConfig), (38 bytes).
    Removing hal_tim.o(.ARM.exidx.text.TIM_OC3FastConfig), (8 bytes).
    Removing hal_tim.o(.text.TIM_OC4FastConfig), (42 bytes).
    Removing hal_tim.o(.ARM.exidx.text.TIM_OC4FastConfig), (8 bytes).
    Removing hal_tim.o(.text.TIM_ClearOC1Ref), (38 bytes).
    Removing hal_tim.o(.ARM.exidx.text.TIM_ClearOC1Ref), (8 bytes).
    Removing hal_tim.o(.text.TIM_ClearOC2Ref), (42 bytes).
    Removing hal_tim.o(.ARM.exidx.text.TIM_ClearOC2Ref), (8 bytes).
    Removing hal_tim.o(.text.TIM_ClearOC3Ref), (38 bytes).
    Removing hal_tim.o(.ARM.exidx.text.TIM_ClearOC3Ref), (8 bytes).
    Removing hal_tim.o(.text.TIM_ClearOC4Ref), (42 bytes).
    Removing hal_tim.o(.ARM.exidx.text.TIM_ClearOC4Ref), (8 bytes).
    Removing hal_tim.o(.text.TIM_OC1PolarityConfig), (38 bytes).
    Removing hal_tim.o(.ARM.exidx.text.TIM_OC1PolarityConfig), (8 bytes).
    Removing hal_tim.o(.text.TIM_OC1NPolarityConfig), (38 bytes).
    Removing hal_tim.o(.ARM.exidx.text.TIM_OC1NPolarityConfig), (8 bytes).
    Removing hal_tim.o(.text.TIM_OC2PolarityConfig), (40 bytes).
    Removing hal_tim.o(.ARM.exidx.text.TIM_OC2PolarityConfig), (8 bytes).
    Removing hal_tim.o(.text.TIM_OC2NPolarityConfig), (40 bytes).
    Removing hal_tim.o(.ARM.exidx.text.TIM_OC2NPolarityConfig), (8 bytes).
    Removing hal_tim.o(.text.TIM_OC3PolarityConfig), (42 bytes).
    Removing hal_tim.o(.ARM.exidx.text.TIM_OC3PolarityConfig), (8 bytes).
    Removing hal_tim.o(.text.TIM_OC3NPolarityConfig), (42 bytes).
    Removing hal_tim.o(.ARM.exidx.text.TIM_OC3NPolarityConfig), (8 bytes).
    Removing hal_tim.o(.text.TIM_OC4PolarityConfig), (42 bytes).
    Removing hal_tim.o(.ARM.exidx.text.TIM_OC4PolarityConfig), (8 bytes).
    Removing hal_tim.o(.ARM.exidx.text.TIM_CCxCmd), (8 bytes).
    Removing hal_tim.o(.text.TIM_CCxNCmd), (66 bytes).
    Removing hal_tim.o(.ARM.exidx.text.TIM_CCxNCmd), (8 bytes).
    Removing hal_tim.o(.text.TIM_SelectOCxM), (168 bytes).
    Removing hal_tim.o(.ARM.exidx.text.TIM_SelectOCxM), (8 bytes).
    Removing hal_tim.o(.text.TIM_UpdateDisableConfig), (52 bytes).
    Removing hal_tim.o(.ARM.exidx.text.TIM_UpdateDisableConfig), (8 bytes).
    Removing hal_tim.o(.text.TIM_UpdateRequestConfig), (38 bytes).
    Removing hal_tim.o(.ARM.exidx.text.TIM_UpdateRequestConfig), (8 bytes).
    Removing hal_tim.o(.text.TIM_SelectHallSensor), (52 bytes).
    Removing hal_tim.o(.ARM.exidx.text.TIM_SelectHallSensor), (8 bytes).
    Removing hal_tim.o(.text.TIM_SelectOnePulseMode), (38 bytes).
    Removing hal_tim.o(.ARM.exidx.text.TIM_SelectOnePulseMode), (8 bytes).
    Removing hal_tim.o(.text.TIM_SelectOutputTrigger), (38 bytes).
    Removing hal_tim.o(.ARM.exidx.text.TIM_SelectOutputTrigger), (8 bytes).
    Removing hal_tim.o(.ARM.exidx.text.TIM_SelectSlaveMode), (8 bytes).
    Removing hal_tim.o(.text.TIM_SelectMasterSlaveMode), (38 bytes).
    Removing hal_tim.o(.ARM.exidx.text.TIM_SelectMasterSlaveMode), (8 bytes).
    Removing hal_tim.o(.ARM.exidx.text.TIM_SetAutoreload), (8 bytes).
    Removing hal_tim.o(.text.TIM_SetClockDivision), (40 bytes).
    Removing hal_tim.o(.ARM.exidx.text.TIM_SetClockDivision), (8 bytes).
    Removing hal_tim.o(.text.TIM_SetCounter), (48 bytes).
    Removing hal_tim.o(.ARM.exidx.text.TIM_SetCounter), (8 bytes).
    Removing hal_tim.o(.text.TIM_SetCompare1), (48 bytes).
    Removing hal_tim.o(.ARM.exidx.text.TIM_SetCompare1), (8 bytes).
    Removing hal_tim.o(.text.TIM_SetCompare2), (48 bytes).
    Removing hal_tim.o(.ARM.exidx.text.TIM_SetCompare2), (8 bytes).
    Removing hal_tim.o(.text.TIM_SetCompare3), (48 bytes).
    Removing hal_tim.o(.ARM.exidx.text.TIM_SetCompare3), (8 bytes).
    Removing hal_tim.o(.text.TIM_SetCompare4), (48 bytes).
    Removing hal_tim.o(.ARM.exidx.text.TIM_SetCompare4), (8 bytes).
    Removing hal_tim.o(.ARM.exidx.text.TIM_GetCapture1), (8 bytes).
    Removing hal_tim.o(.ARM.exidx.text.TIM_GetCapture2), (8 bytes).
    Removing hal_tim.o(.text.TIM_GetCapture3), (16 bytes).
    Removing hal_tim.o(.ARM.exidx.text.TIM_GetCapture3), (8 bytes).
    Removing hal_tim.o(.ARM.exidx.text.TIM_GetCapture4), (8 bytes).
    Removing hal_tim.o(.ARM.exidx.text.TIM_GetCounter), (8 bytes).
    Removing hal_tim.o(.text.TIM_GetPrescaler), (18 bytes).
    Removing hal_tim.o(.ARM.exidx.text.TIM_GetPrescaler), (8 bytes).
    Removing hal_tim.o(.ARM.exidx.text.TIM_GetFlagStatus), (8 bytes).
    Removing hal_tim.o(.ARM.exidx.text.TIM_ClearFlag), (8 bytes).
    Removing hal_tim.o(.ARM.exidx.text.TIM_GetITStatus), (8 bytes).
    Removing hal_tim.o(.ARM.exidx.text.TIM_ClearITPendingBit), (8 bytes).
    Removing hal_tim.o(.text.TIM_SetIC1Plority), (38 bytes).
    Removing hal_tim.o(.ARM.exidx.text.TIM_SetIC1Plority), (8 bytes).
    Removing hal_tim.o(.text.TIM_SetIC2Plority), (40 bytes).
    Removing hal_tim.o(.ARM.exidx.text.TIM_SetIC2Plority), (8 bytes).
    Removing hal_tim.o(.text.TIM_SetIC3Plority), (42 bytes).
    Removing hal_tim.o(.ARM.exidx.text.TIM_SetIC3Plority), (8 bytes).
    Removing hal_tim.o(.text.TIM_SetIC4Plority), (42 bytes).
    Removing hal_tim.o(.ARM.exidx.text.TIM_SetIC4Plority), (8 bytes).
    Removing hal_tim.o(.text.TIM_SetCompare5), (26 bytes).
    Removing hal_tim.o(.ARM.exidx.text.TIM_SetCompare5), (8 bytes).
    Removing hal_tim.o(.text.TIM_GetCapture5), (16 bytes).
    Removing hal_tim.o(.ARM.exidx.text.TIM_GetCapture5), (8 bytes).
    Removing hal_tim.o(.text.TIM_OC5PreloadConfig), (38 bytes).
    Removing hal_tim.o(.ARM.exidx.text.TIM_OC5PreloadConfig), (8 bytes).
    Removing hal_tim.o(.text.TIM_DirectOutput), (56 bytes).
    Removing hal_tim.o(.ARM.exidx.text.TIM_DirectOutput), (8 bytes).
    Removing hal_tim.o(.text.TIM_PWMShiftConfig), (60 bytes).
    Removing hal_tim.o(.ARM.exidx.text.TIM_PWMShiftConfig), (8 bytes).
    Removing hal_tim.o(.text.TIM_SetCCR1FALL), (40 bytes).
    Removing hal_tim.o(.ARM.exidx.text.TIM_SetCCR1FALL), (8 bytes).
    Removing hal_tim.o(.text.TIM_SetCCR2FALL), (40 bytes).
    Removing hal_tim.o(.ARM.exidx.text.TIM_SetCCR2FALL), (8 bytes).
    Removing hal_tim.o(.text.TIM_SetCCR3FALL), (40 bytes).
    Removing hal_tim.o(.ARM.exidx.text.TIM_SetCCR3FALL), (8 bytes).
    Removing hal_tim.o(.text.TIM_SetCCR4FALL), (40 bytes).
    Removing hal_tim.o(.ARM.exidx.text.TIM_SetCCR4FALL), (8 bytes).
    Removing hal_tim.o(.text.TIM_SetCCR5FALL), (40 bytes).
    Removing hal_tim.o(.ARM.exidx.text.TIM_SetCCR5FALL), (8 bytes).
    Removing hal_tim.o(.text.TIM_BreakInputFilter_Cmd), (72 bytes).
    Removing hal_tim.o(.ARM.exidx.text.TIM_BreakInputFilter_Cmd), (8 bytes).
    Removing hal_tim.o(.text.TIM_BreakInputFilterConfigure), (56 bytes).
    Removing hal_tim.o(.ARM.exidx.text.TIM_BreakInputFilterConfigure), (8 bytes).
    Removing hal_uart.o(.text), (0 bytes).
    Removing hal_uart.o(.text.UART_DeInit), (64 bytes).
    Removing hal_uart.o(.ARM.exidx.text.UART_DeInit), (8 bytes).
    Removing hal_uart.o(.ARM.exidx.text.UART_Init), (8 bytes).
    Removing hal_uart.o(.ARM.exidx.text.UART_StructInit), (8 bytes).
    Removing hal_uart.o(.ARM.exidx.text.UART_Cmd), (8 bytes).
    Removing hal_uart.o(.ARM.exidx.text.UART_ITConfig), (8 bytes).
    Removing hal_uart.o(.text.UART_DMACmd), (48 bytes).
    Removing hal_uart.o(.ARM.exidx.text.UART_DMACmd), (8 bytes).
    Removing hal_uart.o(.ARM.exidx.text.UART_SendData), (8 bytes).
    Removing hal_uart.o(.ARM.exidx.text.UART_ReceiveData), (8 bytes).
    Removing hal_uart.o(.ARM.exidx.text.UART_GetFlagStatus), (8 bytes).
    Removing hal_uart.o(.ARM.exidx.text.UART_GetITStatus), (8 bytes).
    Removing hal_uart.o(.ARM.exidx.text.UART_ClearITPendingBit), (8 bytes).
    Removing hal_uart.o(.text.UART_WakeUpConfig), (40 bytes).
    Removing hal_uart.o(.ARM.exidx.text.UART_WakeUpConfig), (8 bytes).
    Removing hal_uart.o(.text.UART_ReceiverWakeUpCmd), (42 bytes).
    Removing hal_uart.o(.ARM.exidx.text.UART_ReceiverWakeUpCmd), (8 bytes).
    Removing hal_uart.o(.text.UART_SetRXAddress), (38 bytes).
    Removing hal_uart.o(.ARM.exidx.text.UART_SetRXAddress), (8 bytes).
    Removing hal_uart.o(.text.UART_SetRXMASK), (38 bytes).
    Removing hal_uart.o(.ARM.exidx.text.UART_SetRXMASK), (8 bytes).
    Removing hal_uart.o(.text.UART_Enable9bit), (42 bytes).
    Removing hal_uart.o(.ARM.exidx.text.UART_Enable9bit), (8 bytes).
    Removing hal_uart.o(.text.UART_Set9bitLevel), (42 bytes).
    Removing hal_uart.o(.ARM.exidx.text.UART_Set9bitLevel), (8 bytes).
    Removing hal_uart.o(.text.UART_Set9bitPolarity), (40 bytes).
    Removing hal_uart.o(.ARM.exidx.text.UART_Set9bitPolarity), (8 bytes).
    Removing hal_uart.o(.text.UART_Set9bitAutomaticToggle), (42 bytes).
    Removing hal_uart.o(.ARM.exidx.text.UART_Set9bitAutomaticToggle), (8 bytes).
    Removing hal_uart.o(.text.UART_HalfDuplexCmd), (42 bytes).
    Removing hal_uart.o(.ARM.exidx.text.UART_HalfDuplexCmd), (8 bytes).
    Removing hal_uart.o(.text.UART_SetGuardTime), (42 bytes).
    Removing hal_uart.o(.ARM.exidx.text.UART_SetGuardTime), (8 bytes).
    Removing hal_uart.o(.text.UART_SmartCardCmd), (38 bytes).
    Removing hal_uart.o(.ARM.exidx.text.UART_SmartCardCmd), (8 bytes).
    Removing hal_uart.o(.text.UART_SmartCardNACKCmd), (40 bytes).
    Removing hal_uart.o(.ARM.exidx.text.UART_SmartCardNACKCmd), (8 bytes).
    Removing hal_uart.o(.text.UART_SendBreak), (22 bytes).
    Removing hal_uart.o(.ARM.exidx.text.UART_SendBreak), (8 bytes).
    Removing hal_uart.o(.text.UART_AutoBaudRateCmd), (52 bytes).
    Removing hal_uart.o(.ARM.exidx.text.UART_AutoBaudRateCmd), (8 bytes).
    Removing hal_uart.o(.text.UART_AutoBaudRateSet), (366 bytes).
    Removing hal_uart.o(.ARM.exidx.text.UART_AutoBaudRateSet), (8 bytes).
    Removing hal_uart.o(.text.UART_SetTXToggle), (42 bytes).
    Removing hal_uart.o(.ARM.exidx.text.UART_SetTXToggle), (8 bytes).
    Removing hal_uart.o(.text.UART_SetRXToggle), (42 bytes).
    Removing hal_uart.o(.ARM.exidx.text.UART_SetRXToggle), (8 bytes).
    Removing hal_uart.o(.text.UART_SetTxRxSWAP), (42 bytes).
    Removing hal_uart.o(.ARM.exidx.text.UART_SetTxRxSWAP), (8 bytes).
    Removing hal_uart.o(.text.UART_SetTransmitEnable), (40 bytes).
    Removing hal_uart.o(.ARM.exidx.text.UART_SetTransmitEnable), (8 bytes).
    Removing hal_uart.o(.text.UART_SetRecevieEnable), (40 bytes).
    Removing hal_uart.o(.ARM.exidx.text.UART_SetRecevieEnable), (8 bytes).
    Removing hal_uart.o(.text.UART_SetLIN), (42 bytes).
    Removing hal_uart.o(.ARM.exidx.text.UART_SetLIN), (8 bytes).
    Removing hal_uid.o(.text), (0 bytes).
    Removing hal_uid.o(.text.GetChipUID), (60 bytes).
    Removing hal_uid.o(.ARM.exidx.text.GetChipUID), (8 bytes).
    Removing hal_uid.o(.bss.device_id_data), (12 bytes).
    Removing hal_ver.o(.text), (0 bytes).
    Removing hal_ver.o(.text.Get_MM32LibVersion), (6 bytes).
    Removing hal_ver.o(.ARM.exidx.text.Get_MM32LibVersion), (8 bytes).
    Removing hal_ver.o(.text.Get_MM32LibReleaseDate), (8 bytes).
    Removing hal_ver.o(.ARM.exidx.text.Get_MM32LibReleaseDate), (8 bytes).
    Removing hal_ver.o(.text.Get_ChipsetREVID), (16 bytes).
    Removing hal_ver.o(.ARM.exidx.text.Get_ChipsetREVID), (8 bytes).
    Removing hal_ver.o(.text.Get_ChipsetDEVID), (12 bytes).
    Removing hal_ver.o(.ARM.exidx.text.Get_ChipsetDEVID), (8 bytes).
    Removing hal_ver.o(.text.Get_ChipsetUIDw0), (12 bytes).
    Removing hal_ver.o(.ARM.exidx.text.Get_ChipsetUIDw0), (8 bytes).
    Removing hal_ver.o(.text.Get_ChipsetUIDw1), (12 bytes).
    Removing hal_ver.o(.ARM.exidx.text.Get_ChipsetUIDw1), (8 bytes).
    Removing hal_ver.o(.text.Get_ChipsetUIDw2), (12 bytes).
    Removing hal_ver.o(.ARM.exidx.text.Get_ChipsetUIDw2), (8 bytes).
    Removing hal_wwdg.o(.text), (0 bytes).
    Removing hal_wwdg.o(.ARM.exidx.text.WWDG_DeInit), (8 bytes).
    Removing hal_wwdg.o(.ARM.exidx.text.WWDG_SetPrescaler), (8 bytes).
    Removing hal_wwdg.o(.ARM.exidx.text.WWDG_SetWindowValue), (8 bytes).
    Removing hal_wwdg.o(.text.WWDG_EnableIT), (20 bytes).
    Removing hal_wwdg.o(.ARM.exidx.text.WWDG_EnableIT), (8 bytes).
    Removing hal_wwdg.o(.text.WWDG_SetCounter), (28 bytes).
    Removing hal_wwdg.o(.ARM.exidx.text.WWDG_SetCounter), (8 bytes).
    Removing hal_wwdg.o(.text.WWDG_GetCounter), (16 bytes).
    Removing hal_wwdg.o(.ARM.exidx.text.WWDG_GetCounter), (8 bytes).
    Removing hal_wwdg.o(.ARM.exidx.text.WWDG_Enable), (8 bytes).
    Removing hal_wwdg.o(.text.WWDG_GetFlagStatus), (32 bytes).
    Removing hal_wwdg.o(.ARM.exidx.text.WWDG_GetFlagStatus), (8 bytes).
    Removing hal_wwdg.o(.text.WWDG_ClearFlag), (16 bytes).
    Removing hal_wwdg.o(.ARM.exidx.text.WWDG_ClearFlag), (8 bytes).
    Removing startup_mm32spin0280_keil.o(HEAP), (512 bytes).
    Removing system_mm32spin0280.o(.text), (0 bytes).
    Removing system_mm32spin0280.o(.ARM.exidx.text.SystemInit), (8 bytes).
    Removing system_mm32spin0280.o(.ARM.exidx.text.SetSysClockToDefaultHSI), (8 bytes).
    Removing system_mm32spin0280.o(.ARM.exidx.text.SetSysClock), (8 bytes).
    Removing system_mm32spin0280.o(.ARM.exidx.text.AutoCalPllFactor), (8 bytes).
    Removing system_mm32spin0280.o(.ARM.exidx.text.SystemCoreClockUpdate), (8 bytes).
    Removing system_mm32spin0280.o(.ARM.exidx.text.SetSysClockWithHsiPLL), (8 bytes).
    Removing system_mm32spin0280.o(.ARM.exidx.text.delay_x_cycle), (8 bytes).
    Removing system_mm32spin0280.o(.rodata.AHBPrescTable), (16 bytes).
    Removing uart_classb.o(.text), (0 bytes).
    Removing uart_classb.o(.text.Uart_init), (168 bytes).
    Removing uart_classb.o(.ARM.exidx.text.Uart_init), (8 bytes).
    Removing uart_classb.o(.ARM.exidx.text.fputc), (8 bytes).
    Removing uart_classb.o(.ARM.exidx.text.CBUart_Init), (8 bytes).
    Removing iec60730_b_aux.o(.text), (0 bytes).
    Removing iec60730_b_aux.o(.ARM.exidx.text.FailSafePOR), (8 bytes).
    Removing iec60730_b_aux.o(.ARM.exidx.text.Iwdg_Init), (8 bytes).
    Removing iec60730_b_aux.o(.ARM.exidx.text.WWDG_Init), (8 bytes).
    Removing iec60730_b_aux.o(.ARM.exidx.text.IEC60730_B_WDGSelfTest), (8 bytes).
    Removing iec60730_b_aux.o(.ARM.exidx.text.__NVIC_SystemReset), (8 bytes).
    Removing iec60730_b_aux.o(.text.HAL_GetTick), (12 bytes).
    Removing iec60730_b_aux.o(.ARM.exidx.text.HAL_GetTick), (8 bytes).
    Removing iec60730_b_aux.o(.ARM.exidx.text.NMI_Handler), (8 bytes).
    Removing iec60730_b_aux.o(.ARM.exidx.text.SysTick_Handler), (8 bytes).
    Removing iec60730_b_clocktest.o(.text), (0 bytes).
    Removing iec60730_b_clocktest.o(.ARM.exidx.text.IEC60730_MainClockTest), (8 bytes).
    Removing iec60730_b_clocktest.o(.ARM.exidx.text.IEC60730_clockrun_valuecheck), (8 bytes).
    Removing iec60730_b_clocktest.o(.ARM.exidx.text.IEC60730_ClockStartUpTest), (8 bytes).
    Removing iec60730_b_clocktest.o(.ARM.exidx.text.IEC60730_InitClock_Xcross_Measurement), (8 bytes).
    Removing iec60730_b_clocktest.o(.text.TIM3_GPIO_Init), (58 bytes).
    Removing iec60730_b_clocktest.o(.ARM.exidx.text.TIM3_GPIO_Init), (8 bytes).
    Removing iec60730_b_clocktest.o(.text.TIM3_PWM_Input_Init), (184 bytes).
    Removing iec60730_b_clocktest.o(.ARM.exidx.text.TIM3_PWM_Input_Init), (8 bytes).
    Removing iec60730_b_clocktest.o(.ARM.exidx.text.Tim2_Init), (8 bytes).
    Removing iec60730_b_clocktest.o(.ARM.exidx.text.TIM2_IRQHandler), (8 bytes).
    Removing iec60730_b_clocktest.o(.text.IEC60730_HSE_LSIcheck), (116 bytes).
    Removing iec60730_b_clocktest.o(.ARM.exidx.text.IEC60730_HSE_LSIcheck), (8 bytes).
    Removing iec60730_b_clocktest.o(.text.IEC60730_HSI_LSIcheck), (116 bytes).
    Removing iec60730_b_clocktest.o(.ARM.exidx.text.IEC60730_HSI_LSIcheck), (8 bytes).
    Removing iec60730_b_clocktest.o(.bss.period), (2 bytes).
    Removing iec60730_b_clocktest.o(.bss.duty), (2 bytes).
    Removing iec60730_b_runtimetest.o(.text), (0 bytes).
    Removing iec60730_b_runtimetest.o(.ARM.exidx.text.IEC60730_InitRunTimeChecks), (8 bytes).
    Removing iec60730_b_runtimetest.o(.ARM.exidx.text.SysTick_Config), (8 bytes).
    Removing iec60730_b_runtimetest.o(.ARM.exidx.text.IEC60730_B_CpuRunTime_test), (8 bytes).
    Removing iec60730_b_runtimetest.o(.ARM.exidx.text.IEC60730_Stack_Check), (8 bytes).
    Removing iec60730_b_runtimetest.o(.ARM.exidx.text.IEC60730_CheckStack), (8 bytes).
    Removing iec60730_b_runtimetest.o(.ARM.exidx.text.IEC60730_ClockTest_RunTime), (8 bytes).
    Removing iec60730_b_runtimetest.o(.ARM.exidx.text.IEC60730_DoRunTimeChecks), (8 bytes).
    Removing iec60730_b_runtimetest.o(.ARM.exidx.text.IEC60730_B_FlashRunTime_test), (8 bytes).
    Removing iec60730_b_runtimetest.o(.ARM.exidx.text.__NVIC_SetPriority), (8 bytes).
    Removing iec60730_b_startup.o(.text), (0 bytes).
    Removing iec60730_b_startup.o(.ARM.exidx.text.Flashtest_config), (8 bytes).
    Removing iec60730_b_startup.o(.ARM.exidx.text.Ramtest_config), (8 bytes).
    Removing iec60730_b_startup.o(.ARM.exidx.text.IEC60730_B_FullCpu_test), (8 bytes).
    Removing iec60730_b_startup.o(.ARM.exidx.text.IEC60730_ClockTest_Startup), (8 bytes).
    Removing iec60730_b_startup.o(.ARM.exidx.text.$Sub$$main), (8 bytes).
    Removing iec60730_b_startup.o(.ARM.exidx.text.IEC60730_B_startup), (8 bytes).
    Removing iec60730_b_startup.o(.ARM.exidx.text.control_flow_check_point), (8 bytes).
    Removing iec60730_b_startup.o(.ARM.exidx.text.IEC60730_B_CRC_StoreclassBData), (8 bytes).
    Removing iec60730_b_startup.o(.bss.App_CODE_SIZE), (4 bytes).
    Removing iec60730_b_flashtest.o(.text), (0 bytes).
    Removing iec60730_b_flashtest.o(.ARM.exidx.text.IEC60730_FlashCrc32Init), (8 bytes).
    Removing iec60730_b_flashtest.o(.ARM.exidx.text.IEC60730_B_FullFlash_test), (8 bytes).
    Removing iec60730_b_flashtest.o(.ARM.exidx.text.IEC60730_crc32Run), (8 bytes).
    Removing iec60730_b_transpram.o(.text), (0 bytes).
    Removing iec60730_b_transpram.o(.ARM.exidx.text.IEC60730_B_TranspMarchInit), (8 bytes).
    Removing iec60730_b_transpram.o(.ARM.exidx.text.IEC60730_B_TranspMarch), (8 bytes).
    Removing iec60730_b_transpram.o(.text.IEC60730_B_StartupMarch), (184 bytes).
    Removing iec60730_b_transpram.o(.ARM.exidx.text.IEC60730_B_StartupMarch), (8 bytes).
    Removing iec60730_b_transpram.o(.text.IEC60730_B_StartupMarch_VA5), (188 bytes).
    Removing iec60730_b_transpram.o(.ARM.exidx.text.IEC60730_B_StartupMarch_VA5), (8 bytes).
    Removing f2d.o(.text), (40 bytes).

1435 unused section(s) (total 39331 bytes) removed from the image.

==============================================================================

Image Symbol Table

    Local Symbols

    Symbol Name                              Value     Ov Type        Size  Object(Section)

    ../clib/../cmprslib/zerorunl.c           0x00000000   Number         0  __dczerorl.o ABSOLUTE
    ../clib/microlib/division.c              0x00000000   Number         0  idiv.o ABSOLUTE
    ../clib/microlib/division.c              0x00000000   Number         0  uidiv.o ABSOLUTE
    ../clib/microlib/division.c              0x00000000   Number         0  uldiv.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry2.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry7a.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry9a.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry8a.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry7b.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry8b.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry10b.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry11a.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry11b.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry5.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry10a.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry9b.o ABSOLUTE
    ../clib/microlib/longlong.c              0x00000000   Number         0  llsshr.o ABSOLUTE
    ../clib/microlib/longlong.c              0x00000000   Number         0  llushr.o ABSOLUTE
    ../clib/microlib/longlong.c              0x00000000   Number         0  llshl.o ABSOLUTE
    ../clib/microlib/printf/printf.c         0x00000000   Number         0  printfa.o ABSOLUTE
    ../clib/microlib/stdio/streams.c         0x00000000   Number         0  stdout.o ABSOLUTE
    ../clib/microlib/stdlib/abs.c            0x00000000   Number         0  siabs.o ABSOLUTE
    ../clib/microlib/stdlib/abs.c            0x00000000   Number         0  ilabs.o ABSOLUTE
    ../clib/microlib/string/memcpy.c         0x00000000   Number         0  memcpya.o ABSOLUTE
    ../clib/microlib/string/memcpy.c         0x00000000   Number         0  memcpyb.o ABSOLUTE
    ../clib/microlib/stubs.s                 0x00000000   Number         0  iusefp.o ABSOLUTE
    ../fplib/microlib/f2d.c                  0x00000000   Number         0  f2d.o ABSOLUTE
    ../fplib/microlib/fpadd.c                0x00000000   Number         0  dadd.o ABSOLUTE
    ../fplib/microlib/fpcmp.c                0x00000000   Number         0  dcmple.o ABSOLUTE
    ../fplib/microlib/fpcmp.c                0x00000000   Number         0  dcmpge.o ABSOLUTE
    ../fplib/microlib/fpcmp.c                0x00000000   Number         0  dcmplt.o ABSOLUTE
    ../fplib/microlib/fpdiv.c                0x00000000   Number         0  ddiv.o ABSOLUTE
    ../fplib/microlib/fpdiv.c                0x00000000   Number         0  fdiv.o ABSOLUTE
    ../fplib/microlib/fpepilogue.c           0x00000000   Number         0  depilogue.o ABSOLUTE
    ../fplib/microlib/fpepilogue.c           0x00000000   Number         0  fepilogue.o ABSOLUTE
    ../fplib/microlib/fpfix.c                0x00000000   Number         0  dfixul.o ABSOLUTE
    ../fplib/microlib/fpfix.c                0x00000000   Number         0  ffixui.o ABSOLUTE
    ../fplib/microlib/fpfix.c                0x00000000   Number         0  dfixi.o ABSOLUTE
    ../fplib/microlib/fpflt.c                0x00000000   Number         0  dflti.o ABSOLUTE
    ../fplib/microlib/fpflt.c                0x00000000   Number         0  ffltui.o ABSOLUTE
    ../fplib/microlib/fpmul.c                0x00000000   Number         0  fmul.o ABSOLUTE
    ../fplib/microlib/fpmul.c                0x00000000   Number         0  dmul.o ABSOLUTE
    ..\ClassBTest\KEIL\IEC60730_B_RamTestKEIL.s 0x00000000   Number         0  iec60730_b_ramtestkeil.o ABSOLUTE
    ..\ClassBTest\KEIL\IEC60730_B_cpurunKEIL.s 0x00000000   Number         0  iec60730_b_cpurunkeil.o ABSOLUTE
    ..\ClassBTest\KEIL\IEC60730_B_cpustartKEIL.s 0x00000000   Number         0  iec60730_b_cpustartkeil.o ABSOLUTE
    ..\Device\MM32SPIN0280\Source\KEIL_StartAsm\startup_mm32spin0280_keil.s 0x00000000   Number         0  startup_mm32spin0280_keil.o ABSOLUTE
    ..\USER\mcflib.c                         0x00000000   Number         0  mcflib.o ABSOLUTE
    ..\USER\mlib.c                           0x00000000   Number         0  mlib.o ABSOLUTE
    Common.c                                 0x00000000   Number         0  common_1.o ABSOLUTE
    Current.c                                0x00000000   Number         0  current.o ABSOLUTE
    FOC_PMSM.c                               0x00000000   Number         0  foc_pmsm.o ABSOLUTE
    Filter.c                                 0x00000000   Number         0  filter.o ABSOLUTE
    IEC60730_B_aux.c                         0x00000000   Number         0  iec60730_b_aux.o ABSOLUTE
    IEC60730_B_clocktest.c                   0x00000000   Number         0  iec60730_b_clocktest.o ABSOLUTE
    IEC60730_B_flashtest.c                   0x00000000   Number         0  iec60730_b_flashtest.o ABSOLUTE
    IEC60730_B_runtimetest.c                 0x00000000   Number         0  iec60730_b_runtimetest.o ABSOLUTE
    IEC60730_B_startup.c                     0x00000000   Number         0  iec60730_b_startup.o ABSOLUTE
    IEC60730_B_transpRam.c                   0x00000000   Number         0  iec60730_b_transpram.o ABSOLUTE
    Math.c                                   0x00000000   Number         0  math.o ABSOLUTE
    Modbus.c                                 0x00000000   Number         0  modbus.o ABSOLUTE
    ModbusCRC.c                              0x00000000   Number         0  modbuscrc.o ABSOLUTE
    Ramp.c                                   0x00000000   Number         0  ramp.o ABSOLUTE
    SpeedControl.c                           0x00000000   Number         0  speedcontrol.o ABSOLUTE
    SpeedMonitor.c                           0x00000000   Number         0  speedmonitor.o ABSOLUTE
    StateMachine.c                           0x00000000   Number         0  statemachine.o ABSOLUTE
    TimeSlice.c                              0x00000000   Number         0  timeslice.o ABSOLUTE
    Transfer.c                               0x00000000   Number         0  transfer.o ABSOLUTE
    Voltage.c                                0x00000000   Number         0  voltage.o ABSOLUTE
    WindDetection.c                          0x00000000   Number         0  winddetection.o ABSOLUTE
    board.c                                  0x00000000   Number         0  board.o ABSOLUTE
    cdrcmple.s                               0x00000000   Number         0  cdrcmple.o ABSOLUTE
    dc.s                                     0x00000000   Number         0  dc.o ABSOLUTE
    delay.c                                  0x00000000   Number         0  delay.o ABSOLUTE
    drv_Capture.c                            0x00000000   Number         0  drv_capture.o ABSOLUTE
    drv_Counter.c                            0x00000000   Number         0  drv_counter.o ABSOLUTE
    drv_Output.c                             0x00000000   Number         0  drv_output.o ABSOLUTE
    drv_adc.c                                0x00000000   Number         0  drv_adc.o ABSOLUTE
    drv_comp.c                               0x00000000   Number         0  drv_comp.o ABSOLUTE
    drv_div.c                                0x00000000   Number         0  drv_div.o ABSOLUTE
    drv_dma.c                                0x00000000   Number         0  drv_dma.o ABSOLUTE
    drv_iic.c                                0x00000000   Number         0  drv_iic.o ABSOLUTE
    drv_iwdg.c                               0x00000000   Number         0  drv_iwdg.o ABSOLUTE
    drv_led.c                                0x00000000   Number         0  drv_led.o ABSOLUTE
    drv_opamp.c                              0x00000000   Number         0  drv_opamp.o ABSOLUTE
    drv_pwm.c                                0x00000000   Number         0  drv_pwm.o ABSOLUTE
    drv_sci.c                                0x00000000   Number         0  drv_sci.o ABSOLUTE
    drv_sqrt.c                               0x00000000   Number         0  drv_sqrt.o ABSOLUTE
    fsClock.c                                0x00000000   Number         0  fsclock.o ABSOLUTE
    fsCommon.c                               0x00000000   Number         0  fscommon.o ABSOLUTE
    fsHandle.c                               0x00000000   Number         0  fshandle.o ABSOLUTE
    fsMCU.c                                  0x00000000   Number         0  fsmcu.o ABSOLUTE
    fsPhaseLoss.c                            0x00000000   Number         0  fsphaseloss.o ABSOLUTE
    fsRotorLock.c                            0x00000000   Number         0  fsrotorlock.o ABSOLUTE
    hal_adc.c                                0x00000000   Number         0  hal_adc.o ABSOLUTE
    hal_bkp.c                                0x00000000   Number         0  hal_bkp.o ABSOLUTE
    hal_comp.c                               0x00000000   Number         0  hal_comp.o ABSOLUTE
    hal_crc.c                                0x00000000   Number         0  hal_crc.o ABSOLUTE
    hal_csm.c                                0x00000000   Number         0  hal_csm.o ABSOLUTE
    hal_dac.c                                0x00000000   Number         0  hal_dac.o ABSOLUTE
    hal_dbg.c                                0x00000000   Number         0  hal_dbg.o ABSOLUTE
    hal_div.c                                0x00000000   Number         0  hal_div.o ABSOLUTE
    hal_dma.c                                0x00000000   Number         0  hal_dma.o ABSOLUTE
    hal_exti.c                               0x00000000   Number         0  hal_exti.o ABSOLUTE
    hal_flash.c                              0x00000000   Number         0  hal_flash.o ABSOLUTE
    hal_gpio.c                               0x00000000   Number         0  hal_gpio.o ABSOLUTE
    hal_i2c.c                                0x00000000   Number         0  hal_i2c.o ABSOLUTE
    hal_iwdg.c                               0x00000000   Number         0  hal_iwdg.o ABSOLUTE
    hal_misc.c                               0x00000000   Number         0  hal_misc.o ABSOLUTE
    hal_opamp.c                              0x00000000   Number         0  hal_opamp.o ABSOLUTE
    hal_pwr.c                                0x00000000   Number         0  hal_pwr.o ABSOLUTE
    hal_rcc.c                                0x00000000   Number         0  hal_rcc.o ABSOLUTE
    hal_spi.c                                0x00000000   Number         0  hal_spi.o ABSOLUTE
    hal_sqrt.c                               0x00000000   Number         0  hal_sqrt.o ABSOLUTE
    hal_tim.c                                0x00000000   Number         0  hal_tim.o ABSOLUTE
    hal_uart.c                               0x00000000   Number         0  hal_uart.o ABSOLUTE
    hal_uid.c                                0x00000000   Number         0  hal_uid.o ABSOLUTE
    hal_ver.c                                0x00000000   Number         0  hal_ver.o ABSOLUTE
    hal_wwdg.c                               0x00000000   Number         0  hal_wwdg.o ABSOLUTE
    handlers.s                               0x00000000   Number         0  handlers.o ABSOLUTE
    init.s                                   0x00000000   Number         0  init.o ABSOLUTE
    main.c                                   0x00000000   Number         0  main.o ABSOLUTE
    mm32_it.c                                0x00000000   Number         0  mm32_it.o ABSOLUTE
    sys.c                                    0x00000000   Number         0  sys.o ABSOLUTE
    system_mm32spin0280.c                    0x00000000   Number         0  system_mm32spin0280.o ABSOLUTE
    uart_classb.c                            0x00000000   Number         0  uart_classb.o ABSOLUTE
    user_function.c                          0x00000000   Number         0  user_function.o ABSOLUTE
    RESET                                    0x08000000   Section      192  startup_mm32spin0280_keil.o(RESET)
    .ARM.Collect$$$$00000000                 0x080000c0   Section        0  entry.o(.ARM.Collect$$$$00000000)
    .ARM.Collect$$$$00000001                 0x080000c0   Section        4  entry2.o(.ARM.Collect$$$$00000001)
    .ARM.Collect$$$$00000004                 0x080000c4   Section        4  entry5.o(.ARM.Collect$$$$00000004)
    .ARM.Collect$$$$00000008                 0x080000c8   Section        0  entry7b.o(.ARM.Collect$$$$00000008)
    .ARM.Collect$$$$0000000A                 0x080000c8   Section        0  entry8b.o(.ARM.Collect$$$$0000000A)
    .ARM.Collect$$$$0000000B                 0x080000c8   Section        8  entry9a.o(.ARM.Collect$$$$0000000B)
    .ARM.Collect$$$$0000000D                 0x080000d0   Section        0  entry10a.o(.ARM.Collect$$$$0000000D)
    .ARM.Collect$$$$0000000F                 0x080000d0   Section        0  entry11a.o(.ARM.Collect$$$$0000000F)
    .ARM.Collect$$$$00002712                 0x080000d0   Section        4  entry2.o(.ARM.Collect$$$$00002712)
    __lit__00000000                          0x080000d0   Data           4  entry2.o(.ARM.Collect$$$$00002712)
    .text                                    0x080000d4   Section       40  startup_mm32spin0280_keil.o(.text)
    .text                                    0x080000fc   Section        0  mcflib.o(.text)
    .text                                    0x080002b0   Section        0  mlib.o(.text)
    MLIB_AddSat_Q31                          0x08000621   Thumb Code    32  mlib.o(.text)
    MLIB_ShLBi_Q31                           0x08000641   Thumb Code    14  mlib.o(.text)
    .text                                    0x0800065c   Section      388  iec60730_b_cpurunkeil.o(.text)
    CPUTstCont                               0x08000721   Thumb Code     0  iec60730_b_cpurunkeil.o(.text)
    .text                                    0x080007e0   Section      528  iec60730_b_cpustartkeil.o(.text)
    con80                                    0x080007e8   Data           4  iec60730_b_cpustartkeil.o(.text)
    conA8                                    0x080007ec   Data           4  iec60730_b_cpustartkeil.o(.text)
    con54                                    0x080007f0   Data           4  iec60730_b_cpustartkeil.o(.text)
    CPUTstCont                               0x080008d7   Thumb Code     0  iec60730_b_cpustartkeil.o(.text)
    .text                                    0x080009f0   Section      804  iec60730_b_ramtestkeil.o(.text)
    __STANDARD_RAM_ORDER                     0x080009f0   Data           0  iec60730_b_ramtestkeil.o(.text)
    .text                                    0x08000d14   Section        0  uidiv.o(.text)
    .text                                    0x08000d40   Section        0  idiv.o(.text)
    .text                                    0x08000d68   Section        0  siabs.o(.text)
    .text                                    0x08000d70   Section        0  fmul.o(.text)
    .text                                    0x08000dea   Section        0  fdiv.o(.text)
    .text                                    0x08000e68   Section        0  dadd.o(.text)
    .text                                    0x08000fcc   Section        0  dmul.o(.text)
    .text                                    0x0800109c   Section        0  ddiv.o(.text)
    .text                                    0x0800118c   Section        0  dcmple.o(.text)
    .text                                    0x080011b8   Section        0  dcmplt.o(.text)
    .text                                    0x080011e4   Section        0  dcmpge.o(.text)
    .text                                    0x08001210   Section        0  ffltui.o(.text)
    .text                                    0x08001220   Section        0  dflti.o(.text)
    .text                                    0x08001248   Section        0  ffixui.o(.text)
    .text                                    0x08001270   Section        0  dfixi.o(.text)
    .text                                    0x080012b8   Section        0  uldiv.o(.text)
    .text                                    0x08001318   Section        0  llshl.o(.text)
    .text                                    0x08001338   Section        0  llushr.o(.text)
    .text                                    0x0800135a   Section        0  llsshr.o(.text)
    .text                                    0x08001380   Section        0  iusefp.o(.text)
    .text                                    0x08001380   Section        0  fepilogue.o(.text)
    .text                                    0x08001402   Section        0  depilogue.o(.text)
    .text                                    0x080014c0   Section        0  dfixul.o(.text)
    .text                                    0x08001500   Section       40  cdrcmple.o(.text)
    .text                                    0x08001528   Section       36  init.o(.text)
    .text                                    0x0800154c   Section        0  __dczerorl.o(.text)
    [Anonymous Symbol]                       0x08001588   Section        0  iec60730_b_startup.o(.text.$Sub$$main)
    __arm_cp.4_0                             0x080015ac   Number         4  iec60730_b_startup.o(.text.$Sub$$main)
    [Anonymous Symbol]                       0x080015b0   Section        0  mm32_it.o(.text.ADC1_IRQHandler)
    [Anonymous Symbol]                       0x080015b4   Section        0  mm32_it.o(.text.ADC2_IRQHandler)
    __arm_cp.22_0                            0x08001718   Number         4  mm32_it.o(.text.ADC2_IRQHandler)
    __arm_cp.22_1                            0x0800171c   Number         4  mm32_it.o(.text.ADC2_IRQHandler)
    __arm_cp.22_2                            0x08001720   Number         4  mm32_it.o(.text.ADC2_IRQHandler)
    __arm_cp.22_3                            0x08001724   Number         4  mm32_it.o(.text.ADC2_IRQHandler)
    __arm_cp.22_4                            0x08001728   Number         4  mm32_it.o(.text.ADC2_IRQHandler)
    __arm_cp.22_5                            0x0800172c   Number         4  mm32_it.o(.text.ADC2_IRQHandler)
    __arm_cp.22_6                            0x08001730   Number         4  mm32_it.o(.text.ADC2_IRQHandler)
    __arm_cp.22_7                            0x08001734   Number         4  mm32_it.o(.text.ADC2_IRQHandler)
    __arm_cp.22_8                            0x08001738   Number         4  mm32_it.o(.text.ADC2_IRQHandler)
    __arm_cp.22_9                            0x0800173c   Number         4  mm32_it.o(.text.ADC2_IRQHandler)
    __arm_cp.22_10                           0x08001740   Number         4  mm32_it.o(.text.ADC2_IRQHandler)
    __arm_cp.22_11                           0x08001744   Number         4  mm32_it.o(.text.ADC2_IRQHandler)
    __arm_cp.22_12                           0x08001748   Number         4  mm32_it.o(.text.ADC2_IRQHandler)
    __arm_cp.22_13                           0x0800174c   Number         4  mm32_it.o(.text.ADC2_IRQHandler)
    __arm_cp.22_14                           0x08001750   Number         4  mm32_it.o(.text.ADC2_IRQHandler)
    __arm_cp.22_15                           0x08001754   Number         4  mm32_it.o(.text.ADC2_IRQHandler)
    [Anonymous Symbol]                       0x08001758   Section        0  hal_adc.o(.text.ADC_ANY_CH_Config)
    [Anonymous Symbol]                       0x080017d6   Section        0  hal_adc.o(.text.ADC_ANY_Cmd)
    [Anonymous Symbol]                       0x0800180a   Section        0  hal_adc.o(.text.ADC_ANY_NUM_Config)
    [Anonymous Symbol]                       0x08001836   Section        0  hal_adc.o(.text.ADC_Calibration)
    [Anonymous Symbol]                       0x0800186a   Section        0  hal_adc.o(.text.ADC_ClearITPendingBit)
    [Anonymous Symbol]                       0x0800189e   Section        0  hal_adc.o(.text.ADC_Cmd)
    [Anonymous Symbol]                       0x080018d2   Section        0  hal_adc.o(.text.ADC_ExternalTrigConvCmd)
    [Anonymous Symbol]                       0x08001906   Section        0  hal_adc.o(.text.ADC_ITConfig)
    [Anonymous Symbol]                       0x08001974   Section        0  hal_adc.o(.text.ADC_Init)
    __arm_cp.1_0                             0x080019c0   Number         4  hal_adc.o(.text.ADC_Init)
    __arm_cp.1_1                             0x080019c4   Number         4  hal_adc.o(.text.ADC_Init)
    [Anonymous Symbol]                       0x080019c8   Section        0  hal_adc.o(.text.ADC_RegularChannelConfig)
    [Anonymous Symbol]                       0x08001a9e   Section        0  hal_adc.o(.text.ADC_StructInit)
    [Anonymous Symbol]                       0x08001ac4   Section        0  hal_adc.o(.text.ADC_TempSensorVrefintCmd)
    __arm_cp.9_0                             0x08001af4   Number         4  hal_adc.o(.text.ADC_TempSensorVrefintCmd)
    [Anonymous Symbol]                       0x08001af8   Section        0  system_mm32spin0280.o(.text.AutoCalPllFactor)
    [Anonymous Symbol]                       0x08001bc4   Section        0  board.o(.text.BSP_vDirectionDetect_Init)
    __arm_cp.12_0                            0x08001bfc   Number         4  board.o(.text.BSP_vDirectionDetect_Init)
    [Anonymous Symbol]                       0x08001c00   Section        0  board.o(.text.BSP_vUARTInit)
    [Anonymous Symbol]                       0x08001c48   Section        0  board.o(.text.Board_ADC_Init)
    __arm_cp.14_0                            0x08001d08   Number         4  board.o(.text.Board_ADC_Init)
    __arm_cp.14_1                            0x08001d0c   Number         4  board.o(.text.Board_ADC_Init)
    [Anonymous Symbol]                       0x08001d10   Section        0  board.o(.text.Board_Comp_Init)
    [Anonymous Symbol]                       0x08001d34   Section        0  board.o(.text.Bsp_Adc_Init)
    [Anonymous Symbol]                       0x08001db8   Section        0  board.o(.text.Bsp_Capture_Init)
    __arm_cp.10_0                            0x08001df4   Number         4  board.o(.text.Bsp_Capture_Init)
    [Anonymous Symbol]                       0x08001df8   Section        0  board.o(.text.Bsp_Comp_Init)
    [Anonymous Symbol]                       0x08001e30   Section        0  board.o(.text.Bsp_Gpio_Init)
    [Anonymous Symbol]                       0x08001e58   Section        0  board.o(.text.Bsp_Led_Init)
    [Anonymous Symbol]                       0x08001e90   Section        0  board.o(.text.Bsp_Op_Init)
    [Anonymous Symbol]                       0x08001f00   Section        0  board.o(.text.Bsp_PWM_Output_Init)
    [Anonymous Symbol]                       0x08001f44   Section        0  board.o(.text.Bsp_Pwm_Init)
    __arm_cp.4_0                             0x08002008   Number         4  board.o(.text.Bsp_Pwm_Init)
    [Anonymous Symbol]                       0x0800200c   Section        0  uart_classb.o(.text.CBUart_Init)
    __arm_cp.2_0                             0x080020ac   Number         4  uart_classb.o(.text.CBUart_Init)
    [Anonymous Symbol]                       0x080020b0   Section        0  mm32_it.o(.text.COMP1_2_3_4_5_IRQHandler)
    [Anonymous Symbol]                       0x080020b4   Section        0  hal_comp.o(.text.COMP_Cmd)
    [Anonymous Symbol]                       0x080020f4   Section        0  hal_comp.o(.text.COMP_DeInit)
    [Anonymous Symbol]                       0x0800210c   Section        0  hal_comp.o(.text.COMP_Init)
    __arm_cp.1_0                             0x08002148   Number         4  hal_comp.o(.text.COMP_Init)
    [Anonymous Symbol]                       0x0800214c   Section        0  hal_comp.o(.text.COMP_SetCrv)
    __arm_cp.4_0                             0x0800218c   Number         4  hal_comp.o(.text.COMP_SetCrv)
    [Anonymous Symbol]                       0x08002190   Section        0  hal_crc.o(.text.CRC_CalcBlockCRC)
    __arm_cp.2_0                             0x080021cc   Number         4  hal_crc.o(.text.CRC_CalcBlockCRC)
    [Anonymous Symbol]                       0x080021d0   Section        0  hal_crc.o(.text.CRC_ResetDR)
    __arm_cp.0_0                             0x080021d8   Number         4  hal_crc.o(.text.CRC_ResetDR)
    [Anonymous Symbol]                       0x080021dc   Section        0  current.o(.text.CUR_tGetPhaseCurrentCalPointer)
    [Anonymous Symbol]                       0x080021e0   Section        0  current.o(.text.CUR_updatePhaseCurrentBuffer)
    __arm_cp.15_2                            0x08002384   Number         4  current.o(.text.CUR_updatePhaseCurrentBuffer)
    __arm_cp.15_3                            0x08002388   Number         4  current.o(.text.CUR_updatePhaseCurrentBuffer)
    __arm_cp.15_4                            0x0800238c   Number         4  current.o(.text.CUR_updatePhaseCurrentBuffer)
    __arm_cp.15_5                            0x08002390   Number         4  current.o(.text.CUR_updatePhaseCurrentBuffer)
    __arm_cp.15_6                            0x08002394   Number         4  current.o(.text.CUR_updatePhaseCurrentBuffer)
    __arm_cp.15_7                            0x08002398   Number         4  current.o(.text.CUR_updatePhaseCurrentBuffer)
    [Anonymous Symbol]                       0x0800239c   Section        0  current.o(.text.CUR_vGetPhaseCurrentBufferSamples)
    __arm_cp.16_0                            0x08002400   Number         4  current.o(.text.CUR_vGetPhaseCurrentBufferSamples)
    [Anonymous Symbol]                       0x08002404   Section        0  current.o(.text.CUR_vGetThreePhaseCur)
    __arm_cp.7_0                             0x0800242c   Number         4  current.o(.text.CUR_vGetThreePhaseCur)
    [Anonymous Symbol]                       0x08002430   Section        0  current.o(.text.CUR_vSetOffsetMeasState)
    __arm_cp.8_0                             0x08002444   Number         4  current.o(.text.CUR_vSetOffsetMeasState)
    [Anonymous Symbol]                       0x08002448   Section        0  mm32_it.o(.text.DMA1_Channel1_IRQHandler)
    [Anonymous Symbol]                       0x0800244a   Section        0  mm32_it.o(.text.DMA1_Channel2_3_IRQHandler)
    [Anonymous Symbol]                       0x0800244c   Section        0  mm32_it.o(.text.DMA1_Channel4_5_IRQHandler)
    [Anonymous Symbol]                       0x08002450   Section        0  foc_pmsm.o(.text.DcBus_Ripple_suppress)
    __arm_cp.0_0                             0x08002520   Number         4  foc_pmsm.o(.text.DcBus_Ripple_suppress)
    __arm_cp.0_1                             0x08002524   Number         4  foc_pmsm.o(.text.DcBus_Ripple_suppress)
    __arm_cp.0_2                             0x08002528   Number         4  foc_pmsm.o(.text.DcBus_Ripple_suppress)
    __arm_cp.0_3                             0x0800252c   Number         4  foc_pmsm.o(.text.DcBus_Ripple_suppress)
    [Anonymous Symbol]                       0x08002530   Section        0  drv_div.o(.text.Division)
    __arm_cp.2_0                             0x08002574   Number         4  drv_div.o(.text.Division)
    __arm_cp.2_1                             0x08002578   Number         4  drv_div.o(.text.Division)
    __arm_cp.2_2                             0x0800257c   Number         4  drv_div.o(.text.Division)
    [Anonymous Symbol]                       0x08002580   Section        0  drv_adc.o(.text.Drv_Adc_Basic_Init)
    __arm_cp.0_0                             0x0800260c   Number         4  drv_adc.o(.text.Drv_Adc_Basic_Init)
    __arm_cp.0_1                             0x08002610   Number         4  drv_adc.o(.text.Drv_Adc_Basic_Init)
    [Anonymous Symbol]                       0x08002614   Section        0  drv_adc.o(.text.Drv_Adc_Channel_Init)
    [Anonymous Symbol]                       0x0800269e   Section        0  drv_comp.o(.text.Drv_Comp_Init)
    [Anonymous Symbol]                       0x0800271e   Section        0  drv_div.o(.text.Drv_Hwdiv_Init)
    [Anonymous Symbol]                       0x08002738   Section        0  drv_iwdg.o(.text.Drv_Iwdg_Init)
    __arm_cp.0_0                             0x08002780   Number         4  drv_iwdg.o(.text.Drv_Iwdg_Init)
    [Anonymous Symbol]                       0x08002784   Section        0  drv_opamp.o(.text.Drv_Opamp_Init)
    [Anonymous Symbol]                       0x080027ac   Section        0  drv_pwm.o(.text.Drv_Pwm_Init)
    __arm_cp.0_0                             0x080028cc   Number         4  drv_pwm.o(.text.Drv_Pwm_Init)
    __arm_cp.0_1                             0x080028d0   Number         4  drv_pwm.o(.text.Drv_Pwm_Init)
    [Anonymous Symbol]                       0x080028d4   Section        0  drv_sqrt.o(.text.Drv_Sqrt_Init)
    [Anonymous Symbol]                       0x080028ec   Section        0  drv_counter.o(.text.Drv_Tim16_Counter_Init)
    [Anonymous Symbol]                       0x08002958   Section        0  drv_output.o(.text.Drv_Tim17_PWM_Out_Init)
    [Anonymous Symbol]                       0x080029f8   Section        0  drv_capture.o(.text.Drv_Tim3_Pwm_In_Init)
    __arm_cp.0_0                             0x08002abc   Number         4  drv_capture.o(.text.Drv_Tim3_Pwm_In_Init)
    [Anonymous Symbol]                       0x08002ac0   Section        0  drv_counter.o(.text.Drv_u32GetTim16CountVal)
    __arm_cp.2_0                             0x08002acc   Number         4  drv_counter.o(.text.Drv_u32GetTim16CountVal)
    [Anonymous Symbol]                       0x08002ad0   Section        0  drv_capture.o(.text.Drv_vCaptureInit)
    __arm_cp.1_0                             0x08002adc   Number         4  drv_capture.o(.text.Drv_vCaptureInit)
    [Anonymous Symbol]                       0x08002ae0   Section        0  drv_output.o(.text.Drv_vPwmOutputInit)
    __arm_cp.1_0                             0x08002b04   Number         4  drv_output.o(.text.Drv_vPwmOutputInit)
    [Anonymous Symbol]                       0x08002b08   Section        0  drv_output.o(.text.Drv_vSetOutputFreq)
    __arm_cp.2_0                             0x08002b40   Number         4  drv_output.o(.text.Drv_vSetOutputFreq)
    __arm_cp.2_1                             0x08002b44   Number         4  drv_output.o(.text.Drv_vSetOutputFreq)
    [Anonymous Symbol]                       0x08002b48   Section        0  mm32_it.o(.text.EXTI0_1_IRQHandler)
    [Anonymous Symbol]                       0x08002b4a   Section        0  mm32_it.o(.text.EXTI2_3_IRQHandler)
    [Anonymous Symbol]                       0x08002b4c   Section        0  mm32_it.o(.text.EXTI4_15_IRQHandler)
    __arm_cp.10_0                            0x08002cb4   Number         4  mm32_it.o(.text.EXTI4_15_IRQHandler)
    __arm_cp.10_1                            0x08002cb8   Number         4  mm32_it.o(.text.EXTI4_15_IRQHandler)
    __arm_cp.10_2                            0x08002cbc   Number         4  mm32_it.o(.text.EXTI4_15_IRQHandler)
    __arm_cp.10_4                            0x08002cc0   Number         4  mm32_it.o(.text.EXTI4_15_IRQHandler)
    __arm_cp.10_5                            0x08002cc4   Number         4  mm32_it.o(.text.EXTI4_15_IRQHandler)
    __arm_cp.10_6                            0x08002cc8   Number         4  mm32_it.o(.text.EXTI4_15_IRQHandler)
    __arm_cp.10_7                            0x08002ccc   Number         4  mm32_it.o(.text.EXTI4_15_IRQHandler)
    __arm_cp.10_8                            0x08002cd0   Number         4  mm32_it.o(.text.EXTI4_15_IRQHandler)
    __arm_cp.10_9                            0x08002cd4   Number         4  mm32_it.o(.text.EXTI4_15_IRQHandler)
    [Anonymous Symbol]                       0x08002cd8   Section        0  hal_exti.o(.text.EXTI_ClearFlag)
    [Anonymous Symbol]                       0x08002cec   Section        0  hal_exti.o(.text.EXTI_GetFlagStatus)
    __arm_cp.8_0                             0x08002d10   Number         4  hal_exti.o(.text.EXTI_GetFlagStatus)
    [Anonymous Symbol]                       0x08002d14   Section        0  fsclock.o(.text.FCK_vInitSafeTime)
    __arm_cp.2_0                             0x08002d28   Number         4  fsclock.o(.text.FCK_vInitSafeTime)
    __arm_cp.2_1                             0x08002d2c   Number         4  fsclock.o(.text.FCK_vInitSafeTime)
    [Anonymous Symbol]                       0x08002d30   Section        0  fscommon.o(.text.FCN_vGetPhaseVoltage)
    __arm_cp.0_0                             0x08002e08   Number         4  fscommon.o(.text.FCN_vGetPhaseVoltage)
    __arm_cp.0_1                             0x08002e0c   Number         4  fscommon.o(.text.FCN_vGetPhaseVoltage)
    [Anonymous Symbol]                       0x08002e10   Section        0  fscommon.o(.text.FCN_vGetThreePhaseVol)
    __arm_cp.2_0                             0x08002e30   Number         4  fscommon.o(.text.FCN_vGetThreePhaseVol)
    [Anonymous Symbol]                       0x08002e34   Section        0  fshandle.o(.text.FHE_vFunctionSafetyCheck)
    [Anonymous Symbol]                       0x08002e44   Section        0  fshandle.o(.text.FHE_vHandleTask)
    __arm_cp.0_0                             0x08002e98   Number         4  fshandle.o(.text.FHE_vHandleTask)
    [Anonymous Symbol]                       0x08002e9c   Section        0  filter.o(.text.FIR_vCalcFilter)
    [Anonymous Symbol]                       0x08002ee0   Section        0  mm32_it.o(.text.FLASH_IRQHandler)
    [Anonymous Symbol]                       0x08002ee2   Section        0  fsmcu.o(.text.FMC_u32GetSystickTimerCounter)
    [Anonymous Symbol]                       0x08002eec   Section        0  fsmcu.o(.text.FMC_vSetSystickTimerRegisters)
    __arm_cp.0_0                             0x08002ef8   Number         4  fsmcu.o(.text.FMC_vSetSystickTimerRegisters)
    [Anonymous Symbol]                       0x08002efc   Section        0  foc_pmsm.o(.text.FOC_Current_Controller)
    __arm_cp.4_0                             0x08003044   Number         4  foc_pmsm.o(.text.FOC_Current_Controller)
    [Anonymous Symbol]                       0x08003048   Section        0  fsphaseloss.o(.text.FPL_vEvaluateCurrentAsymmetry)
    FPL_vEvaluateCurrentAsymmetry            0x08003049   Thumb Code   512  fsphaseloss.o(.text.FPL_vEvaluateCurrentAsymmetry)
    __arm_cp.6_0                             0x08003240   Number         4  fsphaseloss.o(.text.FPL_vEvaluateCurrentAsymmetry)
    __arm_cp.6_1                             0x08003244   Number         4  fsphaseloss.o(.text.FPL_vEvaluateCurrentAsymmetry)
    [Anonymous Symbol]                       0x08003248   Section        0  fsphaseloss.o(.text.FPL_vEvaluateStaticVector)
    FPL_vEvaluateStaticVector                0x08003249   Thumb Code   356  fsphaseloss.o(.text.FPL_vEvaluateStaticVector)
    __arm_cp.5_0                             0x080033a8   Number         4  fsphaseloss.o(.text.FPL_vEvaluateStaticVector)
    [Anonymous Symbol]                       0x080033ac   Section        0  fsphaseloss.o(.text.FPL_vEvaluateVoltageAsymmetry)
    FPL_vEvaluateVoltageAsymmetry            0x080033ad   Thumb Code   392  fsphaseloss.o(.text.FPL_vEvaluateVoltageAsymmetry)
    __arm_cp.7_0                             0x0800352c   Number         4  fsphaseloss.o(.text.FPL_vEvaluateVoltageAsymmetry)
    __arm_cp.7_1                             0x08003530   Number         4  fsphaseloss.o(.text.FPL_vEvaluateVoltageAsymmetry)
    [Anonymous Symbol]                       0x08003534   Section        0  fsphaseloss.o(.text.FPL_vPhaseLossCheck)
    [Anonymous Symbol]                       0x0800353c   Section        0  fsphaseloss.o(.text.FPL_vPhaseLossEvaluation)
    [Anonymous Symbol]                       0x08003560   Section        0  fsphaseloss.o(.text.FPL_vPhaselossprepareSamples)
    __arm_cp.0_0                             0x080036d4   Number         4  fsphaseloss.o(.text.FPL_vPhaselossprepareSamples)
    __arm_cp.0_1                             0x080036d8   Number         4  fsphaseloss.o(.text.FPL_vPhaselossprepareSamples)
    __arm_cp.0_2                             0x080036dc   Number         4  fsphaseloss.o(.text.FPL_vPhaselossprepareSamples)
    [Anonymous Symbol]                       0x080036e0   Section        0  math.o(.text.FPM_vCart2Pol)
    __arm_cp.0_0                             0x080037e0   Number         4  math.o(.text.FPM_vCart2Pol)
    __arm_cp.0_1                             0x080037e4   Number         4  math.o(.text.FPM_vCart2Pol)
    [Anonymous Symbol]                       0x080037e8   Section        0  fsrotorlock.o(.text.FRK_vCheckMotorLock)
    [Anonymous Symbol]                       0x080037f0   Section        0  fsrotorlock.o(.text.FRK_vCheckMotorLockComplex)
    __arm_cp.5_0                             0x08003950   Number         4  fsrotorlock.o(.text.FRK_vCheckMotorLockComplex)
    __arm_cp.5_1                             0x08003954   Number         4  fsrotorlock.o(.text.FRK_vCheckMotorLockComplex)
    __arm_cp.5_4                             0x08003958   Number         4  fsrotorlock.o(.text.FRK_vCheckMotorLockComplex)
    __arm_cp.5_5                             0x0800395c   Number         4  fsrotorlock.o(.text.FRK_vCheckMotorLockComplex)
    __arm_cp.5_6                             0x08003960   Number         4  fsrotorlock.o(.text.FRK_vCheckMotorLockComplex)
    __arm_cp.5_7                             0x08003964   Number         4  fsrotorlock.o(.text.FRK_vCheckMotorLockComplex)
    [Anonymous Symbol]                       0x08003968   Section        0  fsrotorlock.o(.text.FRK_vLockedRotorEvaluation)
    [Anonymous Symbol]                       0x08003970   Section        0  fsrotorlock.o(.text.FRK_vcalcBemf)
    __arm_cp.2_0                             0x080039f4   Number         4  fsrotorlock.o(.text.FRK_vcalcBemf)
    __arm_cp.2_1                             0x080039f8   Number         4  fsrotorlock.o(.text.FRK_vcalcBemf)
    __arm_cp.2_3                             0x080039fc   Number         4  fsrotorlock.o(.text.FRK_vcalcBemf)
    [Anonymous Symbol]                       0x08003a00   Section        0  fsrotorlock.o(.text.FRK_vcalcCurrentVector)
    __arm_cp.0_1                             0x08003ab8   Number         4  fsrotorlock.o(.text.FRK_vcalcCurrentVector)
    [Anonymous Symbol]                       0x08003abc   Section        0  fsrotorlock.o(.text.FRK_vcalcVoltageVector)
    __arm_cp.1_0                             0x08003b4c   Number         4  fsrotorlock.o(.text.FRK_vcalcVoltageVector)
    [Anonymous Symbol]                       0x08003b50   Section        0  iec60730_b_aux.o(.text.FailSafePOR)
    __arm_cp.0_0                             0x08003bc8   Number         4  iec60730_b_aux.o(.text.FailSafePOR)
    __arm_cp.0_1                             0x08003bcc   Number         4  iec60730_b_aux.o(.text.FailSafePOR)
    __arm_cp.0_2                             0x08003bd0   Number         4  iec60730_b_aux.o(.text.FailSafePOR)
    __arm_cp.0_3                             0x08003bd4   Number         4  iec60730_b_aux.o(.text.FailSafePOR)
    __arm_cp.0_4                             0x08003bd8   Number         4  iec60730_b_aux.o(.text.FailSafePOR)
    __arm_cp.0_5                             0x08003bdc   Number         4  iec60730_b_aux.o(.text.FailSafePOR)
    __arm_cp.0_6                             0x08003be0   Number         4  iec60730_b_aux.o(.text.FailSafePOR)
    __arm_cp.0_7                             0x08003be4   Number         4  iec60730_b_aux.o(.text.FailSafePOR)
    [Anonymous Symbol]                       0x08003be8   Section        0  statemachine.o(.text.Fault_LED_Disp)
    Fault_LED_Disp                           0x08003be9   Thumb Code   248  statemachine.o(.text.Fault_LED_Disp)
    __arm_cp.12_0                            0x08003cc8   Number         4  statemachine.o(.text.Fault_LED_Disp)
    __arm_cp.12_1                            0x08003ccc   Number         4  statemachine.o(.text.Fault_LED_Disp)
    __arm_cp.12_2                            0x08003cd0   Number         4  statemachine.o(.text.Fault_LED_Disp)
    __arm_cp.12_3                            0x08003cd4   Number         4  statemachine.o(.text.Fault_LED_Disp)
    __arm_cp.12_4                            0x08003cd8   Number         4  statemachine.o(.text.Fault_LED_Disp)
    __arm_cp.12_5                            0x08003cdc   Number         4  statemachine.o(.text.Fault_LED_Disp)
    [Anonymous Symbol]                       0x08003ce0   Section        0  iec60730_b_startup.o(.text.Flashtest_config)
    __arm_cp.0_0                             0x08003e04   Number         4  iec60730_b_startup.o(.text.Flashtest_config)
    __arm_cp.0_1                             0x08003e08   Number         4  iec60730_b_startup.o(.text.Flashtest_config)
    __arm_cp.0_2                             0x08003e0c   Number         4  iec60730_b_startup.o(.text.Flashtest_config)
    __arm_cp.0_3                             0x08003e10   Number         4  iec60730_b_startup.o(.text.Flashtest_config)
    __arm_cp.0_4                             0x08003e14   Number         4  iec60730_b_startup.o(.text.Flashtest_config)
    __arm_cp.0_5                             0x08003e18   Number         4  iec60730_b_startup.o(.text.Flashtest_config)
    __arm_cp.0_6                             0x08003e1c   Number         4  iec60730_b_startup.o(.text.Flashtest_config)
    __arm_cp.0_7                             0x08003e20   Number         4  iec60730_b_startup.o(.text.Flashtest_config)
    __arm_cp.0_8                             0x08003e24   Number         4  iec60730_b_startup.o(.text.Flashtest_config)
    __arm_cp.0_9                             0x08003e28   Number         4  iec60730_b_startup.o(.text.Flashtest_config)
    __arm_cp.0_10                            0x08003e2c   Number         4  iec60730_b_startup.o(.text.Flashtest_config)
    [Anonymous Symbol]                       0x08003e30   Section        0  hal_gpio.o(.text.GPIO_Init)
    [Anonymous Symbol]                       0x08003f48   Section        0  hal_gpio.o(.text.GPIO_PinAFConfig)
    [Anonymous Symbol]                       0x08003fa6   Section        0  hal_gpio.o(.text.GPIO_ReadInputDataBit)
    [Anonymous Symbol]                       0x08003fd4   Section        0  hal_gpio.o(.text.GPIO_StructInit)
    __arm_cp.3_0                             0x08003ff4   Number         4  hal_gpio.o(.text.GPIO_StructInit)
    [Anonymous Symbol]                       0x08003ff8   Section        0  foc_pmsm.o(.text.Get_ADC_Result)
    __arm_cp.1_0                             0x08004054   Number         4  foc_pmsm.o(.text.Get_ADC_Result)
    __arm_cp.1_1                             0x08004058   Number         4  foc_pmsm.o(.text.Get_ADC_Result)
    __arm_cp.1_2                             0x0800405c   Number         4  foc_pmsm.o(.text.Get_ADC_Result)
    __arm_cp.1_3                             0x08004060   Number         4  foc_pmsm.o(.text.Get_ADC_Result)
    [Anonymous Symbol]                       0x08004064   Section        0  drv_div.o(.text.HDIV_SignInit)
    HDIV_SignInit                            0x08004065   Thumb Code    16  drv_div.o(.text.HDIV_SignInit)
    __arm_cp.1_0                             0x08004070   Number         4  drv_div.o(.text.HDIV_SignInit)
    [Anonymous Symbol]                       0x08004074   Section        0  mm32_it.o(.text.HWDIV_IRQHandler)
    [Anonymous Symbol]                       0x08004078   Section        0  drv_sqrt.o(.text.Hw_Sqrt)
    __arm_cp.1_0                             0x080040ac   Number         4  drv_sqrt.o(.text.Hw_Sqrt)
    __arm_cp.1_1                             0x080040b0   Number         4  drv_sqrt.o(.text.Hw_Sqrt)
    [Anonymous Symbol]                       0x080040b4   Section        0  mm32_it.o(.text.I2C1_IRQHandler)
    [Anonymous Symbol]                       0x080040b8   Section        0  iec60730_b_startup.o(.text.IEC60730_B_CRC_StoreclassBData)
    __arm_cp.7_1                             0x080040ec   Number         4  iec60730_b_startup.o(.text.IEC60730_B_CRC_StoreclassBData)
    __arm_cp.7_2                             0x080040f0   Number         4  iec60730_b_startup.o(.text.IEC60730_B_CRC_StoreclassBData)
    [Anonymous Symbol]                       0x080040f4   Section        0  iec60730_b_runtimetest.o(.text.IEC60730_B_CpuRunTime_test)
    [Anonymous Symbol]                       0x0800412c   Section        0  iec60730_b_runtimetest.o(.text.IEC60730_B_FlashRunTime_test)
    __arm_cp.7_0                             0x08004280   Number         4  iec60730_b_runtimetest.o(.text.IEC60730_B_FlashRunTime_test)
    __arm_cp.7_3                             0x08004284   Number         4  iec60730_b_runtimetest.o(.text.IEC60730_B_FlashRunTime_test)
    __arm_cp.7_4                             0x08004288   Number         4  iec60730_b_runtimetest.o(.text.IEC60730_B_FlashRunTime_test)
    __arm_cp.7_5                             0x0800428c   Number         4  iec60730_b_runtimetest.o(.text.IEC60730_B_FlashRunTime_test)
    __arm_cp.7_6                             0x08004290   Number         4  iec60730_b_runtimetest.o(.text.IEC60730_B_FlashRunTime_test)
    __arm_cp.7_7                             0x08004294   Number         4  iec60730_b_runtimetest.o(.text.IEC60730_B_FlashRunTime_test)
    __arm_cp.7_8                             0x08004298   Number         4  iec60730_b_runtimetest.o(.text.IEC60730_B_FlashRunTime_test)
    __arm_cp.7_9                             0x0800429c   Number         4  iec60730_b_runtimetest.o(.text.IEC60730_B_FlashRunTime_test)
    __arm_cp.7_10                            0x080042a0   Number         4  iec60730_b_runtimetest.o(.text.IEC60730_B_FlashRunTime_test)
    __arm_cp.7_11                            0x080042a4   Number         4  iec60730_b_runtimetest.o(.text.IEC60730_B_FlashRunTime_test)
    __arm_cp.7_12                            0x080042a8   Number         4  iec60730_b_runtimetest.o(.text.IEC60730_B_FlashRunTime_test)
    [Anonymous Symbol]                       0x080042ac   Section        0  iec60730_b_startup.o(.text.IEC60730_B_FullCpu_test)
    [Anonymous Symbol]                       0x080042e4   Section        0  iec60730_b_flashtest.o(.text.IEC60730_B_FullFlash_test)
    __arm_cp.1_0                             0x08004370   Number         4  iec60730_b_flashtest.o(.text.IEC60730_B_FullFlash_test)
    __arm_cp.1_1                             0x08004374   Number         4  iec60730_b_flashtest.o(.text.IEC60730_B_FullFlash_test)
    __arm_cp.1_2                             0x08004378   Number         4  iec60730_b_flashtest.o(.text.IEC60730_B_FullFlash_test)
    __arm_cp.1_3                             0x0800437c   Number         4  iec60730_b_flashtest.o(.text.IEC60730_B_FullFlash_test)
    __arm_cp.1_4                             0x08004380   Number         4  iec60730_b_flashtest.o(.text.IEC60730_B_FullFlash_test)
    __arm_cp.1_5                             0x08004384   Number         4  iec60730_b_flashtest.o(.text.IEC60730_B_FullFlash_test)
    [Anonymous Symbol]                       0x08004388   Section        0  iec60730_b_transpram.o(.text.IEC60730_B_TranspMarch)
    __arm_cp.1_2                             0x08004464   Number         4  iec60730_b_transpram.o(.text.IEC60730_B_TranspMarch)
    [Anonymous Symbol]                       0x08004468   Section        0  iec60730_b_transpram.o(.text.IEC60730_B_TranspMarchInit)
    __arm_cp.0_0                             0x08004484   Number         4  iec60730_b_transpram.o(.text.IEC60730_B_TranspMarchInit)
    __arm_cp.0_1                             0x08004488   Number         4  iec60730_b_transpram.o(.text.IEC60730_B_TranspMarchInit)
    __arm_cp.0_2                             0x0800448c   Number         4  iec60730_b_transpram.o(.text.IEC60730_B_TranspMarchInit)
    [Anonymous Symbol]                       0x08004490   Section        0  iec60730_b_aux.o(.text.IEC60730_B_WDGSelfTest)
    __arm_cp.3_0                             0x08004594   Number         4  iec60730_b_aux.o(.text.IEC60730_B_WDGSelfTest)
    [Anonymous Symbol]                       0x08004598   Section        0  iec60730_b_startup.o(.text.IEC60730_B_startup)
    __arm_cp.5_0                             0x080046c4   Number         4  iec60730_b_startup.o(.text.IEC60730_B_startup)
    __arm_cp.5_1                             0x080046c8   Number         4  iec60730_b_startup.o(.text.IEC60730_B_startup)
    __arm_cp.5_2                             0x080046cc   Number         4  iec60730_b_startup.o(.text.IEC60730_B_startup)
    __arm_cp.5_3                             0x080046d0   Number         4  iec60730_b_startup.o(.text.IEC60730_B_startup)
    __arm_cp.5_4                             0x080046d4   Number         4  iec60730_b_startup.o(.text.IEC60730_B_startup)
    __arm_cp.5_5                             0x080046d8   Number         4  iec60730_b_startup.o(.text.IEC60730_B_startup)
    __arm_cp.5_12                            0x080046dc   Number         4  iec60730_b_startup.o(.text.IEC60730_B_startup)
    [Anonymous Symbol]                       0x080046e0   Section        0  iec60730_b_runtimetest.o(.text.IEC60730_CheckStack)
    __arm_cp.4_1                             0x08004750   Number         4  iec60730_b_runtimetest.o(.text.IEC60730_CheckStack)
    __arm_cp.4_2                             0x08004754   Number         4  iec60730_b_runtimetest.o(.text.IEC60730_CheckStack)
    __arm_cp.4_3                             0x08004758   Number         4  iec60730_b_runtimetest.o(.text.IEC60730_CheckStack)
    __arm_cp.4_4                             0x0800475c   Number         4  iec60730_b_runtimetest.o(.text.IEC60730_CheckStack)
    __arm_cp.4_5                             0x08004760   Number         4  iec60730_b_runtimetest.o(.text.IEC60730_CheckStack)
    [Anonymous Symbol]                       0x08004764   Section        0  iec60730_b_clocktest.o(.text.IEC60730_ClockStartUpTest)
    [Anonymous Symbol]                       0x080047b8   Section        0  iec60730_b_runtimetest.o(.text.IEC60730_ClockTest_RunTime)
    __arm_cp.5_1                             0x08004838   Number         4  iec60730_b_runtimetest.o(.text.IEC60730_ClockTest_RunTime)
    __arm_cp.5_2                             0x0800483c   Number         4  iec60730_b_runtimetest.o(.text.IEC60730_ClockTest_RunTime)
    __arm_cp.5_5                             0x08004840   Number         4  iec60730_b_runtimetest.o(.text.IEC60730_ClockTest_RunTime)
    [Anonymous Symbol]                       0x08004844   Section        0  iec60730_b_startup.o(.text.IEC60730_ClockTest_Startup)
    __arm_cp.3_0                             0x08004874   Number         4  iec60730_b_startup.o(.text.IEC60730_ClockTest_Startup)
    __arm_cp.3_1                             0x08004878   Number         4  iec60730_b_startup.o(.text.IEC60730_ClockTest_Startup)
    [Anonymous Symbol]                       0x0800487c   Section        0  iec60730_b_runtimetest.o(.text.IEC60730_DoRunTimeChecks)
    __arm_cp.6_1                             0x0800494c   Number         4  iec60730_b_runtimetest.o(.text.IEC60730_DoRunTimeChecks)
    __arm_cp.6_3                             0x08004950   Number         4  iec60730_b_runtimetest.o(.text.IEC60730_DoRunTimeChecks)
    __arm_cp.6_4                             0x08004954   Number         4  iec60730_b_runtimetest.o(.text.IEC60730_DoRunTimeChecks)
    __arm_cp.6_5                             0x08004958   Number         4  iec60730_b_runtimetest.o(.text.IEC60730_DoRunTimeChecks)
    __arm_cp.6_6                             0x0800495c   Number         4  iec60730_b_runtimetest.o(.text.IEC60730_DoRunTimeChecks)
    [Anonymous Symbol]                       0x08004960   Section        0  iec60730_b_flashtest.o(.text.IEC60730_FlashCrc32Init)
    __arm_cp.0_0                             0x08004978   Number         4  iec60730_b_flashtest.o(.text.IEC60730_FlashCrc32Init)
    [Anonymous Symbol]                       0x0800497c   Section        0  iec60730_b_clocktest.o(.text.IEC60730_InitClock_Xcross_Measurement)
    [Anonymous Symbol]                       0x080049b8   Section        0  iec60730_b_runtimetest.o(.text.IEC60730_InitRunTimeChecks)
    __arm_cp.0_0                             0x08004a94   Number         4  iec60730_b_runtimetest.o(.text.IEC60730_InitRunTimeChecks)
    __arm_cp.0_1                             0x08004a98   Number         4  iec60730_b_runtimetest.o(.text.IEC60730_InitRunTimeChecks)
    __arm_cp.0_2                             0x08004a9c   Number         4  iec60730_b_runtimetest.o(.text.IEC60730_InitRunTimeChecks)
    __arm_cp.0_3                             0x08004aa0   Number         4  iec60730_b_runtimetest.o(.text.IEC60730_InitRunTimeChecks)
    __arm_cp.0_4                             0x08004aa4   Number         4  iec60730_b_runtimetest.o(.text.IEC60730_InitRunTimeChecks)
    __arm_cp.0_5                             0x08004aa8   Number         4  iec60730_b_runtimetest.o(.text.IEC60730_InitRunTimeChecks)
    __arm_cp.0_6                             0x08004aac   Number         4  iec60730_b_runtimetest.o(.text.IEC60730_InitRunTimeChecks)
    __arm_cp.0_7                             0x08004ab0   Number         4  iec60730_b_runtimetest.o(.text.IEC60730_InitRunTimeChecks)
    __arm_cp.0_8                             0x08004ab4   Number         4  iec60730_b_runtimetest.o(.text.IEC60730_InitRunTimeChecks)
    __arm_cp.0_9                             0x08004ab8   Number         4  iec60730_b_runtimetest.o(.text.IEC60730_InitRunTimeChecks)
    __arm_cp.0_10                            0x08004abc   Number         4  iec60730_b_runtimetest.o(.text.IEC60730_InitRunTimeChecks)
    __arm_cp.0_11                            0x08004ac0   Number         4  iec60730_b_runtimetest.o(.text.IEC60730_InitRunTimeChecks)
    __arm_cp.0_12                            0x08004ac4   Number         4  iec60730_b_runtimetest.o(.text.IEC60730_InitRunTimeChecks)
    __arm_cp.0_13                            0x08004ac8   Number         4  iec60730_b_runtimetest.o(.text.IEC60730_InitRunTimeChecks)
    __arm_cp.0_14                            0x08004acc   Number         4  iec60730_b_runtimetest.o(.text.IEC60730_InitRunTimeChecks)
    __arm_cp.0_15                            0x08004ad0   Number         4  iec60730_b_runtimetest.o(.text.IEC60730_InitRunTimeChecks)
    __arm_cp.0_16                            0x08004ad4   Number         4  iec60730_b_runtimetest.o(.text.IEC60730_InitRunTimeChecks)
    __arm_cp.0_20                            0x08004ad8   Number         4  iec60730_b_runtimetest.o(.text.IEC60730_InitRunTimeChecks)
    __arm_cp.0_21                            0x08004adc   Number         4  iec60730_b_runtimetest.o(.text.IEC60730_InitRunTimeChecks)
    __arm_cp.0_22                            0x08004ae0   Number         4  iec60730_b_runtimetest.o(.text.IEC60730_InitRunTimeChecks)
    __arm_cp.0_23                            0x08004ae4   Number         4  iec60730_b_runtimetest.o(.text.IEC60730_InitRunTimeChecks)
    __arm_cp.0_24                            0x08004ae8   Number         4  iec60730_b_runtimetest.o(.text.IEC60730_InitRunTimeChecks)
    [Anonymous Symbol]                       0x08004aec   Section        0  iec60730_b_clocktest.o(.text.IEC60730_MainClockTest)
    __arm_cp.0_0                             0x08004b50   Number         4  iec60730_b_clocktest.o(.text.IEC60730_MainClockTest)
    __arm_cp.0_1                             0x08004b54   Number         4  iec60730_b_clocktest.o(.text.IEC60730_MainClockTest)
    __arm_cp.0_2                             0x08004b58   Number         4  iec60730_b_clocktest.o(.text.IEC60730_MainClockTest)
    __arm_cp.0_4                             0x08004b5c   Number         4  iec60730_b_clocktest.o(.text.IEC60730_MainClockTest)
    __arm_cp.0_5                             0x08004b60   Number         4  iec60730_b_clocktest.o(.text.IEC60730_MainClockTest)
    [Anonymous Symbol]                       0x08004b64   Section        0  iec60730_b_runtimetest.o(.text.IEC60730_Stack_Check)
    __arm_cp.3_0                             0x08004b9c   Number         4  iec60730_b_runtimetest.o(.text.IEC60730_Stack_Check)
    __arm_cp.3_1                             0x08004ba0   Number         4  iec60730_b_runtimetest.o(.text.IEC60730_Stack_Check)
    [Anonymous Symbol]                       0x08004ba4   Section        0  iec60730_b_clocktest.o(.text.IEC60730_clockrun_valuecheck)
    __arm_cp.1_0                             0x08004bec   Number         4  iec60730_b_clocktest.o(.text.IEC60730_clockrun_valuecheck)
    __arm_cp.1_1                             0x08004bf0   Number         4  iec60730_b_clocktest.o(.text.IEC60730_clockrun_valuecheck)
    __arm_cp.1_2                             0x08004bf4   Number         4  iec60730_b_clocktest.o(.text.IEC60730_clockrun_valuecheck)
    __arm_cp.1_3                             0x08004bf8   Number         4  iec60730_b_clocktest.o(.text.IEC60730_clockrun_valuecheck)
    [Anonymous Symbol]                       0x08004bfc   Section        0  iec60730_b_flashtest.o(.text.IEC60730_crc32Run)
    __arm_cp.2_0                             0x08004cec   Number         4  iec60730_b_flashtest.o(.text.IEC60730_crc32Run)
    __arm_cp.2_1                             0x08004cf0   Number         4  iec60730_b_flashtest.o(.text.IEC60730_crc32Run)
    __arm_cp.2_2                             0x08004cf4   Number         4  iec60730_b_flashtest.o(.text.IEC60730_crc32Run)
    __arm_cp.2_3                             0x08004cf8   Number         4  iec60730_b_flashtest.o(.text.IEC60730_crc32Run)
    __arm_cp.2_4                             0x08004cfc   Number         4  iec60730_b_flashtest.o(.text.IEC60730_crc32Run)
    __arm_cp.2_5                             0x08004d00   Number         4  iec60730_b_flashtest.o(.text.IEC60730_crc32Run)
    __arm_cp.2_6                             0x08004d04   Number         4  iec60730_b_flashtest.o(.text.IEC60730_crc32Run)
    __arm_cp.2_7                             0x08004d08   Number         4  iec60730_b_flashtest.o(.text.IEC60730_crc32Run)
    __arm_cp.2_8                             0x08004d0c   Number         4  iec60730_b_flashtest.o(.text.IEC60730_crc32Run)
    __arm_cp.2_9                             0x08004d10   Number         4  iec60730_b_flashtest.o(.text.IEC60730_crc32Run)
    [Anonymous Symbol]                       0x08004d14   Section        0  hal_iwdg.o(.text.IWDG_Enable)
    __arm_cp.7_1                             0x08004d1c   Number         4  hal_iwdg.o(.text.IWDG_Enable)
    [Anonymous Symbol]                       0x08004d20   Section        0  hal_iwdg.o(.text.IWDG_GetFlagStatus)
    __arm_cp.8_0                             0x08004d48   Number         4  hal_iwdg.o(.text.IWDG_GetFlagStatus)
    [Anonymous Symbol]                       0x08004d4c   Section        0  hal_iwdg.o(.text.IWDG_ReloadCounter)
    __arm_cp.6_1                             0x08004d54   Number         4  hal_iwdg.o(.text.IWDG_ReloadCounter)
    [Anonymous Symbol]                       0x08004d58   Section        0  hal_iwdg.o(.text.IWDG_SetPrescaler)
    __arm_cp.1_0                             0x08004d74   Number         4  hal_iwdg.o(.text.IWDG_SetPrescaler)
    [Anonymous Symbol]                       0x08004d78   Section        0  hal_iwdg.o(.text.IWDG_SetReload)
    [Anonymous Symbol]                       0x08004d94   Section        0  hal_iwdg.o(.text.IWDG_WriteAccessCmd)
    __arm_cp.0_0                             0x08004da8   Number         4  hal_iwdg.o(.text.IWDG_WriteAccessCmd)
    [Anonymous Symbol]                       0x08004dac   Section        0  user_function.o(.text.Init_Parameter)
    __arm_cp.0_1                             0x08004fd4   Number         4  user_function.o(.text.Init_Parameter)
    __arm_cp.0_2                             0x08004fd8   Number         4  user_function.o(.text.Init_Parameter)
    __arm_cp.0_3                             0x08004fdc   Number         4  user_function.o(.text.Init_Parameter)
    __arm_cp.0_4                             0x08004fe0   Number         4  user_function.o(.text.Init_Parameter)
    __arm_cp.0_5                             0x08004fe4   Number         4  user_function.o(.text.Init_Parameter)
    __arm_cp.0_6                             0x08004fe8   Number         4  user_function.o(.text.Init_Parameter)
    __arm_cp.0_7                             0x08004fec   Number         4  user_function.o(.text.Init_Parameter)
    __arm_cp.0_8                             0x08004ff0   Number         4  user_function.o(.text.Init_Parameter)
    __arm_cp.0_9                             0x08004ff4   Number         4  user_function.o(.text.Init_Parameter)
    __arm_cp.0_10                            0x08004ff8   Number         4  user_function.o(.text.Init_Parameter)
    __arm_cp.0_11                            0x08004ffc   Number         4  user_function.o(.text.Init_Parameter)
    __arm_cp.0_12                            0x08005000   Number         4  user_function.o(.text.Init_Parameter)
    __arm_cp.0_13                            0x08005004   Number         4  user_function.o(.text.Init_Parameter)
    __arm_cp.0_14                            0x08005008   Number         4  user_function.o(.text.Init_Parameter)
    __arm_cp.0_15                            0x0800500c   Number         4  user_function.o(.text.Init_Parameter)
    __arm_cp.0_16                            0x08005010   Number         4  user_function.o(.text.Init_Parameter)
    __arm_cp.0_17                            0x08005014   Number         4  user_function.o(.text.Init_Parameter)
    __arm_cp.0_18                            0x08005018   Number         4  user_function.o(.text.Init_Parameter)
    __arm_cp.0_19                            0x0800501c   Number         4  user_function.o(.text.Init_Parameter)
    __arm_cp.0_20                            0x08005020   Number         4  user_function.o(.text.Init_Parameter)
    __arm_cp.0_21                            0x08005024   Number         4  user_function.o(.text.Init_Parameter)
    [Anonymous Symbol]                       0x08005028   Section        0  mm32_it.o(.text.Interrupt_Init)
    __arm_cp.1_0                             0x08005094   Number         4  mm32_it.o(.text.Interrupt_Init)
    __arm_cp.1_1                             0x08005098   Number         4  mm32_it.o(.text.Interrupt_Init)
    [Anonymous Symbol]                       0x0800509c   Section        0  iec60730_b_aux.o(.text.Iwdg_Init)
    __arm_cp.1_0                             0x0800510c   Number         4  iec60730_b_aux.o(.text.Iwdg_Init)
    __arm_cp.1_1                             0x08005110   Number         4  iec60730_b_aux.o(.text.Iwdg_Init)
    [Anonymous Symbol]                       0x08005114   Section        0  statemachine.o(.text.M1_FaultDetection)
    M1_FaultDetection                        0x08005115   Thumb Code   264  statemachine.o(.text.M1_FaultDetection)
    __arm_cp.8_2                             0x08005200   Number         4  statemachine.o(.text.M1_FaultDetection)
    __arm_cp.8_4                             0x08005204   Number         4  statemachine.o(.text.M1_FaultDetection)
    __arm_cp.8_5                             0x08005208   Number         4  statemachine.o(.text.M1_FaultDetection)
    __arm_cp.8_6                             0x0800520c   Number         4  statemachine.o(.text.M1_FaultDetection)
    [Anonymous Symbol]                       0x08005210   Section        0  statemachine.o(.text.M1_Fault_Fast)
    [Anonymous Symbol]                       0x08005224   Section        0  statemachine.o(.text.M1_Fault_Slow)
    __arm_cp.4_1                             0x08005260   Number         4  statemachine.o(.text.M1_Fault_Slow)
    __arm_cp.4_2                             0x08005264   Number         4  statemachine.o(.text.M1_Fault_Slow)
    [Anonymous Symbol]                       0x08005268   Section        0  statemachine.o(.text.M1_Init_Fast)
    [Anonymous Symbol]                       0x08005284   Section        0  statemachine.o(.text.M1_Init_Slow)
    [Anonymous Symbol]                       0x08005290   Section        0  statemachine.o(.text.M1_RunAlignFast)
    M1_RunAlignFast                          0x08005291   Thumb Code    84  statemachine.o(.text.M1_RunAlignFast)
    [Anonymous Symbol]                       0x080052e0   Section        0  statemachine.o(.text.M1_RunAlignSlow)
    M1_RunAlignSlow                          0x080052e1   Thumb Code   200  statemachine.o(.text.M1_RunAlignSlow)
    [Anonymous Symbol]                       0x080053a0   Section        0  statemachine.o(.text.M1_RunBrakeFast)
    M1_RunBrakeFast                          0x080053a1   Thumb Code    52  statemachine.o(.text.M1_RunBrakeFast)
    [Anonymous Symbol]                       0x080053cc   Section        0  statemachine.o(.text.M1_RunBrakeSlow)
    M1_RunBrakeSlow                          0x080053cd   Thumb Code     2  statemachine.o(.text.M1_RunBrakeSlow)
    [Anonymous Symbol]                       0x080053ce   Section        0  statemachine.o(.text.M1_RunCalibFast)
    M1_RunCalibFast                          0x080053cf   Thumb Code     8  statemachine.o(.text.M1_RunCalibFast)
    [Anonymous Symbol]                       0x080053d8   Section        0  statemachine.o(.text.M1_RunCalibSlow)
    M1_RunCalibSlow                          0x080053d9   Thumb Code    16  statemachine.o(.text.M1_RunCalibSlow)
    [Anonymous Symbol]                       0x080053e4   Section        0  statemachine.o(.text.M1_RunFreewheelFast)
    M1_RunFreewheelFast                      0x080053e5   Thumb Code    84  statemachine.o(.text.M1_RunFreewheelFast)
    __arm_cp.31_0                            0x08005430   Number         4  statemachine.o(.text.M1_RunFreewheelFast)
    [Anonymous Symbol]                       0x08005434   Section        0  statemachine.o(.text.M1_RunFreewheelSlow)
    M1_RunFreewheelSlow                      0x08005435   Thumb Code   100  statemachine.o(.text.M1_RunFreewheelSlow)
    __arm_cp.41_0                            0x0800548c   Number         4  statemachine.o(.text.M1_RunFreewheelSlow)
    __arm_cp.41_1                            0x08005490   Number         4  statemachine.o(.text.M1_RunFreewheelSlow)
    [Anonymous Symbol]                       0x08005494   Section        0  statemachine.o(.text.M1_RunReadyFast)
    M1_RunReadyFast                          0x08005495   Thumb Code   140  statemachine.o(.text.M1_RunReadyFast)
    __arm_cp.25_0                            0x08005514   Number         4  statemachine.o(.text.M1_RunReadyFast)
    __arm_cp.25_1                            0x08005518   Number         4  statemachine.o(.text.M1_RunReadyFast)
    __arm_cp.25_2                            0x0800551c   Number         4  statemachine.o(.text.M1_RunReadyFast)
    [Anonymous Symbol]                       0x08005520   Section        0  statemachine.o(.text.M1_RunReadySlow)
    M1_RunReadySlow                          0x08005521   Thumb Code    16  statemachine.o(.text.M1_RunReadySlow)
    __arm_cp.35_0                            0x0800552c   Number         4  statemachine.o(.text.M1_RunReadySlow)
    [Anonymous Symbol]                       0x08005530   Section        0  statemachine.o(.text.M1_RunSpinFast)
    M1_RunSpinFast                           0x08005531   Thumb Code    84  statemachine.o(.text.M1_RunSpinFast)
    [Anonymous Symbol]                       0x08005580   Section        0  statemachine.o(.text.M1_RunSpinSlow)
    M1_RunSpinSlow                           0x08005581   Thumb Code   108  statemachine.o(.text.M1_RunSpinSlow)
    __arm_cp.40_0                            0x080055e4   Number         4  statemachine.o(.text.M1_RunSpinSlow)
    __arm_cp.40_1                            0x080055e8   Number         4  statemachine.o(.text.M1_RunSpinSlow)
    [Anonymous Symbol]                       0x080055ec   Section        0  statemachine.o(.text.M1_RunStartupFast)
    M1_RunStartupFast                        0x080055ed   Thumb Code   376  statemachine.o(.text.M1_RunStartupFast)
    __arm_cp.29_0                            0x0800573c   Number         4  statemachine.o(.text.M1_RunStartupFast)
    __arm_cp.29_1                            0x08005740   Number         4  statemachine.o(.text.M1_RunStartupFast)
    __arm_cp.29_2                            0x08005744   Number         4  statemachine.o(.text.M1_RunStartupFast)
    __arm_cp.29_3                            0x08005748   Number         4  statemachine.o(.text.M1_RunStartupFast)
    __arm_cp.29_4                            0x0800574c   Number         4  statemachine.o(.text.M1_RunStartupFast)
    __arm_cp.29_5                            0x08005750   Number         4  statemachine.o(.text.M1_RunStartupFast)
    __arm_cp.29_6                            0x08005754   Number         4  statemachine.o(.text.M1_RunStartupFast)
    __arm_cp.29_7                            0x08005758   Number         4  statemachine.o(.text.M1_RunStartupFast)
    __arm_cp.29_8                            0x0800575c   Number         4  statemachine.o(.text.M1_RunStartupFast)
    __arm_cp.29_9                            0x08005760   Number         4  statemachine.o(.text.M1_RunStartupFast)
    [Anonymous Symbol]                       0x08005764   Section        0  statemachine.o(.text.M1_RunStartupSlow)
    M1_RunStartupSlow                        0x08005765   Thumb Code   384  statemachine.o(.text.M1_RunStartupSlow)
    __arm_cp.39_0                            0x080058d4   Number         4  statemachine.o(.text.M1_RunStartupSlow)
    __arm_cp.39_1                            0x080058d8   Number         4  statemachine.o(.text.M1_RunStartupSlow)
    __arm_cp.39_3                            0x080058dc   Number         4  statemachine.o(.text.M1_RunStartupSlow)
    [Anonymous Symbol]                       0x080058e0   Section        0  statemachine.o(.text.M1_RunWindDetFast)
    M1_RunWindDetFast                        0x080058e1   Thumb Code    56  statemachine.o(.text.M1_RunWindDetFast)
    __arm_cp.26_0                            0x08005910   Number         4  statemachine.o(.text.M1_RunWindDetFast)
    [Anonymous Symbol]                       0x08005914   Section        0  statemachine.o(.text.M1_RunWindDetSlow)
    M1_RunWindDetSlow                        0x08005915   Thumb Code    16  statemachine.o(.text.M1_RunWindDetSlow)
    __arm_cp.36_0                            0x08005920   Number         4  statemachine.o(.text.M1_RunWindDetSlow)
    [Anonymous Symbol]                       0x08005924   Section        0  statemachine.o(.text.M1_Run_Fast)
    __arm_cp.3_1                             0x08005950   Number         4  statemachine.o(.text.M1_Run_Fast)
    __arm_cp.3_3                             0x08005954   Number         4  statemachine.o(.text.M1_Run_Fast)
    [Anonymous Symbol]                       0x08005958   Section        0  statemachine.o(.text.M1_Run_Slow)
    __arm_cp.7_2                             0x08005974   Number         4  statemachine.o(.text.M1_Run_Slow)
    [Anonymous Symbol]                       0x08005978   Section        0  statemachine.o(.text.M1_Stop_Fast)
    __arm_cp.2_1                             0x080059a8   Number         4  statemachine.o(.text.M1_Stop_Fast)
    __arm_cp.2_2                             0x080059ac   Number         4  statemachine.o(.text.M1_Stop_Fast)
    [Anonymous Symbol]                       0x080059b0   Section        0  statemachine.o(.text.M1_Stop_Slow)
    __arm_cp.6_1                             0x080059d8   Number         4  statemachine.o(.text.M1_Stop_Slow)
    [Anonymous Symbol]                       0x080059dc   Section        0  statemachine.o(.text.M1_SwitchFaultStop)
    M1_SwitchFaultStop                       0x080059dd   Thumb Code    12  statemachine.o(.text.M1_SwitchFaultStop)
    [Anonymous Symbol]                       0x080059e4   Section        0  statemachine.o(.text.M1_SwitchInitStop)
    M1_SwitchInitStop                        0x080059e5   Thumb Code    12  statemachine.o(.text.M1_SwitchInitStop)
    [Anonymous Symbol]                       0x080059ec   Section        0  statemachine.o(.text.M1_SwitchRunAlignReady)
    M1_SwitchRunAlignReady                   0x080059ed   Thumb Code    40  statemachine.o(.text.M1_SwitchRunAlignReady)
    __arm_cp.42_1                            0x08005a08   Number         4  statemachine.o(.text.M1_SwitchRunAlignReady)
    [Anonymous Symbol]                       0x08005a0c   Section        0  statemachine.o(.text.M1_SwitchRunAlignStartup)
    M1_SwitchRunAlignStartup                 0x08005a0d   Thumb Code   104  statemachine.o(.text.M1_SwitchRunAlignStartup)
    [Anonymous Symbol]                       0x08005a60   Section        0  statemachine.o(.text.M1_SwitchRunCalibReady)
    M1_SwitchRunCalibReady                   0x08005a61   Thumb Code    24  statemachine.o(.text.M1_SwitchRunCalibReady)
    [Anonymous Symbol]                       0x08005a70   Section        0  statemachine.o(.text.M1_SwitchRunFault)
    M1_SwitchRunFault                        0x08005a71   Thumb Code    48  statemachine.o(.text.M1_SwitchRunFault)
    [Anonymous Symbol]                       0x08005a90   Section        0  statemachine.o(.text.M1_SwitchRunFreewheelReady)
    M1_SwitchRunFreewheelReady               0x08005a91   Thumb Code    40  statemachine.o(.text.M1_SwitchRunFreewheelReady)
    __arm_cp.49_0                            0x08005ab0   Number         4  statemachine.o(.text.M1_SwitchRunFreewheelReady)
    [Anonymous Symbol]                       0x08005ab4   Section        0  statemachine.o(.text.M1_SwitchRunReadyWindDet)
    [Anonymous Symbol]                       0x08005abc   Section        0  statemachine.o(.text.M1_SwitchRunSpinFreewheel)
    M1_SwitchRunSpinFreewheel                0x08005abd   Thumb Code    28  statemachine.o(.text.M1_SwitchRunSpinFreewheel)
    __arm_cp.48_0                            0x08005ad0   Number         4  statemachine.o(.text.M1_SwitchRunSpinFreewheel)
    [Anonymous Symbol]                       0x08005ad4   Section        0  statemachine.o(.text.M1_SwitchRunStartupFreewheel)
    M1_SwitchRunStartupFreewheel             0x08005ad5   Thumb Code    12  statemachine.o(.text.M1_SwitchRunStartupFreewheel)
    [Anonymous Symbol]                       0x08005adc   Section        0  statemachine.o(.text.M1_SwitchRunStartupSpin)
    M1_SwitchRunStartupSpin                  0x08005add   Thumb Code   124  statemachine.o(.text.M1_SwitchRunStartupSpin)
    __arm_cp.47_0                            0x08005b40   Number         4  statemachine.o(.text.M1_SwitchRunStartupSpin)
    __arm_cp.47_1                            0x08005b44   Number         4  statemachine.o(.text.M1_SwitchRunStartupSpin)
    __arm_cp.47_2                            0x08005b48   Number         4  statemachine.o(.text.M1_SwitchRunStartupSpin)
    __arm_cp.47_3                            0x08005b4c   Number         4  statemachine.o(.text.M1_SwitchRunStartupSpin)
    __arm_cp.47_4                            0x08005b50   Number         4  statemachine.o(.text.M1_SwitchRunStartupSpin)
    [Anonymous Symbol]                       0x08005b54   Section        0  statemachine.o(.text.M1_SwitchRunWindDetAlign)
    [Anonymous Symbol]                       0x08005b5c   Section        0  statemachine.o(.text.M1_SwitchRunWindDetBrake)
    [Anonymous Symbol]                       0x08005b64   Section        0  statemachine.o(.text.M1_SwitchRunWindDetReady)
    [Anonymous Symbol]                       0x08005b6c   Section        0  statemachine.o(.text.M1_SwitchStopFault)
    M1_SwitchStopFault                       0x08005b6d   Thumb Code    12  statemachine.o(.text.M1_SwitchStopFault)
    [Anonymous Symbol]                       0x08005b74   Section        0  statemachine.o(.text.M1_SwitchStopRun)
    M1_SwitchStopRun                         0x08005b75   Thumb Code    24  statemachine.o(.text.M1_SwitchStopRun)
    __arm_cp.14_0                            0x08005b84   Number         4  statemachine.o(.text.M1_SwitchStopRun)
    __arm_cp.14_1                            0x08005b88   Number         4  statemachine.o(.text.M1_SwitchStopRun)
    [Anonymous Symbol]                       0x08005b8c   Section        0  statemachine.o(.text.MCFLIB_Clark_Sat_S16)
    MCFLIB_Clark_Sat_S16                     0x08005b8d   Thumb Code   124  statemachine.o(.text.MCFLIB_Clark_Sat_S16)
    [Anonymous Symbol]                       0x08005bf8   Section        0  winddetection.o(.text.MCFLIB_Clark_Sat_S16)
    MCFLIB_Clark_Sat_S16                     0x08005bf9   Thumb Code   124  winddetection.o(.text.MCFLIB_Clark_Sat_S16)
    __arm_cp.1_0                             0x08005c64   Number         4  winddetection.o(.text.MCFLIB_Clark_Sat_S16)
    __arm_cp.1_1                             0x08005c68   Number         4  winddetection.o(.text.MCFLIB_Clark_Sat_S16)
    __arm_cp.1_2                             0x08005c6c   Number         4  winddetection.o(.text.MCFLIB_Clark_Sat_S16)
    __arm_cp.1_3                             0x08005c70   Number         4  winddetection.o(.text.MCFLIB_Clark_Sat_S16)
    [Anonymous Symbol]                       0x08005c74   Section        0  foc_pmsm.o(.text.MCFLIB_InvPark_S16)
    MCFLIB_InvPark_S16                       0x08005c75   Thumb Code   104  foc_pmsm.o(.text.MCFLIB_InvPark_S16)
    [Anonymous Symbol]                       0x08005cdc   Section        0  winddetection.o(.text.MCFLIB_InvPark_S16)
    MCFLIB_InvPark_S16                       0x08005cdd   Thumb Code   104  winddetection.o(.text.MCFLIB_InvPark_S16)
    [Anonymous Symbol]                       0x08005d44   Section        0  foc_pmsm.o(.text.MCFLIB_Park_S16)
    MCFLIB_Park_S16                          0x08005d45   Thumb Code   104  foc_pmsm.o(.text.MCFLIB_Park_S16)
    [Anonymous Symbol]                       0x08005dac   Section        0  winddetection.o(.text.MCFLIB_Park_S16)
    MCFLIB_Park_S16                          0x08005dad   Thumb Code   104  winddetection.o(.text.MCFLIB_Park_S16)
    [Anonymous Symbol]                       0x08005e14   Section        0  mm32_it.o(.text.MIT_ptGetCaptureData)
    __arm_cp.36_0                            0x08005e18   Number         4  mm32_it.o(.text.MIT_ptGetCaptureData)
    [Anonymous Symbol]                       0x08005e1c   Section        0  mm32_it.o(.text.MIT_vReadNormalADCValue)
    __arm_cp.23_0                            0x08005e9c   Number         4  mm32_it.o(.text.MIT_vReadNormalADCValue)
    __arm_cp.23_1                            0x08005ea0   Number         4  mm32_it.o(.text.MIT_vReadNormalADCValue)
    __arm_cp.23_2                            0x08005ea4   Number         4  mm32_it.o(.text.MIT_vReadNormalADCValue)
    __arm_cp.23_3                            0x08005ea8   Number         4  mm32_it.o(.text.MIT_vReadNormalADCValue)
    __arm_cp.23_4                            0x08005eac   Number         4  mm32_it.o(.text.MIT_vReadNormalADCValue)
    __arm_cp.23_5                            0x08005eb0   Number         4  mm32_it.o(.text.MIT_vReadNormalADCValue)
    __arm_cp.23_6                            0x08005eb4   Number         4  mm32_it.o(.text.MIT_vReadNormalADCValue)
    __arm_cp.23_7                            0x08005eb8   Number         4  mm32_it.o(.text.MIT_vReadNormalADCValue)
    __arm_cp.23_8                            0x08005ebc   Number         4  mm32_it.o(.text.MIT_vReadNormalADCValue)
    [Anonymous Symbol]                       0x08005ec0   Section        0  user_function.o(.text.MLIB_AddSat_Q31)
    MLIB_AddSat_Q31                          0x08005ec1   Thumb Code   108  user_function.o(.text.MLIB_AddSat_Q31)
    [Anonymous Symbol]                       0x08005f28   Section        0  statemachine.o(.text.MLIB_Conv_Q15l)
    MLIB_Conv_Q15l                           0x08005f29   Thumb Code    16  statemachine.o(.text.MLIB_Conv_Q15l)
    [Anonymous Symbol]                       0x08005f38   Section        0  statemachine.o(.text.MLIB_Conv_Q31s)
    MLIB_Conv_Q31s                           0x08005f39   Thumb Code    18  statemachine.o(.text.MLIB_Conv_Q31s)
    [Anonymous Symbol]                       0x08005f4a   Section        0  user_function.o(.text.MLIB_FilterMA_Q15)
    MLIB_FilterMA_Q15                        0x08005f4b   Thumb Code    70  user_function.o(.text.MLIB_FilterMA_Q15)
    [Anonymous Symbol]                       0x08005f90   Section        0  speedcontrol.o(.text.MLIB_Mul_Q15)
    MLIB_Mul_Q15                             0x08005f91   Thumb Code    38  speedcontrol.o(.text.MLIB_Mul_Q15)
    [Anonymous Symbol]                       0x08005fb6   Section        0  foc_pmsm.o(.text.MLIB_Mul_Q15)
    MLIB_Mul_Q15                             0x08005fb7   Thumb Code    38  foc_pmsm.o(.text.MLIB_Mul_Q15)
    [Anonymous Symbol]                       0x08005fdc   Section        0  statemachine.o(.text.MLIB_Mul_Q15)
    MLIB_Mul_Q15                             0x08005fdd   Thumb Code    38  statemachine.o(.text.MLIB_Mul_Q15)
    [Anonymous Symbol]                       0x08006002   Section        0  fsrotorlock.o(.text.MLIB_Mul_Q15)
    MLIB_Mul_Q15                             0x08006003   Thumb Code    38  fsrotorlock.o(.text.MLIB_Mul_Q15)
    [Anonymous Symbol]                       0x08006028   Section        0  speedmonitor.o(.text.MLIB_Mul_Q15)
    MLIB_Mul_Q15                             0x08006029   Thumb Code    38  speedmonitor.o(.text.MLIB_Mul_Q15)
    [Anonymous Symbol]                       0x0800604e   Section        0  fscommon.o(.text.MLIB_Mul_Q15)
    MLIB_Mul_Q15                             0x0800604f   Thumb Code    38  fscommon.o(.text.MLIB_Mul_Q15)
    [Anonymous Symbol]                       0x08006074   Section        0  user_function.o(.text.MLIB_Neg_Q15)
    MLIB_Neg_Q15                             0x08006075   Thumb Code    20  user_function.o(.text.MLIB_Neg_Q15)
    [Anonymous Symbol]                       0x08006088   Section        0  foc_pmsm.o(.text.MLIB_Neg_Q15)
    MLIB_Neg_Q15                             0x08006089   Thumb Code    20  foc_pmsm.o(.text.MLIB_Neg_Q15)
    [Anonymous Symbol]                       0x0800609c   Section        0  user_function.o(.text.MLIB_Sat_Q15)
    MLIB_Sat_Q15                             0x0800609d   Thumb Code    88  user_function.o(.text.MLIB_Sat_Q15)
    __arm_cp.10_0                            0x080060e8   Number         4  user_function.o(.text.MLIB_Sat_Q15)
    __arm_cp.10_1                            0x080060ec   Number         4  user_function.o(.text.MLIB_Sat_Q15)
    __arm_cp.10_2                            0x080060f0   Number         4  user_function.o(.text.MLIB_Sat_Q15)
    [Anonymous Symbol]                       0x080060f4   Section        0  user_function.o(.text.MLIB_ShR_Q31)
    MLIB_ShR_Q31                             0x080060f5   Thumb Code    28  user_function.o(.text.MLIB_ShR_Q31)
    [Anonymous Symbol]                       0x08006110   Section        0  user_function.o(.text.MLIB_SubSat_Q31)
    MLIB_SubSat_Q31                          0x08006111   Thumb Code   112  user_function.o(.text.MLIB_SubSat_Q31)
    __arm_cp.9_0                             0x0800617c   Number         4  user_function.o(.text.MLIB_SubSat_Q31)
    [Anonymous Symbol]                       0x08006180   Section        0  modbus.o(.text.MOS_bGetInitStatus)
    __arm_cp.18_0                            0x0800618c   Number         4  modbus.o(.text.MOS_bGetInitStatus)
    [Anonymous Symbol]                       0x08006190   Section        0  modbus.o(.text.MOS_vCallbackInit)
    __arm_cp.5_0                             0x080061a0   Number         4  modbus.o(.text.MOS_vCallbackInit)
    __arm_cp.5_1                             0x080061a4   Number         4  modbus.o(.text.MOS_vCallbackInit)
    [Anonymous Symbol]                       0x080061a8   Section        0  modbus.o(.text.MOS_vCheckReadAllDataCommand)
    __arm_cp.14_1                            0x080061f0   Number         4  modbus.o(.text.MOS_vCheckReadAllDataCommand)
    [Anonymous Symbol]                       0x080061f4   Section        0  modbus.o(.text.MOS_vCheckWriteDataCommand)
    __arm_cp.12_1                            0x0800623c   Number         4  modbus.o(.text.MOS_vCheckWriteDataCommand)
    [Anonymous Symbol]                       0x08006240   Section        0  modbus.o(.text.MOS_vConfigureSlaveAddress)
    [Anonymous Symbol]                       0x0800624c   Section        0  modbus.o(.text.MOS_vDataReceiveInterrupt)
    [Anonymous Symbol]                       0x08006294   Section        0  modbus.o(.text.MOS_vEventHandler)
    __arm_cp.1_0                             0x080062f0   Number         4  modbus.o(.text.MOS_vEventHandler)
    [Anonymous Symbol]                       0x080062f4   Section        0  modbus.o(.text.MOS_vModBusHandler_2)
    __arm_cp.17_1                            0x080063c4   Number         4  modbus.o(.text.MOS_vModBusHandler_2)
    __arm_cp.17_2                            0x080063c8   Number         4  modbus.o(.text.MOS_vModBusHandler_2)
    [Anonymous Symbol]                       0x080063cc   Section        0  modbus.o(.text.MOS_vModbudFun6)
    __arm_cp.13_0                            0x080064dc   Number         4  modbus.o(.text.MOS_vModbudFun6)
    [Anonymous Symbol]                       0x080064e0   Section        0  modbus.o(.text.MOS_vModbusFun4)
    __arm_cp.15_1                            0x08006604   Number         4  modbus.o(.text.MOS_vModbusFun4)
    __arm_cp.15_2                            0x08006608   Number         4  modbus.o(.text.MOS_vModbusFun4)
    [Anonymous Symbol]                       0x0800660c   Section        0  modbus.o(.text.MOS_vModbusInit)
    __arm_cp.8_0                             0x08006628   Number         4  modbus.o(.text.MOS_vModbusInit)
    __arm_cp.8_1                             0x0800662c   Number         4  modbus.o(.text.MOS_vModbusInit)
    [Anonymous Symbol]                       0x08006630   Section        0  modbus.o(.text.MOS_vModbusProtocalConfig)
    [Anonymous Symbol]                       0x08006638   Section        0  modbus.o(.text.MOS_vReadWriteDataCommon)
    __arm_cp.16_0                            0x08006674   Number         4  modbus.o(.text.MOS_vReadWriteDataCommon)
    __arm_cp.16_1                            0x08006678   Number         4  modbus.o(.text.MOS_vReadWriteDataCommon)
    [Anonymous Symbol]                       0x0800667c   Section        0  modbus.o(.text.MOS_vRegisterHandler)
    [Anonymous Symbol]                       0x080066c0   Section        0  modbus.o(.text.MOS_vSlaveAddressUpdate)
    __arm_cp.4_0                             0x080066d0   Number         4  modbus.o(.text.MOS_vSlaveAddressUpdate)
    [Anonymous Symbol]                       0x080066d4   Section        0  modbus.o(.text.MOS_vTimeoutInterrupt)
    __arm_cp.6_0                             0x08006704   Number         4  modbus.o(.text.MOS_vTimeoutInterrupt)
    __arm_cp.6_1                             0x08006708   Number         4  modbus.o(.text.MOS_vTimeoutInterrupt)
    [Anonymous Symbol]                       0x0800670c   Section        0  modbus.o(.text.MOS_vTriggerEvent)
    __arm_cp.0_0                             0x08006734   Number         4  modbus.o(.text.MOS_vTriggerEvent)
    [Anonymous Symbol]                       0x08006738   Section        0  modbus.o(.text.MOS_vWriteDataIntoEEP)
    [Anonymous Symbol]                       0x0800673c   Section        0  statemachine.o(.text.MOT_vAngleSmoothSwitch)
    __arm_cp.23_0                            0x080067c4   Number         4  statemachine.o(.text.MOT_vAngleSmoothSwitch)
    __arm_cp.23_1                            0x080067c8   Number         4  statemachine.o(.text.MOT_vAngleSmoothSwitch)
    __arm_cp.23_2                            0x080067cc   Number         4  statemachine.o(.text.MOT_vAngleSmoothSwitch)
    __arm_cp.23_3                            0x080067d0   Number         4  statemachine.o(.text.MOT_vAngleSmoothSwitch)
    [Anonymous Symbol]                       0x080067d4   Section        0  iec60730_b_aux.o(.text.NMI_Handler)
    __arm_cp.6_0                             0x080067ec   Number         4  iec60730_b_aux.o(.text.NMI_Handler)
    [Anonymous Symbol]                       0x080067f0   Section        0  mm32_it.o(.text.NVIC_Configure)
    [Anonymous Symbol]                       0x0800681c   Section        0  hal_misc.o(.text.NVIC_Init)
    __arm_cp.0_0                             0x08006888   Number         4  hal_misc.o(.text.NVIC_Init)
    __arm_cp.0_1                             0x0800688c   Number         4  hal_misc.o(.text.NVIC_Init)
    __arm_cp.0_2                             0x08006890   Number         4  hal_misc.o(.text.NVIC_Init)
    __arm_cp.0_3                             0x08006894   Number         4  hal_misc.o(.text.NVIC_Init)
    [Anonymous Symbol]                       0x08006898   Section        0  hal_opamp.o(.text.OPAMP_Configure)
    __arm_cp.0_0                             0x080068cc   Number         4  hal_opamp.o(.text.OPAMP_Configure)
    [Anonymous Symbol]                       0x080068d0   Section        0  foc_pmsm.o(.text.PMSM_Obs)
    __arm_cp.2_0                             0x0800697c   Number         4  foc_pmsm.o(.text.PMSM_Obs)
    [Anonymous Symbol]                       0x08006980   Section        0  mm32_it.o(.text.PVD_IRQHandler)
    [Anonymous Symbol]                       0x08006982   Section        0  hal_iwdg.o(.text.PVU_CheckStatus)
    [Anonymous Symbol]                       0x08006996   Section        0  mm32_it.o(.text.PWM_IRQHandler)
    [Anonymous Symbol]                       0x08006998   Section        0  statemachine.o(.text.PWM_Update)
    __arm_cp.21_0                            0x08006a0c   Number         4  statemachine.o(.text.PWM_Update)
    [Anonymous Symbol]                       0x08006a10   Section        0  board.o(.text.Peripheral_Init)
    __arm_cp.22_0                            0x08006a4c   Number         4  board.o(.text.Peripheral_Init)
    __arm_cp.22_1                            0x08006a50   Number         4  board.o(.text.Peripheral_Init)
    [Anonymous Symbol]                       0x08006a54   Section        0  hal_rcc.o(.text.RCC_AHBPeriphClockCmd)
    [Anonymous Symbol]                       0x08006a88   Section        0  hal_rcc.o(.text.RCC_APB1PeriphClockCmd)
    [Anonymous Symbol]                       0x08006abc   Section        0  hal_rcc.o(.text.RCC_APB2PeriphClockCmd)
    [Anonymous Symbol]                       0x08006af0   Section        0  hal_rcc.o(.text.RCC_ClearITPendingBit)
    __arm_cp.33_0                            0x08006b0c   Number         4  hal_rcc.o(.text.RCC_ClearITPendingBit)
    [Anonymous Symbol]                       0x08006b10   Section        0  hal_rcc.o(.text.RCC_ClockSecuritySystemCmd)
    [Anonymous Symbol]                       0x08006b34   Section        0  hal_rcc.o(.text.RCC_GPIO_ClockCmd)
    __arm_cp.49_0                            0x08006c18   Number         4  hal_rcc.o(.text.RCC_GPIO_ClockCmd)
    __arm_cp.49_1                            0x08006c1c   Number         4  hal_rcc.o(.text.RCC_GPIO_ClockCmd)
    __arm_cp.49_2                            0x08006c20   Number         4  hal_rcc.o(.text.RCC_GPIO_ClockCmd)
    __arm_cp.49_3                            0x08006c24   Number         4  hal_rcc.o(.text.RCC_GPIO_ClockCmd)
    [Anonymous Symbol]                       0x08006c28   Section        0  hal_rcc.o(.text.RCC_GetFlagStatus)
    __arm_cp.2_1                             0x08006c8c   Number         4  hal_rcc.o(.text.RCC_GetFlagStatus)
    __arm_cp.2_2                             0x08006c90   Number         4  hal_rcc.o(.text.RCC_GetFlagStatus)
    [Anonymous Symbol]                       0x08006c94   Section        0  hal_rcc.o(.text.RCC_GetHCLKFreq)
    [Anonymous Symbol]                       0x08006cac   Section        0  hal_rcc.o(.text.RCC_GetPCLK1Freq)
    [Anonymous Symbol]                       0x08006cc8   Section        0  hal_rcc.o(.text.RCC_GetPCLK2Freq)
    __arm_cp.19_1                            0x08006ce4   Number         4  hal_rcc.o(.text.RCC_GetPCLK2Freq)
    [Anonymous Symbol]                       0x08006ce8   Section        0  hal_rcc.o(.text.RCC_GetSysClockFreq)
    __arm_cp.16_0                            0x08006d98   Number         4  hal_rcc.o(.text.RCC_GetSysClockFreq)
    __arm_cp.16_1                            0x08006d9c   Number         4  hal_rcc.o(.text.RCC_GetSysClockFreq)
    __arm_cp.16_2                            0x08006da0   Number         4  hal_rcc.o(.text.RCC_GetSysClockFreq)
    __arm_cp.16_3                            0x08006da4   Number         4  hal_rcc.o(.text.RCC_GetSysClockFreq)
    __arm_cp.16_4                            0x08006da8   Number         4  hal_rcc.o(.text.RCC_GetSysClockFreq)
    [Anonymous Symbol]                       0x08006dac   Section        0  mm32_it.o(.text.RCC_IRQHandler)
    [Anonymous Symbol]                       0x08006db0   Section        0  hal_rcc.o(.text.RCC_LSICmd)
    __arm_cp.15_0                            0x08006dd0   Number         4  hal_rcc.o(.text.RCC_LSICmd)
    [Anonymous Symbol]                       0x08006dd4   Section        0  hal_rcc.o(.text.RCC_UART_ClockCmd)
    __arm_cp.52_0                            0x08006e50   Number         4  hal_rcc.o(.text.RCC_UART_ClockCmd)
    __arm_cp.52_1                            0x08006e54   Number         4  hal_rcc.o(.text.RCC_UART_ClockCmd)
    __arm_cp.52_2                            0x08006e58   Number         4  hal_rcc.o(.text.RCC_UART_ClockCmd)
    __arm_cp.52_3                            0x08006e5c   Number         4  hal_rcc.o(.text.RCC_UART_ClockCmd)
    [Anonymous Symbol]                       0x08006e60   Section        0  fsphaseloss.o(.text.RMP_vOpenPhaseCheckComplex)
    __arm_cp.4_0                             0x08007098   Number         4  fsphaseloss.o(.text.RMP_vOpenPhaseCheckComplex)
    __arm_cp.4_1                             0x0800709c   Number         4  fsphaseloss.o(.text.RMP_vOpenPhaseCheckComplex)
    __arm_cp.4_2                             0x080070a0   Number         4  fsphaseloss.o(.text.RMP_vOpenPhaseCheckComplex)
    __arm_cp.4_3                             0x080070a4   Number         4  fsphaseloss.o(.text.RMP_vOpenPhaseCheckComplex)
    [Anonymous Symbol]                       0x080070a8   Section        0  hal_iwdg.o(.text.RVU_CheckStatus)
    [Anonymous Symbol]                       0x080070bc   Section        0  iec60730_b_startup.o(.text.Ramtest_config)
    __arm_cp.1_0                             0x080070d8   Number         4  iec60730_b_startup.o(.text.Ramtest_config)
    __arm_cp.1_1                             0x080070dc   Number         4  iec60730_b_startup.o(.text.Ramtest_config)
    __arm_cp.1_2                             0x080070e0   Number         4  iec60730_b_startup.o(.text.Ramtest_config)
    __arm_cp.1_3                             0x080070e4   Number         4  iec60730_b_startup.o(.text.Ramtest_config)
    __arm_cp.1_4                             0x080070e8   Number         4  iec60730_b_startup.o(.text.Ramtest_config)
    __arm_cp.1_5                             0x080070ec   Number         4  iec60730_b_startup.o(.text.Ramtest_config)
    __arm_cp.1_6                             0x080070f0   Number         4  iec60730_b_startup.o(.text.Ramtest_config)
    __arm_cp.1_7                             0x080070f4   Number         4  iec60730_b_startup.o(.text.Ramtest_config)
    [Anonymous Symbol]                       0x080070f8   Section        0  speedcontrol.o(.text.SCL_bDataFilter)
    __arm_cp.1_2                             0x0800715c   Number         4  speedcontrol.o(.text.SCL_bDataFilter)
    [Anonymous Symbol]                       0x08007160   Section        0  speedcontrol.o(.text.SCL_vCalcualteTargetSpeed)
    __arm_cp.3_1                             0x08007324   Number         4  speedcontrol.o(.text.SCL_vCalcualteTargetSpeed)
    __arm_cp.3_2                             0x08007328   Number         4  speedcontrol.o(.text.SCL_vCalcualteTargetSpeed)
    __arm_cp.3_3                             0x0800732c   Number         4  speedcontrol.o(.text.SCL_vCalcualteTargetSpeed)
    __arm_cp.3_4                             0x08007330   Number         4  speedcontrol.o(.text.SCL_vCalcualteTargetSpeed)
    __arm_cp.3_6                             0x08007334   Number         4  speedcontrol.o(.text.SCL_vCalcualteTargetSpeed)
    __arm_cp.3_10                            0x08007338   Number         4  speedcontrol.o(.text.SCL_vCalcualteTargetSpeed)
    __arm_cp.3_11                            0x0800733c   Number         4  speedcontrol.o(.text.SCL_vCalcualteTargetSpeed)
    __arm_cp.3_14                            0x08007340   Number         4  speedcontrol.o(.text.SCL_vCalcualteTargetSpeed)
    [Anonymous Symbol]                       0x08007344   Section        0  speedcontrol.o(.text.SCL_vCalculateActualSpeedFromPU)
    __arm_cp.2_2                             0x08007388   Number         4  speedcontrol.o(.text.SCL_vCalculateActualSpeedFromPU)
    [Anonymous Symbol]                       0x0800738c   Section        0  speedcontrol.o(.text.SCL_vMotorDirectionCheck)
    __arm_cp.0_0                             0x08007440   Number         4  speedcontrol.o(.text.SCL_vMotorDirectionCheck)
    __arm_cp.0_1                             0x08007444   Number         4  speedcontrol.o(.text.SCL_vMotorDirectionCheck)
    __arm_cp.0_2                             0x08007448   Number         4  speedcontrol.o(.text.SCL_vMotorDirectionCheck)
    __arm_cp.0_3                             0x0800744c   Number         4  speedcontrol.o(.text.SCL_vMotorDirectionCheck)
    __arm_cp.0_4                             0x08007450   Number         4  speedcontrol.o(.text.SCL_vMotorDirectionCheck)
    [Anonymous Symbol]                       0x08007454   Section        0  speedcontrol.o(.text.SCL_vSpeedControlHandle)
    __arm_cp.7_0                             0x080074f4   Number         4  speedcontrol.o(.text.SCL_vSpeedControlHandle)
    __arm_cp.7_1                             0x080074f8   Number         4  speedcontrol.o(.text.SCL_vSpeedControlHandle)
    __arm_cp.7_3                             0x080074fc   Number         4  speedcontrol.o(.text.SCL_vSpeedControlHandle)
    [Anonymous Symbol]                       0x08007500   Section        0  speedcontrol.o(.text.SCL_vSpeedControlModbusHandle)
    __arm_cp.6_0                             0x08007624   Number         4  speedcontrol.o(.text.SCL_vSpeedControlModbusHandle)
    __arm_cp.6_1                             0x08007628   Number         4  speedcontrol.o(.text.SCL_vSpeedControlModbusHandle)
    __arm_cp.6_2                             0x0800762c   Number         4  speedcontrol.o(.text.SCL_vSpeedControlModbusHandle)
    __arm_cp.6_3                             0x08007630   Number         4  speedcontrol.o(.text.SCL_vSpeedControlModbusHandle)
    __arm_cp.6_4                             0x08007634   Number         4  speedcontrol.o(.text.SCL_vSpeedControlModbusHandle)
    __arm_cp.6_5                             0x08007638   Number         4  speedcontrol.o(.text.SCL_vSpeedControlModbusHandle)
    __arm_cp.6_6                             0x0800763c   Number         4  speedcontrol.o(.text.SCL_vSpeedControlModbusHandle)
    __arm_cp.6_7                             0x08007640   Number         4  speedcontrol.o(.text.SCL_vSpeedControlModbusHandle)
    __arm_cp.6_8                             0x08007644   Number         4  speedcontrol.o(.text.SCL_vSpeedControlModbusHandle)
    __arm_cp.6_9                             0x08007648   Number         4  speedcontrol.o(.text.SCL_vSpeedControlModbusHandle)
    __arm_cp.6_10                            0x0800764c   Number         4  speedcontrol.o(.text.SCL_vSpeedControlModbusHandle)
    __arm_cp.6_11                            0x08007650   Number         4  speedcontrol.o(.text.SCL_vSpeedControlModbusHandle)
    __arm_cp.6_12                            0x08007654   Number         4  speedcontrol.o(.text.SCL_vSpeedControlModbusHandle)
    [Anonymous Symbol]                       0x08007658   Section        0  speedcontrol.o(.text.SCL_vSpeedControlPWMHandle)
    __arm_cp.5_0                             0x080076c8   Number         4  speedcontrol.o(.text.SCL_vSpeedControlPWMHandle)
    __arm_cp.5_1                             0x080076cc   Number         4  speedcontrol.o(.text.SCL_vSpeedControlPWMHandle)
    [Anonymous Symbol]                       0x080076d0   Section        0  speedmonitor.o(.text.SMR_vCheckSpeedMonitor)
    [Anonymous Symbol]                       0x080076d8   Section        0  speedmonitor.o(.text.SMR_vCheckSpeedMonitorImplement)
    __arm_cp.10_3                            0x080077f0   Number         4  speedmonitor.o(.text.SMR_vCheckSpeedMonitorImplement)
    __arm_cp.10_4                            0x080077f4   Number         4  speedmonitor.o(.text.SMR_vCheckSpeedMonitorImplement)
    __arm_cp.10_5                            0x080077f8   Number         4  speedmonitor.o(.text.SMR_vCheckSpeedMonitorImplement)
    [Anonymous Symbol]                       0x080077fc   Section        0  speedmonitor.o(.text.SMR_vIndependentMotorModelCalculation)
    __arm_cp.5_0                             0x08007a14   Number         4  speedmonitor.o(.text.SMR_vIndependentMotorModelCalculation)
    __arm_cp.5_1                             0x08007a18   Number         4  speedmonitor.o(.text.SMR_vIndependentMotorModelCalculation)
    __arm_cp.5_2                             0x08007a1c   Number         4  speedmonitor.o(.text.SMR_vIndependentMotorModelCalculation)
    __arm_cp.5_3                             0x08007a20   Number         4  speedmonitor.o(.text.SMR_vIndependentMotorModelCalculation)
    __arm_cp.5_4                             0x08007a24   Number         4  speedmonitor.o(.text.SMR_vIndependentMotorModelCalculation)
    __arm_cp.5_5                             0x08007a28   Number         4  speedmonitor.o(.text.SMR_vIndependentMotorModelCalculation)
    __arm_cp.5_6                             0x08007a2c   Number         4  speedmonitor.o(.text.SMR_vIndependentMotorModelCalculation)
    __arm_cp.5_7                             0x08007a30   Number         4  speedmonitor.o(.text.SMR_vIndependentMotorModelCalculation)
    __arm_cp.5_8                             0x08007a34   Number         4  speedmonitor.o(.text.SMR_vIndependentMotorModelCalculation)
    __arm_cp.5_9                             0x08007a38   Number         4  speedmonitor.o(.text.SMR_vIndependentMotorModelCalculation)
    __arm_cp.5_10                            0x08007a3c   Number         4  speedmonitor.o(.text.SMR_vIndependentMotorModelCalculation)
    __arm_cp.5_11                            0x08007a40   Number         4  speedmonitor.o(.text.SMR_vIndependentMotorModelCalculation)
    __arm_cp.5_12                            0x08007a44   Number         4  speedmonitor.o(.text.SMR_vIndependentMotorModelCalculation)
    [Anonymous Symbol]                       0x08007a48   Section        0  speedmonitor.o(.text.SMR_vSpeedEvaluation)
    [Anonymous Symbol]                       0x08007a50   Section        0  speedmonitor.o(.text.SMR_vSpeedEvaluationComplex)
    __arm_cp.8_0                             0x08007a70   Number         4  speedmonitor.o(.text.SMR_vSpeedEvaluationComplex)
    __arm_cp.8_1                             0x08007a74   Number         4  speedmonitor.o(.text.SMR_vSpeedEvaluationComplex)
    [Anonymous Symbol]                       0x08007a78   Section        0  mm32_it.o(.text.SPI1_IRQHandler)
    [Anonymous Symbol]                       0x08007a7a   Section        0  mm32_it.o(.text.SPI2_IRQHandler)
    [Anonymous Symbol]                       0x08007a7c   Section        0  fsclock.o(.text.STK_tGetSafeTime)
    [Anonymous Symbol]                       0x08007a90   Section        0  mm32_it.o(.text.STK_vSetGenericTimerCallbackFunc)
    __arm_cp.34_0                            0x08007aa4   Number         4  mm32_it.o(.text.STK_vSetGenericTimerCallbackFunc)
    [Anonymous Symbol]                       0x08007aa8   Section        0  fsclock.o(.text.STK_vTriggerSafeTime)
    __arm_cp.0_0                             0x08007b74   Number         4  fsclock.o(.text.STK_vTriggerSafeTime)
    __arm_cp.0_1                             0x08007b78   Number         4  fsclock.o(.text.STK_vTriggerSafeTime)
    __arm_cp.0_2                             0x08007b7c   Number         4  fsclock.o(.text.STK_vTriggerSafeTime)
    __arm_cp.0_3                             0x08007b80   Number         4  fsclock.o(.text.STK_vTriggerSafeTime)
    __arm_cp.0_4                             0x08007b84   Number         4  fsclock.o(.text.STK_vTriggerSafeTime)
    __arm_cp.0_5                             0x08007b88   Number         4  fsclock.o(.text.STK_vTriggerSafeTime)
    __arm_cp.0_6                             0x08007b8c   Number         4  fsclock.o(.text.STK_vTriggerSafeTime)
    __arm_cp.0_7                             0x08007b90   Number         4  fsclock.o(.text.STK_vTriggerSafeTime)
    [Anonymous Symbol]                       0x08007b94   Section        0  system_mm32spin0280.o(.text.SetSysClock)
    SetSysClock                              0x08007b95   Thumb Code    14  system_mm32spin0280.o(.text.SetSysClock)
    [Anonymous Symbol]                       0x08007ba4   Section        0  system_mm32spin0280.o(.text.SetSysClockToDefaultHSI)
    SetSysClockToDefaultHSI                  0x08007ba5   Thumb Code   108  system_mm32spin0280.o(.text.SetSysClockToDefaultHSI)
    __arm_cp.1_2                             0x08007bf0   Number         4  system_mm32spin0280.o(.text.SetSysClockToDefaultHSI)
    __arm_cp.1_3                             0x08007bf4   Number         4  system_mm32spin0280.o(.text.SetSysClockToDefaultHSI)
    __arm_cp.1_4                             0x08007bf8   Number         4  system_mm32spin0280.o(.text.SetSysClockToDefaultHSI)
    __arm_cp.1_6                             0x08007bfc   Number         4  system_mm32spin0280.o(.text.SetSysClockToDefaultHSI)
    __arm_cp.1_7                             0x08007c00   Number         4  system_mm32spin0280.o(.text.SetSysClockToDefaultHSI)
    [Anonymous Symbol]                       0x08007c04   Section        0  system_mm32spin0280.o(.text.SetSysClockWithHsiPLL)
    SetSysClockWithHsiPLL                    0x08007c05   Thumb Code   404  system_mm32spin0280.o(.text.SetSysClockWithHsiPLL)
    __arm_cp.5_0                             0x08007d74   Number         4  system_mm32spin0280.o(.text.SetSysClockWithHsiPLL)
    __arm_cp.5_1                             0x08007d78   Number         4  system_mm32spin0280.o(.text.SetSysClockWithHsiPLL)
    __arm_cp.5_2                             0x08007d7c   Number         4  system_mm32spin0280.o(.text.SetSysClockWithHsiPLL)
    __arm_cp.5_3                             0x08007d80   Number         4  system_mm32spin0280.o(.text.SetSysClockWithHsiPLL)
    __arm_cp.5_4                             0x08007d84   Number         4  system_mm32spin0280.o(.text.SetSysClockWithHsiPLL)
    __arm_cp.5_5                             0x08007d88   Number         4  system_mm32spin0280.o(.text.SetSysClockWithHsiPLL)
    __arm_cp.5_7                             0x08007d8c   Number         4  system_mm32spin0280.o(.text.SetSysClockWithHsiPLL)
    __arm_cp.5_8                             0x08007d90   Number         4  system_mm32spin0280.o(.text.SetSysClockWithHsiPLL)
    [Anonymous Symbol]                       0x08007d94   Section        0  iec60730_b_runtimetest.o(.text.SysTick_Config)
    SysTick_Config                           0x08007d95   Thumb Code    88  iec60730_b_runtimetest.o(.text.SysTick_Config)
    __arm_cp.1_0                             0x08007de0   Number         4  iec60730_b_runtimetest.o(.text.SysTick_Config)
    __arm_cp.1_1                             0x08007de4   Number         4  iec60730_b_runtimetest.o(.text.SysTick_Config)
    __arm_cp.1_2                             0x08007de8   Number         4  iec60730_b_runtimetest.o(.text.SysTick_Config)
    [Anonymous Symbol]                       0x08007dec   Section        0  iec60730_b_aux.o(.text.SysTick_Handler)
    __arm_cp.7_0                             0x08007f40   Number         4  iec60730_b_aux.o(.text.SysTick_Handler)
    __arm_cp.7_1                             0x08007f44   Number         4  iec60730_b_aux.o(.text.SysTick_Handler)
    __arm_cp.7_2                             0x08007f48   Number         4  iec60730_b_aux.o(.text.SysTick_Handler)
    __arm_cp.7_3                             0x08007f4c   Number         4  iec60730_b_aux.o(.text.SysTick_Handler)
    __arm_cp.7_4                             0x08007f50   Number         4  iec60730_b_aux.o(.text.SysTick_Handler)
    __arm_cp.7_5                             0x08007f54   Number         4  iec60730_b_aux.o(.text.SysTick_Handler)
    __arm_cp.7_6                             0x08007f58   Number         4  iec60730_b_aux.o(.text.SysTick_Handler)
    __arm_cp.7_7                             0x08007f5c   Number         4  iec60730_b_aux.o(.text.SysTick_Handler)
    __arm_cp.7_8                             0x08007f60   Number         4  iec60730_b_aux.o(.text.SysTick_Handler)
    __arm_cp.7_9                             0x08007f64   Number         4  iec60730_b_aux.o(.text.SysTick_Handler)
    __arm_cp.7_10                            0x08007f68   Number         4  iec60730_b_aux.o(.text.SysTick_Handler)
    __arm_cp.7_11                            0x08007f6c   Number         4  iec60730_b_aux.o(.text.SysTick_Handler)
    __arm_cp.7_12                            0x08007f70   Number         4  iec60730_b_aux.o(.text.SysTick_Handler)
    __arm_cp.7_13                            0x08007f74   Number         4  iec60730_b_aux.o(.text.SysTick_Handler)
    __arm_cp.7_14                            0x08007f78   Number         4  iec60730_b_aux.o(.text.SysTick_Handler)
    __arm_cp.7_15                            0x08007f7c   Number         4  iec60730_b_aux.o(.text.SysTick_Handler)
    __arm_cp.7_16                            0x08007f80   Number         4  iec60730_b_aux.o(.text.SysTick_Handler)
    [Anonymous Symbol]                       0x08007f84   Section        0  system_mm32spin0280.o(.text.SystemCoreClockUpdate)
    __arm_cp.4_0                             0x08008038   Number         4  system_mm32spin0280.o(.text.SystemCoreClockUpdate)
    __arm_cp.4_1                             0x0800803c   Number         4  system_mm32spin0280.o(.text.SystemCoreClockUpdate)
    __arm_cp.4_2                             0x08008040   Number         4  system_mm32spin0280.o(.text.SystemCoreClockUpdate)
    __arm_cp.4_3                             0x08008044   Number         4  system_mm32spin0280.o(.text.SystemCoreClockUpdate)
    __arm_cp.4_4                             0x08008048   Number         4  system_mm32spin0280.o(.text.SystemCoreClockUpdate)
    __arm_cp.4_5                             0x0800804c   Number         4  system_mm32spin0280.o(.text.SystemCoreClockUpdate)
    [Anonymous Symbol]                       0x08008050   Section        0  system_mm32spin0280.o(.text.SystemInit)
    [Anonymous Symbol]                       0x0800805c   Section        0  hal_tim.o(.text.TI1_Configure)
    TI1_Configure                            0x0800805d   Thumb Code    84  hal_tim.o(.text.TI1_Configure)
    [Anonymous Symbol]                       0x080080b0   Section        0  hal_tim.o(.text.TI2_Configure)
    TI2_Configure                            0x080080b1   Thumb Code    90  hal_tim.o(.text.TI2_Configure)
    [Anonymous Symbol]                       0x0800810a   Section        0  hal_tim.o(.text.TI3_Configure)
    TI3_Configure                            0x0800810b   Thumb Code    90  hal_tim.o(.text.TI3_Configure)
    [Anonymous Symbol]                       0x08008164   Section        0  hal_tim.o(.text.TI4_Configure)
    TI4_Configure                            0x08008165   Thumb Code    94  hal_tim.o(.text.TI4_Configure)
    [Anonymous Symbol]                       0x080081c2   Section        0  mm32_it.o(.text.TIM14_IRQHandler)
    [Anonymous Symbol]                       0x080081c4   Section        0  mm32_it.o(.text.TIM16_IRQHandler)
    [Anonymous Symbol]                       0x080081c6   Section        0  mm32_it.o(.text.TIM17_IRQHandler)
    [Anonymous Symbol]                       0x080081c8   Section        0  mm32_it.o(.text.TIM1_BRK_UP_TRG_COM_IRQHandler)
    __arm_cp.16_0                            0x080081fc   Number         4  mm32_it.o(.text.TIM1_BRK_UP_TRG_COM_IRQHandler)
    [Anonymous Symbol]                       0x08008200   Section        0  mm32_it.o(.text.TIM1_CC_IRQHandler)
    [Anonymous Symbol]                       0x08008204   Section        0  iec60730_b_clocktest.o(.text.TIM2_IRQHandler)
    __arm_cp.7_0                             0x080082f4   Number         4  iec60730_b_clocktest.o(.text.TIM2_IRQHandler)
    __arm_cp.7_1                             0x080082f8   Number         4  iec60730_b_clocktest.o(.text.TIM2_IRQHandler)
    __arm_cp.7_2                             0x080082fc   Number         4  iec60730_b_clocktest.o(.text.TIM2_IRQHandler)
    __arm_cp.7_3                             0x08008300   Number         4  iec60730_b_clocktest.o(.text.TIM2_IRQHandler)
    __arm_cp.7_4                             0x08008304   Number         4  iec60730_b_clocktest.o(.text.TIM2_IRQHandler)
    __arm_cp.7_5                             0x08008308   Number         4  iec60730_b_clocktest.o(.text.TIM2_IRQHandler)
    __arm_cp.7_6                             0x0800830c   Number         4  iec60730_b_clocktest.o(.text.TIM2_IRQHandler)
    __arm_cp.7_7                             0x08008310   Number         4  iec60730_b_clocktest.o(.text.TIM2_IRQHandler)
    __arm_cp.7_8                             0x08008314   Number         4  iec60730_b_clocktest.o(.text.TIM2_IRQHandler)
    [Anonymous Symbol]                       0x08008318   Section        0  mm32_it.o(.text.TIM3_IRQHandler)
    __arm_cp.18_1                            0x0800835c   Number         4  mm32_it.o(.text.TIM3_IRQHandler)
    [Anonymous Symbol]                       0x08008360   Section        0  mm32_it.o(.text.TIM8_BRK_UP_TRG_COM_IRQHandler)
    [Anonymous Symbol]                       0x08008362   Section        0  mm32_it.o(.text.TIM8_CC_IRQHandler)
    [Anonymous Symbol]                       0x08008364   Section        0  hal_tim.o(.text.TIM_ARRPreloadConfig)
    [Anonymous Symbol]                       0x08008398   Section        0  hal_tim.o(.text.TIM_BDTRConfig)
    [Anonymous Symbol]                       0x080083cc   Section        0  hal_tim.o(.text.TIM_CCxCmd)
    [Anonymous Symbol]                       0x08008400   Section        0  hal_tim.o(.text.TIM_ClearFlag)
    [Anonymous Symbol]                       0x0800841e   Section        0  hal_tim.o(.text.TIM_ClearITPendingBit)
    [Anonymous Symbol]                       0x0800843c   Section        0  hal_tim.o(.text.TIM_Cmd)
    [Anonymous Symbol]                       0x08008470   Section        0  hal_tim.o(.text.TIM_CtrlPWMOutputs)
    [Anonymous Symbol]                       0x080084a8   Section        0  hal_tim.o(.text.TIM_DeInit)
    __arm_cp.0_0                             0x08008544   Number         4  hal_tim.o(.text.TIM_DeInit)
    __arm_cp.0_3                             0x08008548   Number         4  hal_tim.o(.text.TIM_DeInit)
    [Anonymous Symbol]                       0x0800854c   Section        0  hal_tim.o(.text.TIM_GetCapture1)
    [Anonymous Symbol]                       0x0800855c   Section        0  hal_tim.o(.text.TIM_GetCapture2)
    [Anonymous Symbol]                       0x0800856c   Section        0  hal_tim.o(.text.TIM_GetCapture4)
    [Anonymous Symbol]                       0x0800857c   Section        0  hal_tim.o(.text.TIM_GetCounter)
    [Anonymous Symbol]                       0x0800858c   Section        0  hal_tim.o(.text.TIM_GetFlagStatus)
    [Anonymous Symbol]                       0x080085b6   Section        0  hal_tim.o(.text.TIM_GetITStatus)
    [Anonymous Symbol]                       0x080085fc   Section        0  hal_tim.o(.text.TIM_ICInit)
    [Anonymous Symbol]                       0x080086bc   Section        0  hal_tim.o(.text.TIM_ICStructInit)
    [Anonymous Symbol]                       0x080086e0   Section        0  hal_tim.o(.text.TIM_ITConfig)
    [Anonymous Symbol]                       0x0800871c   Section        0  hal_tim.o(.text.TIM_OC1Init)
    __arm_cp.2_2                             0x080087b8   Number         4  hal_tim.o(.text.TIM_OC1Init)
    __arm_cp.2_3                             0x080087bc   Number         4  hal_tim.o(.text.TIM_OC1Init)
    [Anonymous Symbol]                       0x080087c0   Section        0  hal_tim.o(.text.TIM_OC1PreloadConfig)
    [Anonymous Symbol]                       0x080087e8   Section        0  hal_tim.o(.text.TIM_OC2Init)
    __arm_cp.3_0                             0x0800887c   Number         4  hal_tim.o(.text.TIM_OC2Init)
    __arm_cp.3_1                             0x08008880   Number         4  hal_tim.o(.text.TIM_OC2Init)
    [Anonymous Symbol]                       0x08008884   Section        0  hal_tim.o(.text.TIM_OC2PreloadConfig)
    [Anonymous Symbol]                       0x080088b0   Section        0  hal_tim.o(.text.TIM_OC3Init)
    [Anonymous Symbol]                       0x08008940   Section        0  hal_tim.o(.text.TIM_OC3PreloadConfig)
    [Anonymous Symbol]                       0x08008968   Section        0  hal_tim.o(.text.TIM_OC4Init)
    __arm_cp.5_0                             0x080089e0   Number         4  hal_tim.o(.text.TIM_OC4Init)
    __arm_cp.5_1                             0x080089e4   Number         4  hal_tim.o(.text.TIM_OC4Init)
    [Anonymous Symbol]                       0x080089e8   Section        0  hal_tim.o(.text.TIM_OCStructInit)
    [Anonymous Symbol]                       0x08008a16   Section        0  hal_tim.o(.text.TIM_PWMIConfig)
    [Anonymous Symbol]                       0x08008aee   Section        0  hal_tim.o(.text.TIM_SelectInputTrigger)
    [Anonymous Symbol]                       0x08008b14   Section        0  hal_tim.o(.text.TIM_SelectSlaveMode)
    [Anonymous Symbol]                       0x08008b3a   Section        0  hal_tim.o(.text.TIM_SetAutoreload)
    [Anonymous Symbol]                       0x08008b54   Section        0  hal_tim.o(.text.TIM_SetIC1Prescaler)
    [Anonymous Symbol]                       0x08008b7a   Section        0  hal_tim.o(.text.TIM_SetIC2Prescaler)
    [Anonymous Symbol]                       0x08008ba4   Section        0  hal_tim.o(.text.TIM_SetIC3Prescaler)
    [Anonymous Symbol]                       0x08008bca   Section        0  hal_tim.o(.text.TIM_SetIC4Prescaler)
    [Anonymous Symbol]                       0x08008bf4   Section        0  hal_tim.o(.text.TIM_TimeBaseInit)
    __arm_cp.1_0                             0x08008cac   Number         4  hal_tim.o(.text.TIM_TimeBaseInit)
    __arm_cp.1_1                             0x08008cb0   Number         4  hal_tim.o(.text.TIM_TimeBaseInit)
    __arm_cp.1_2                             0x08008cb4   Number         4  hal_tim.o(.text.TIM_TimeBaseInit)
    __arm_cp.1_3                             0x08008cb8   Number         4  hal_tim.o(.text.TIM_TimeBaseInit)
    __arm_cp.1_4                             0x08008cbc   Number         4  hal_tim.o(.text.TIM_TimeBaseInit)
    [Anonymous Symbol]                       0x08008cc0   Section        0  hal_tim.o(.text.TIM_TimeBaseStructInit)
    [Anonymous Symbol]                       0x08008ce4   Section        0  drv_pwm.o(.text.TIM_bBrakeUpdate)
    __arm_cp.6_0                             0x08008d50   Number         4  drv_pwm.o(.text.TIM_bBrakeUpdate)
    __arm_cp.6_2                             0x08008d54   Number         4  drv_pwm.o(.text.TIM_bBrakeUpdate)
    [Anonymous Symbol]                       0x08008d58   Section        0  drv_pwm.o(.text.TIM_bSetOutputConfig)
    __arm_cp.3_1                             0x08008de4   Number         4  drv_pwm.o(.text.TIM_bSetOutputConfig)
    [Anonymous Symbol]                       0x08008de8   Section        0  drv_pwm.o(.text.TIM_vBrakeInit)
    __arm_cp.5_0                             0x08008e34   Number         4  drv_pwm.o(.text.TIM_vBrakeInit)
    __arm_cp.5_1                             0x08008e38   Number         4  drv_pwm.o(.text.TIM_vBrakeInit)
    [Anonymous Symbol]                       0x08008e3c   Section        0  drv_pwm.o(.text.TIM_vDutyCycleToCompare)
    TIM_vDutyCycleToCompare                  0x08008e3d   Thumb Code    68  drv_pwm.o(.text.TIM_vDutyCycleToCompare)
    [Anonymous Symbol]                       0x08008e7c   Section        0  drv_pwm.o(.text.TIM_vSetCompareValues)
    [Anonymous Symbol]                       0x08008ee0   Section        0  drv_pwm.o(.text.TIM_vSetOutputs)
    __arm_cp.2_0                             0x08008f34   Number         4  drv_pwm.o(.text.TIM_vSetOutputs)
    __arm_cp.2_1                             0x08008f38   Number         4  drv_pwm.o(.text.TIM_vSetOutputs)
    __arm_cp.2_2                             0x08008f3c   Number         4  drv_pwm.o(.text.TIM_vSetOutputs)
    [Anonymous Symbol]                       0x08008f40   Section        0  transfer.o(.text.TRR_vClarkeTrans)
    __arm_cp.0_0                             0x08008f84   Number         4  transfer.o(.text.TRR_vClarkeTrans)
    [Anonymous Symbol]                       0x08008f88   Section        0  timeslice.o(.text.TSE_vAdaptInterfaceFromFlag2TaskCall)
    __arm_cp.0_0                             0x08008fd0   Number         4  timeslice.o(.text.TSE_vAdaptInterfaceFromFlag2TaskCall)
    [Anonymous Symbol]                       0x08008fd4   Section        0  timeslice.o(.text.TSE_vRegisterHandler)
    __arm_cp.1_0                             0x08009014   Number         4  timeslice.o(.text.TSE_vRegisterHandler)
    __arm_cp.1_1                             0x08009018   Number         4  timeslice.o(.text.TSE_vRegisterHandler)
    [Anonymous Symbol]                       0x0800901c   Section        0  timeslice.o(.text.TSE_vSliceTaskHandle)
    __arm_cp.2_0                             0x08009090   Number         4  timeslice.o(.text.TSE_vSliceTaskHandle)
    [Anonymous Symbol]                       0x08009094   Section        0  iec60730_b_clocktest.o(.text.Tim2_Init)
    __arm_cp.6_0                             0x0800912c   Number         4  iec60730_b_clocktest.o(.text.Tim2_Init)
    __arm_cp.6_1                             0x08009130   Number         4  iec60730_b_clocktest.o(.text.Tim2_Init)
    __arm_cp.6_2                             0x08009134   Number         4  iec60730_b_clocktest.o(.text.Tim2_Init)
    [Anonymous Symbol]                       0x08009138   Section        0  mm32_it.o(.text.UART1_IRQHandler)
    [Anonymous Symbol]                       0x0800913c   Section        0  mm32_it.o(.text.UART2_IRQHandler)
    [Anonymous Symbol]                       0x08009160   Section        0  mm32_it.o(.text.UART3_IRQHandler)
    [Anonymous Symbol]                       0x08009162   Section        0  hal_uart.o(.text.UART_ClearITPendingBit)
    [Anonymous Symbol]                       0x0800917c   Section        0  hal_uart.o(.text.UART_Cmd)
    [Anonymous Symbol]                       0x080091a2   Section        0  hal_uart.o(.text.UART_GetFlagStatus)
    [Anonymous Symbol]                       0x080091ce   Section        0  hal_uart.o(.text.UART_GetITStatus)
    [Anonymous Symbol]                       0x080091fa   Section        0  hal_uart.o(.text.UART_ITConfig)
    [Anonymous Symbol]                       0x0800923c   Section        0  hal_uart.o(.text.UART_Init)
    __arm_cp.1_0                             0x080092ec   Number         4  hal_uart.o(.text.UART_Init)
    [Anonymous Symbol]                       0x080092f0   Section        0  hal_uart.o(.text.UART_ReceiveData)
    [Anonymous Symbol]                       0x08009302   Section        0  hal_uart.o(.text.UART_SendData)
    [Anonymous Symbol]                       0x0800931c   Section        0  hal_uart.o(.text.UART_StructInit)
    [Anonymous Symbol]                       0x0800934c   Section        0  drv_sci.o(.text.UART_bUARTTXBUFEMPT)
    [Anonymous Symbol]                       0x08009370   Section        0  drv_sci.o(.text.UART_vCONSOLE_Init)
    __arm_cp.1_1                             0x080093fc   Number         4  drv_sci.o(.text.UART_vCONSOLE_Init)
    [Anonymous Symbol]                       0x08009400   Section        0  drv_sci.o(.text.UART_vGetUARTData)
    [Anonymous Symbol]                       0x08009420   Section        0  drv_sci.o(.text.UART_vModbusTxDisable)
    [Anonymous Symbol]                       0x0800942c   Section        0  drv_sci.o(.text.UART_vNVICConfigure)
    UART_vNVICConfigure                      0x0800942d   Thumb Code    56  drv_sci.o(.text.UART_vNVICConfigure)
    [Anonymous Symbol]                       0x08009464   Section        0  mm32_it.o(.text.UART_vSetUartReceiveCallbackFunc)
    __arm_cp.35_0                            0x08009478   Number         4  mm32_it.o(.text.UART_vSetUartReceiveCallbackFunc)
    [Anonymous Symbol]                       0x0800947c   Section        0  drv_sci.o(.text.UART_vWriteData)
    __arm_cp.3_0                             0x080094c0   Number         4  drv_sci.o(.text.UART_vWriteData)
    __arm_cp.3_1                             0x080094c4   Number         4  drv_sci.o(.text.UART_vWriteData)
    [Anonymous Symbol]                       0x080094c8   Section        0  user_function.o(.text.UFN_vBackwardParamStartupInit)
    __arm_cp.5_1                             0x08009550   Number         4  user_function.o(.text.UFN_vBackwardParamStartupInit)
    __arm_cp.5_2                             0x08009554   Number         4  user_function.o(.text.UFN_vBackwardParamStartupInit)
    __arm_cp.5_4                             0x08009558   Number         4  user_function.o(.text.UFN_vBackwardParamStartupInit)
    __arm_cp.5_5                             0x0800955c   Number         4  user_function.o(.text.UFN_vBackwardParamStartupInit)
    __arm_cp.5_6                             0x08009560   Number         4  user_function.o(.text.UFN_vBackwardParamStartupInit)
    __arm_cp.5_7                             0x08009564   Number         4  user_function.o(.text.UFN_vBackwardParamStartupInit)
    __arm_cp.5_8                             0x08009568   Number         4  user_function.o(.text.UFN_vBackwardParamStartupInit)
    __arm_cp.5_9                             0x0800956c   Number         4  user_function.o(.text.UFN_vBackwardParamStartupInit)
    __arm_cp.5_12                            0x08009570   Number         4  user_function.o(.text.UFN_vBackwardParamStartupInit)
    [Anonymous Symbol]                       0x08009574   Section        0  user_function.o(.text.UFN_vForwardParamStartupInit)
    __arm_cp.6_1                             0x08009600   Number         4  user_function.o(.text.UFN_vForwardParamStartupInit)
    __arm_cp.6_2                             0x08009604   Number         4  user_function.o(.text.UFN_vForwardParamStartupInit)
    __arm_cp.6_3                             0x08009608   Number         4  user_function.o(.text.UFN_vForwardParamStartupInit)
    __arm_cp.6_4                             0x0800960c   Number         4  user_function.o(.text.UFN_vForwardParamStartupInit)
    __arm_cp.6_5                             0x08009610   Number         4  user_function.o(.text.UFN_vForwardParamStartupInit)
    __arm_cp.6_6                             0x08009614   Number         4  user_function.o(.text.UFN_vForwardParamStartupInit)
    __arm_cp.6_7                             0x08009618   Number         4  user_function.o(.text.UFN_vForwardParamStartupInit)
    __arm_cp.6_8                             0x0800961c   Number         4  user_function.o(.text.UFN_vForwardParamStartupInit)
    __arm_cp.6_9                             0x08009620   Number         4  user_function.o(.text.UFN_vForwardParamStartupInit)
    __arm_cp.6_10                            0x08009624   Number         4  user_function.o(.text.UFN_vForwardParamStartupInit)
    [Anonymous Symbol]                       0x08009628   Section        0  voltage.o(.text.VOL_tGetDclVolRawSampleQ)
    __arm_cp.4_0                             0x08009630   Number         4  voltage.o(.text.VOL_tGetDclVolRawSampleQ)
    [Anonymous Symbol]                       0x08009634   Section        0  user_function.o(.text.Var_Filt)
    [Anonymous Symbol]                       0x08009678   Section        0  main.o(.text.WDG_Init)
    [Anonymous Symbol]                       0x08009686   Section        0  main.o(.text.WDG_Refresh)
    [Anonymous Symbol]                       0x0800968e   Section        0  winddetection.o(.text.WDN_AlignInit)
    [Anonymous Symbol]                       0x08009698   Section        0  winddetection.o(.text.WDN_vCalculateBemfPeak)
    __arm_cp.6_0                             0x08009824   Number         4  winddetection.o(.text.WDN_vCalculateBemfPeak)
    __arm_cp.6_1                             0x08009828   Number         4  winddetection.o(.text.WDN_vCalculateBemfPeak)
    __arm_cp.6_2                             0x0800982c   Number         4  winddetection.o(.text.WDN_vCalculateBemfPeak)
    __arm_cp.6_3                             0x08009830   Number         4  winddetection.o(.text.WDN_vCalculateBemfPeak)
    __arm_cp.6_4                             0x08009834   Number         4  winddetection.o(.text.WDN_vCalculateBemfPeak)
    __arm_cp.6_5                             0x08009838   Number         4  winddetection.o(.text.WDN_vCalculateBemfPeak)
    __arm_cp.6_6                             0x0800983c   Number         4  winddetection.o(.text.WDN_vCalculateBemfPeak)
    __arm_cp.6_7                             0x08009840   Number         4  winddetection.o(.text.WDN_vCalculateBemfPeak)
    __arm_cp.6_8                             0x08009844   Number         4  winddetection.o(.text.WDN_vCalculateBemfPeak)
    __arm_cp.6_9                             0x08009848   Number         4  winddetection.o(.text.WDN_vCalculateBemfPeak)
    __arm_cp.6_10                            0x0800984c   Number         4  winddetection.o(.text.WDN_vCalculateBemfPeak)
    __arm_cp.6_11                            0x08009850   Number         4  winddetection.o(.text.WDN_vCalculateBemfPeak)
    __arm_cp.6_12                            0x08009854   Number         4  winddetection.o(.text.WDN_vCalculateBemfPeak)
    __arm_cp.6_13                            0x08009858   Number         4  winddetection.o(.text.WDN_vCalculateBemfPeak)
    __arm_cp.6_14                            0x0800985c   Number         4  winddetection.o(.text.WDN_vCalculateBemfPeak)
    [Anonymous Symbol]                       0x08009860   Section        0  winddetection.o(.text.WDN_vInitWindDetection)
    __arm_cp.0_0                             0x08009934   Number         4  winddetection.o(.text.WDN_vInitWindDetection)
    [Anonymous Symbol]                       0x08009938   Section        0  winddetection.o(.text.WDN_vWindDetection)
    __arm_cp.4_0                             0x08009a40   Number         4  winddetection.o(.text.WDN_vWindDetection)
    __arm_cp.4_1                             0x08009a44   Number         4  winddetection.o(.text.WDN_vWindDetection)
    __arm_cp.4_2                             0x08009a48   Number         4  winddetection.o(.text.WDN_vWindDetection)
    __arm_cp.4_3                             0x08009a4c   Number         4  winddetection.o(.text.WDN_vWindDetection)
    __arm_cp.4_4                             0x08009a50   Number         4  winddetection.o(.text.WDN_vWindDetection)
    __arm_cp.4_5                             0x08009a54   Number         4  winddetection.o(.text.WDN_vWindDetection)
    __arm_cp.4_6                             0x08009a58   Number         4  winddetection.o(.text.WDN_vWindDetection)
    __arm_cp.4_7                             0x08009a5c   Number         4  winddetection.o(.text.WDN_vWindDetection)
    __arm_cp.4_8                             0x08009a60   Number         4  winddetection.o(.text.WDN_vWindDetection)
    [Anonymous Symbol]                       0x08009a64   Section        0  hal_wwdg.o(.text.WWDG_DeInit)
    [Anonymous Symbol]                       0x08009a70   Section        0  hal_wwdg.o(.text.WWDG_Enable)
    __arm_cp.6_0                             0x08009a88   Number         4  hal_wwdg.o(.text.WWDG_Enable)
    [Anonymous Symbol]                       0x08009a8c   Section        0  mm32_it.o(.text.WWDG_IRQHandler)
    [Anonymous Symbol]                       0x08009a8e   Section        0  iec60730_b_aux.o(.text.WWDG_Init)
    [Anonymous Symbol]                       0x08009ad4   Section        0  hal_wwdg.o(.text.WWDG_SetPrescaler)
    [Anonymous Symbol]                       0x08009af0   Section        0  hal_wwdg.o(.text.WWDG_SetWindowValue)
    __arm_cp.2_0                             0x08009b10   Number         4  hal_wwdg.o(.text.WWDG_SetWindowValue)
    [Anonymous Symbol]                       0x08009b14   Section        0  mm32_it.o(.text.__NVIC_SetPriority)
    __NVIC_SetPriority                       0x08009b15   Thumb Code   144  mm32_it.o(.text.__NVIC_SetPriority)
    [Anonymous Symbol]                       0x08009b9c   Section        0  iec60730_b_runtimetest.o(.text.__NVIC_SetPriority)
    __NVIC_SetPriority                       0x08009b9d   Thumb Code   144  iec60730_b_runtimetest.o(.text.__NVIC_SetPriority)
    __arm_cp.8_0                             0x08009c24   Number         4  iec60730_b_runtimetest.o(.text.__NVIC_SetPriority)
    [Anonymous Symbol]                       0x08009c28   Section        0  iec60730_b_aux.o(.text.__NVIC_SystemReset)
    __NVIC_SystemReset                       0x08009c29   Thumb Code    28  iec60730_b_aux.o(.text.__NVIC_SystemReset)
    __arm_cp.4_0                             0x08009c3c   Number         4  iec60730_b_aux.o(.text.__NVIC_SystemReset)
    __arm_cp.4_1                             0x08009c40   Number         4  iec60730_b_aux.o(.text.__NVIC_SystemReset)
    [Anonymous Symbol]                       0x08009c44   Section        0  iec60730_b_startup.o(.text.control_flow_check_point)
    __arm_cp.6_0                             0x08009c80   Number         4  iec60730_b_startup.o(.text.control_flow_check_point)
    __arm_cp.6_1                             0x08009c84   Number         4  iec60730_b_startup.o(.text.control_flow_check_point)
    [Anonymous Symbol]                       0x08009c88   Section        0  modbuscrc.o(.text.crc16)
    __arm_cp.0_0                             0x08009cec   Number         4  modbuscrc.o(.text.crc16)
    __arm_cp.0_1                             0x08009cf0   Number         4  modbuscrc.o(.text.crc16)
    [Anonymous Symbol]                       0x08009cf4   Section        0  system_mm32spin0280.o(.text.delay_x_cycle)
    delay_x_cycle                            0x08009cf5   Thumb Code    74  system_mm32spin0280.o(.text.delay_x_cycle)
    [Anonymous Symbol]                       0x08009d40   Section        0  hal_misc.o(.text.exNVIC_Init)
    __arm_cp.1_0                             0x08009dac   Number         4  hal_misc.o(.text.exNVIC_Init)
    __arm_cp.1_1                             0x08009db0   Number         4  hal_misc.o(.text.exNVIC_Init)
    __arm_cp.1_2                             0x08009db4   Number         4  hal_misc.o(.text.exNVIC_Init)
    __arm_cp.1_3                             0x08009db8   Number         4  hal_misc.o(.text.exNVIC_Init)
    [Anonymous Symbol]                       0x08009dbc   Section        0  hal_rcc.o(.text.exRCC_APB1PeriphReset)
    __arm_cp.37_0                            0x08009ddc   Number         4  hal_rcc.o(.text.exRCC_APB1PeriphReset)
    [Anonymous Symbol]                       0x08009de0   Section        0  hal_rcc.o(.text.exRCC_APB2PeriphReset)
    __arm_cp.39_0                            0x08009e00   Number         4  hal_rcc.o(.text.exRCC_APB2PeriphReset)
    [Anonymous Symbol]                       0x08009e04   Section        0  uart_classb.o(.text.fputc)
    __arm_cp.1_0                             0x08009e38   Number         4  uart_classb.o(.text.fputc)
    [Anonymous Symbol]                       0x08009e3c   Section        0  main.o(.text.main)
    __arm_cp.2_0                             0x08009ea0   Number         4  main.o(.text.main)
    __arm_cp.2_1                             0x08009ea4   Number         4  main.o(.text.main)
    [Anonymous Symbol]                       0x08009ea8   Section        0  user_function.o(.text.variable_reset)
    __arm_cp.2_0                             0x08009f48   Number         4  user_function.o(.text.variable_reset)
    __arm_cp.2_1                             0x08009f4c   Number         4  user_function.o(.text.variable_reset)
    __arm_cp.2_2                             0x08009f50   Number         4  user_function.o(.text.variable_reset)
    __arm_cp.2_3                             0x08009f54   Number         4  user_function.o(.text.variable_reset)
    __arm_cp.2_4                             0x08009f58   Number         4  user_function.o(.text.variable_reset)
    i.__0printf                              0x08009f5c   Section        0  printfa.o(i.__0printf)
    i.__ARM_clz                              0x08009f7c   Section        0  depilogue.o(i.__ARM_clz)
    i.__scatterload_copy                     0x08009faa   Section       14  handlers.o(i.__scatterload_copy)
    i.__scatterload_null                     0x08009fb8   Section        2  handlers.o(i.__scatterload_null)
    i.__scatterload_zeroinit                 0x08009fba   Section       14  handlers.o(i.__scatterload_zeroinit)
    i._fp_digits                             0x08009fc8   Section        0  printfa.o(i._fp_digits)
    _fp_digits                               0x08009fc9   Thumb Code   344  printfa.o(i._fp_digits)
    i._printf_core                           0x0800a13c   Section        0  printfa.o(i._printf_core)
    _printf_core                             0x0800a13d   Thumb Code  1754  printfa.o(i._printf_core)
    i._printf_post_padding                   0x0800a828   Section        0  printfa.o(i._printf_post_padding)
    _printf_post_padding                     0x0800a829   Thumb Code    32  printfa.o(i._printf_post_padding)
    i._printf_pre_padding                    0x0800a848   Section        0  printfa.o(i._printf_pre_padding)
    _printf_pre_padding                      0x0800a849   Thumb Code    44  printfa.o(i._printf_pre_padding)
    .constdata                               0x0800a874   Section      512  mlib.o(.constdata)
    [Anonymous Symbol]                       0x0800aa74   Section        0  drv_pwm.o(.rodata..LTIM_vBrakeInit.TIM_tBrakeDutyCycle)
    [Anonymous Symbol]                       0x0800aa9c   Section        0  drv_pwm.o(.rodata.PWM_ucChannelConfig)
    PWM_ucChannelConfig                      0x0800aa9c   Data          60  drv_pwm.o(.rodata.PWM_ucChannelConfig)
    [Anonymous Symbol]                       0x0800acd8   Section        0  statemachine.o(.rodata.s_M1_STATE_RUN_TABLE_FAST)
    s_M1_STATE_RUN_TABLE_FAST                0x0800acd8   Data          32  statemachine.o(.rodata.s_M1_STATE_RUN_TABLE_FAST)
    [Anonymous Symbol]                       0x0800acf8   Section        0  statemachine.o(.rodata.s_M1_STATE_RUN_TABLE_SLOW)
    s_M1_STATE_RUN_TABLE_SLOW                0x0800acf8   Data          32  statemachine.o(.rodata.s_M1_STATE_RUN_TABLE_SLOW)
    [Anonymous Symbol]                       0x0800ad38   Section        0  main.o(.rodata.str1.1)
    .L.str.1                                 0x0800ad38   Data          22  main.o(.rodata.str1.1)
    .L.str                                   0x0800ad4e   Data          15  main.o(.rodata.str1.1)
    [Anonymous Symbol]                       0x0800ad5d   Section        0  iec60730_b_aux.o(.rodata.str1.1)
    .L.str.5                                 0x0800ad5d   Data          29  iec60730_b_aux.o(.rodata.str1.1)
    .L.str.4                                 0x0800ad7a   Data          34  iec60730_b_aux.o(.rodata.str1.1)
    .L.str.7                                 0x0800ad9c   Data          36  iec60730_b_aux.o(.rodata.str1.1)
    .L.str.8                                 0x0800adc0   Data          32  iec60730_b_aux.o(.rodata.str1.1)
    .L.str.1                                 0x0800ade0   Data          20  iec60730_b_aux.o(.rodata.str1.1)
    .L.str.3                                 0x0800adf4   Data          33  iec60730_b_aux.o(.rodata.str1.1)
    .L.str.6                                 0x0800ae15   Data          62  iec60730_b_aux.o(.rodata.str1.1)
    .L.str.2                                 0x0800ae53   Data          33  iec60730_b_aux.o(.rodata.str1.1)
    .L.str                                   0x0800ae74   Data          43  iec60730_b_aux.o(.rodata.str1.1)
    [Anonymous Symbol]                       0x0800ae9f   Section        0  iec60730_b_runtimetest.o(.rodata.str1.1)
    .L.str.4                                 0x0800ae9f   Data          43  iec60730_b_runtimetest.o(.rodata.str1.1)
    .L.str.9                                 0x0800aeca   Data          44  iec60730_b_runtimetest.o(.rodata.str1.1)
    .L.str.2                                 0x0800aef6   Data          37  iec60730_b_runtimetest.o(.rodata.str1.1)
    .L.str.10                                0x0800af1b   Data          53  iec60730_b_runtimetest.o(.rodata.str1.1)
    .L.str.7                                 0x0800af50   Data          37  iec60730_b_runtimetest.o(.rodata.str1.1)
    .L.str.3                                 0x0800af75   Data          41  iec60730_b_runtimetest.o(.rodata.str1.1)
    .L.str.5                                 0x0800af9e   Data          28  iec60730_b_runtimetest.o(.rodata.str1.1)
    .L.str                                   0x0800afba   Data          29  iec60730_b_runtimetest.o(.rodata.str1.1)
    .L.str.8                                 0x0800afd7   Data          28  iec60730_b_runtimetest.o(.rodata.str1.1)
    .L.str.6                                 0x0800aff3   Data          17  iec60730_b_runtimetest.o(.rodata.str1.1)
    .L.str.1                                 0x0800b004   Data          19  iec60730_b_runtimetest.o(.rodata.str1.1)
    CHECKSUM                                 0x0800b0c0   Section        4  startup_mm32spin0280_keil.o(CHECKSUM)
    .data                                    0x20000080   Section        4  stdout.o(.data)
    [Anonymous Symbol]                       0x20000084   Section        0  fsphaseloss.o(.data.FPL_tPhaseLossPara)
    FPL_tPhaseLossPara                       0x20000084   Data          20  fsphaseloss.o(.data.FPL_tPhaseLossPara)
    [Anonymous Symbol]                       0x20000098   Section        0  fsrotorlock.o(.data.FRK_tParaRotorLock)
    FRK_tParaRotorLock                       0x20000098   Data           8  fsrotorlock.o(.data.FRK_tParaRotorLock)
    [Anonymous Symbol]                       0x200000a0   Section        0  fsrotorlock.o(.data.FRK_u32CurrentImpedance)
    FRK_u32CurrentImpedance                  0x200000a0   Data           4  fsrotorlock.o(.data.FRK_u32CurrentImpedance)
    [Anonymous Symbol]                       0x200000b4   Section        0  modbus.o(.data.MOS_u8IntervalTime)
    MOS_u8IntervalTime                       0x200000b4   Data           1  modbus.o(.data.MOS_u8IntervalTime)
    [Anonymous Symbol]                       0x200000b5   Section        0  statemachine.o(.data.Motor_bStartClose)
    Motor_bStartClose                        0x200000b5   Data           1  statemachine.o(.data.Motor_bStartClose)
    [Anonymous Symbol]                       0x200000d0   Section        0  speedcontrol.o(.data.SCL_tSpeedControlData)
    SCL_tSpeedControlData                    0x200000d0   Data          44  speedcontrol.o(.data.SCL_tSpeedControlData)
    [Anonymous Symbol]                       0x200000fc   Section        0  speedcontrol.o(.data.SCL_tSpeedControlPara)
    SCL_tSpeedControlPara                    0x200000fc   Data           8  speedcontrol.o(.data.SCL_tSpeedControlPara)
    [Anonymous Symbol]                       0x20000104   Section        0  speedmonitor.o(.data.SMR_tFSVParaSecond)
    SMR_tFSVParaSecond                       0x20000104   Data          20  speedmonitor.o(.data.SMR_tFSVParaSecond)
    [Anonymous Symbol]                       0x20000118   Section        0  speedmonitor.o(.data.SMR_tFilterCoeEmf)
    SMR_tFilterCoeEmf                        0x20000118   Data           4  speedmonitor.o(.data.SMR_tFilterCoeEmf)
    [Anonymous Symbol]                       0x2000011c   Section        0  speedmonitor.o(.data.SMR_tFilterCoeSpd)
    SMR_tFilterCoeSpd                        0x2000011c   Data           4  speedmonitor.o(.data.SMR_tFilterCoeSpd)
    [Anonymous Symbol]                       0x20000120   Section        0  fsclock.o(.data.STK_u32NbrOfTicksErrorCheck)
    STK_u32NbrOfTicksErrorCheck              0x20000120   Data           4  fsclock.o(.data.STK_u32NbrOfTicksErrorCheck)
    [Anonymous Symbol]                       0x20000124   Section        0  fsclock.o(.data.STK_u32WaitSystemInit)
    STK_u32WaitSystemInit                    0x20000124   Data           4  fsclock.o(.data.STK_u32WaitSystemInit)
    [Anonymous Symbol]                       0x2000012c   Section        0  drv_pwm.o(.data.TIM_u16BrakeDutyCycle)
    TIM_u16BrakeDutyCycle                    0x2000012c   Data           2  drv_pwm.o(.data.TIM_u16BrakeDutyCycle)
    [Anonymous Symbol]                       0x20000138   Section        0  mm32_it.o(.bss.ADC2_IRQHandler.u16Cnt)
    ADC2_IRQHandler.u16Cnt                   0x20000138   Data           2  mm32_it.o(.bss.ADC2_IRQHandler.u16Cnt)
    [Anonymous Symbol]                       0x2000013c   Section        0  mm32_it.o(.bss.ADC2_IRQHandler.u32IaSum)
    ADC2_IRQHandler.u32IaSum                 0x2000013c   Data           4  mm32_it.o(.bss.ADC2_IRQHandler.u32IaSum)
    [Anonymous Symbol]                       0x20000140   Section        0  mm32_it.o(.bss.ADC2_IRQHandler.u32IbSum)
    ADC2_IRQHandler.u32IbSum                 0x20000140   Data           4  mm32_it.o(.bss.ADC2_IRQHandler.u32IbSum)
    [Anonymous Symbol]                       0x20000144   Section        0  mm32_it.o(.bss.ADC2_IRQHandler.u8ADCTimeCnt)
    ADC2_IRQHandler.u8ADCTimeCnt             0x20000144   Data           1  mm32_it.o(.bss.ADC2_IRQHandler.u8ADCTimeCnt)
    [Anonymous Symbol]                       0x20000145   Section        0  mm32_it.o(.bss.ADC2_IRQHandler.u8ADCTimeCnt2)
    ADC2_IRQHandler.u8ADCTimeCnt2            0x20000145   Data           1  mm32_it.o(.bss.ADC2_IRQHandler.u8ADCTimeCnt2)
    [Anonymous Symbol]                       0x20000168   Section        0  current.o(.bss.CUR_tCurBufferCal)
    CUR_tCurBufferCal                        0x20000168   Data          96  current.o(.bss.CUR_tCurBufferCal)
    [Anonymous Symbol]                       0x200001c8   Section        0  current.o(.bss.CUR_tDataBrd1)
    CUR_tDataBrd1                            0x200001c8   Data         104  current.o(.bss.CUR_tDataBrd1)
    [Anonymous Symbol]                       0x20000234   Section        0  fscommon.o(.bss.FCN_tThreePhaseVol)
    FCN_tThreePhaseVol                       0x20000234   Data          12  fscommon.o(.bss.FCN_tThreePhaseVol)
    [Anonymous Symbol]                       0x20000240   Section        0  fscommon.o(.bss.FCN_tThreePhaseVolCal)
    FCN_tThreePhaseVolCal                    0x20000240   Data         100  fscommon.o(.bss.FCN_tThreePhaseVolCal)
    [Anonymous Symbol]                       0x200002a8   Section        0  fsphaseloss.o(.bss.FPL_ptCurBufferCal)
    FPL_ptCurBufferCal                       0x200002a8   Data           4  fsphaseloss.o(.bss.FPL_ptCurBufferCal)
    [Anonymous Symbol]                       0x200002b0   Section        0  fsphaseloss.o(.bss.FPL_tPhaseLossData)
    FPL_tPhaseLossData                       0x200002b0   Data         128  fsphaseloss.o(.bss.FPL_tPhaseLossData)
    [Anonymous Symbol]                       0x20000330   Section        0  fsrotorlock.o(.bss.FRK_tDataRotorLock)
    FRK_tDataRotorLock                       0x20000330   Data          88  fsrotorlock.o(.bss.FRK_tDataRotorLock)
    [Anonymous Symbol]                       0x2000038c   Section        0  statemachine.o(.bss.Fault_LED_Disp.u16FalultNumber)
    Fault_LED_Disp.u16FalultNumber           0x2000038c   Data           2  statemachine.o(.bss.Fault_LED_Disp.u16FalultNumber)
    [Anonymous Symbol]                       0x2000038e   Section        0  statemachine.o(.bss.Fault_LED_Disp.u16FaultCnt)
    Fault_LED_Disp.u16FaultCnt               0x2000038e   Data           2  statemachine.o(.bss.Fault_LED_Disp.u16FaultCnt)
    [Anonymous Symbol]                       0x20000390   Section        0  statemachine.o(.bss.Fault_LED_Disp.u16FaultTimeCnt)
    Fault_LED_Disp.u16FaultTimeCnt           0x20000390   Data           2  statemachine.o(.bss.Fault_LED_Disp.u16FaultTimeCnt)
    [Anonymous Symbol]                       0x200003a0   Section        0  statemachine.o(.bss.M1_FaultDetection.u16OvCntr)
    M1_FaultDetection.u16OvCntr              0x200003a0   Data           2  statemachine.o(.bss.M1_FaultDetection.u16OvCntr)
    [Anonymous Symbol]                       0x200003a2   Section        0  statemachine.o(.bss.M1_FaultDetection.u16UvCntr)
    M1_FaultDetection.u16UvCntr              0x200003a2   Data           2  statemachine.o(.bss.M1_FaultDetection.u16UvCntr)
    [Anonymous Symbol]                       0x200003a4   Section        0  statemachine.o(.bss.M1_Fault_Slow.u16FaultTimeCnt)
    M1_Fault_Slow.u16FaultTimeCnt            0x200003a4   Data           2  statemachine.o(.bss.M1_Fault_Slow.u16FaultTimeCnt)
    [Anonymous Symbol]                       0x200003a6   Section        0  statemachine.o(.bss.M1_RunFreewheelSlow.u16FreeWheelTimeCnt)
    M1_RunFreewheelSlow.u16FreeWheelTimeCnt  0x200003a6   Data           2  statemachine.o(.bss.M1_RunFreewheelSlow.u16FreeWheelTimeCnt)
    [Anonymous Symbol]                       0x200003a8   Section        0  statemachine.o(.bss.M1_RunStartupFast.s16PosElEst)
    M1_RunStartupFast.s16PosElEst            0x200003a8   Data           2  statemachine.o(.bss.M1_RunStartupFast.s16PosElEst)
    [Anonymous Symbol]                       0x200003aa   Section        0  statemachine.o(.bss.M1_RunStartupFast.s16ThetaErr)
    M1_RunStartupFast.s16ThetaErr            0x200003aa   Data           2  statemachine.o(.bss.M1_RunStartupFast.s16ThetaErr)
    [Anonymous Symbol]                       0x200003ac   Section        0  statemachine.o(.bss.M1_RunStartupFast.sAngle_temp)
    M1_RunStartupFast.sAngle_temp            0x200003ac   Data           4  statemachine.o(.bss.M1_RunStartupFast.sAngle_temp)
    [Anonymous Symbol]                       0x200003b0   Section        0  mm32_it.o(.bss.MIT_Dure_Time)
    MIT_Dure_Time                            0x200003b0   Data           2  mm32_it.o(.bss.MIT_Dure_Time)
    [Anonymous Symbol]                       0x200003b2   Section        0  mm32_it.o(.bss.MIT_Start_time)
    MIT_Start_time                           0x200003b2   Data           2  mm32_it.o(.bss.MIT_Start_time)
    [Anonymous Symbol]                       0x200003b4   Section        0  mm32_it.o(.bss.MIT_Stop_time)
    MIT_Stop_time                            0x200003b4   Data           2  mm32_it.o(.bss.MIT_Stop_time)
    [Anonymous Symbol]                       0x200003b6   Section        0  mm32_it.o(.bss.MIT_TEST)
    MIT_TEST                                 0x200003b6   Data           1  mm32_it.o(.bss.MIT_TEST)
    [Anonymous Symbol]                       0x200003b7   Section        0  mm32_it.o(.bss.MIT_eADCReadId)
    MIT_eADCReadId                           0x200003b7   Data           1  mm32_it.o(.bss.MIT_eADCReadId)
    [Anonymous Symbol]                       0x200003b8   Section        0  mm32_it.o(.bss.MIT_tInputCapture)
    MIT_tInputCapture                        0x200003b8   Data          20  mm32_it.o(.bss.MIT_tInputCapture)
    [Anonymous Symbol]                       0x200003cc   Section        0  mm32_it.o(.bss.MIT_u16NormalAdcValueArray)
    MIT_u16NormalAdcValueArray               0x200003cc   Data          12  mm32_it.o(.bss.MIT_u16NormalAdcValueArray)
    [Anonymous Symbol]                       0x200003d8   Section        0  modbus.o(.bss.MOS_bInitFinished)
    MOS_bInitFinished                        0x200003d8   Data           1  modbus.o(.bss.MOS_bInitFinished)
    [Anonymous Symbol]                       0x20000406   Section        0  modbus.o(.bss.MOS_tModbusPara)
    MOS_tModbusPara                          0x20000406   Data           8  modbus.o(.bss.MOS_tModbusPara)
    [Anonymous Symbol]                       0x2000040e   Section        0  modbus.o(.bss.MOS_u8EventRegister)
    MOS_u8EventRegister                      0x2000040e   Data           2  modbus.o(.bss.MOS_u8EventRegister)
    [Anonymous Symbol]                       0x20000410   Section        0  modbus.o(.bss.MOS_vModBusHandler_2.u16CalculateCRC)
    MOS_vModBusHandler_2.u16CalculateCRC     0x20000410   Data           2  modbus.o(.bss.MOS_vModBusHandler_2.u16CalculateCRC)
    [Anonymous Symbol]                       0x20000412   Section        0  modbus.o(.bss.MOS_vModBusHandler_2.u16ReceivedCRC)
    MOS_vModBusHandler_2.u16ReceivedCRC      0x20000412   Data           2  modbus.o(.bss.MOS_vModBusHandler_2.u16ReceivedCRC)
    [Anonymous Symbol]                       0x20000414   Section        0  drv_pwm.o(.bss.MOT_tBrakeData)
    MOT_tBrakeData                           0x20000414   Data           2  drv_pwm.o(.bss.MOT_tBrakeData)
    [Anonymous Symbol]                       0x20000416   Section        0  drv_pwm.o(.bss.MOT_tBrakePara)
    MOT_tBrakePara                           0x20000416   Data           2  drv_pwm.o(.bss.MOT_tBrakePara)
    [Anonymous Symbol]                       0x2000056c   Section        0  statemachine.o(.bss.Motor_s16DeltaAngle)
    Motor_s16DeltaAngle                      0x2000056c   Data           2  statemachine.o(.bss.Motor_s16DeltaAngle)
    [Anonymous Symbol]                       0x20000570   Section        0  statemachine.o(.bss.Motor_s32DebugAngle1)
    Motor_s32DebugAngle1                     0x20000570   Data           4  statemachine.o(.bss.Motor_s32DebugAngle1)
    [Anonymous Symbol]                       0x20000574   Section        0  statemachine.o(.bss.Motor_s32DebugAngle2)
    Motor_s32DebugAngle2                     0x20000574   Data           4  statemachine.o(.bss.Motor_s32DebugAngle2)
    [Anonymous Symbol]                       0x20000578   Section        0  statemachine.o(.bss.Motor_u8UnderErrorTest)
    Motor_u8UnderErrorTest                   0x20000578   Data           1  statemachine.o(.bss.Motor_u8UnderErrorTest)
    [Anonymous Symbol]                       0x2000058c   Section        0  speedcontrol.o(.bss.SCL_bDirectionDetAvailable)
    SCL_bDirectionDetAvailable               0x2000058c   Data           1  speedcontrol.o(.bss.SCL_bDirectionDetAvailable)
    [Anonymous Symbol]                       0x20000590   Section        0  speedcontrol.o(.bss.SCL_tInputCaptureData)
    SCL_tInputCaptureData                    0x20000590   Data           4  speedcontrol.o(.bss.SCL_tInputCaptureData)
    [Anonymous Symbol]                       0x20000594   Section        0  speedmonitor.o(.bss.SMR_s32DeltaTime)
    SMR_s32DeltaTime                         0x20000594   Data           4  speedmonitor.o(.bss.SMR_s32DeltaTime)
    [Anonymous Symbol]                       0x20000598   Section        0  speedmonitor.o(.bss.SMR_s32Im)
    SMR_s32Im                                0x20000598   Data           4  speedmonitor.o(.bss.SMR_s32Im)
    [Anonymous Symbol]                       0x2000059c   Section        0  speedmonitor.o(.bss.SMR_s32Re)
    SMR_s32Re                                0x2000059c   Data           4  speedmonitor.o(.bss.SMR_s32Re)
    [Anonymous Symbol]                       0x200005a0   Section        0  speedmonitor.o(.bss.SMR_tFSVDataSecond)
    SMR_tFSVDataSecond                       0x200005a0   Data         152  speedmonitor.o(.bss.SMR_tFSVDataSecond)
    [Anonymous Symbol]                       0x20000640   Section        0  fsclock.o(.bss.STK_tSafeTime)
    STK_tSafeTime                            0x20000640   Data           8  fsclock.o(.bss.STK_tSafeTime)
    [Anonymous Symbol]                       0x20000648   Section        0  fsclock.o(.bss.STK_u32SystickDifference)
    STK_u32SystickDifference                 0x20000648   Data           4  fsclock.o(.bss.STK_u32SystickDifference)
    [Anonymous Symbol]                       0x2000064c   Section        0  fsclock.o(.bss.STK_u32SystickOld)
    STK_u32SystickOld                        0x2000064c   Data           4  fsclock.o(.bss.STK_u32SystickOld)
    [Anonymous Symbol]                       0x20000650   Section        0  fsclock.o(.bss.STK_u32TickTimeErrorCounter)
    STK_u32TickTimeErrorCounter              0x20000650   Data           4  fsclock.o(.bss.STK_u32TickTimeErrorCounter)
    [Anonymous Symbol]                       0x20000654   Section        0  timeslice.o(.bss.TSE_u16EventFlag)
    TSE_u16EventFlag                         0x20000654   Data           2  timeslice.o(.bss.TSE_u16EventFlag)
    [Anonymous Symbol]                       0x20000658   Section        0  mm32_it.o(.bss.UART_pfReceivedCallback)
    UART_pfReceivedCallback                  0x20000658   Data           4  mm32_it.o(.bss.UART_pfReceivedCallback)
    [Anonymous Symbol]                       0x2000065c   Section        0  voltage.o(.bss.VOL_tDclVolSampleQ)
    VOL_tDclVolSampleQ                       0x2000065c   Data           4  voltage.o(.bss.VOL_tDclVolSampleQ)
    [Anonymous Symbol]                       0x20000668   Section        0  winddetection.o(.bss.WDN_u8TestSec_1)
    WDN_u8TestSec_1                          0x20000668   Data           1  winddetection.o(.bss.WDN_u8TestSec_1)
    [Anonymous Symbol]                       0x20000669   Section        0  winddetection.o(.bss.WDN_u8TestSec_2)
    WDN_u8TestSec_2                          0x20000669   Data           1  winddetection.o(.bss.WDN_u8TestSec_2)
    [Anonymous Symbol]                       0x2000066a   Section        0  winddetection.o(.bss.WDN_u8TestSec_3)
    WDN_u8TestSec_3                          0x2000066a   Data           1  winddetection.o(.bss.WDN_u8TestSec_3)
    [Anonymous Symbol]                       0x2000066b   Section        0  winddetection.o(.bss.WDN_u8TestSec_4)
    WDN_u8TestSec_4                          0x2000066b   Data           1  winddetection.o(.bss.WDN_u8TestSec_4)
    [Anonymous Symbol]                       0x2000066c   Section        0  winddetection.o(.bss.WDN_u8TestSec_5)
    WDN_u8TestSec_5                          0x2000066c   Data           1  winddetection.o(.bss.WDN_u8TestSec_5)
    [Anonymous Symbol]                       0x2000067c   Section        0  current.o(.bss.testA_N)
    testA_N                                  0x2000067c   Data           2  current.o(.bss.testA_N)
    [Anonymous Symbol]                       0x2000067e   Section        0  current.o(.bss.testA_P)
    testA_P                                  0x2000067e   Data           2  current.o(.bss.testA_P)
    [Anonymous Symbol]                       0x20000680   Section        0  current.o(.bss.testB_N)
    testB_N                                  0x20000680   Data           2  current.o(.bss.testB_N)
    [Anonymous Symbol]                       0x20000682   Section        0  current.o(.bss.testB_P)
    testB_P                                  0x20000682   Data           2  current.o(.bss.testB_P)
    [Anonymous Symbol]                       0x20000684   Section        0  current.o(.bss.testC_N)
    testC_N                                  0x20000684   Data           2  current.o(.bss.testC_N)
    [Anonymous Symbol]                       0x20000686   Section        0  current.o(.bss.testC_P)
    testC_P                                  0x20000686   Data           2  current.o(.bss.testC_P)
    [Anonymous Symbol]                       0x20000688   Section        0  iec60730_b_aux.o(.bss.tmp0)
    tmp0                                     0x20000688   Data           4  iec60730_b_aux.o(.bss.tmp0)
    [Anonymous Symbol]                       0x2000068c   Section        0  iec60730_b_clocktest.o(.bss.tmpIC1)
    tmpIC1                                   0x2000068c   Data           4  iec60730_b_clocktest.o(.bss.tmpIC1)
    [Anonymous Symbol]                       0x20000690   Section        0  mm32_it.o(.bss.u16Test1)
    u16Test1                                 0x20000690   Data           4  mm32_it.o(.bss.u16Test1)
    [Anonymous Symbol]                       0x20000694   Section        0  mm32_it.o(.bss.u16Test2)
    u16Test2                                 0x20000694   Data           4  mm32_it.o(.bss.u16Test2)
    [Anonymous Symbol]                       0x20000698   Section        0  mm32_it.o(.bss.u16Test3)
    u16Test3                                 0x20000698   Data           4  mm32_it.o(.bss.u16Test3)
    [Anonymous Symbol]                       0x2000069c   Section        0  mm32_it.o(.bss.u16Test4)
    u16Test4                                 0x2000069c   Data           4  mm32_it.o(.bss.u16Test4)
    [Anonymous Symbol]                       0x200006a0   Section        0  mm32_it.o(.bss.u16Test5)
    u16Test5                                 0x200006a0   Data           4  mm32_it.o(.bss.u16Test5)
    [Anonymous Symbol]                       0x200006a4   Section        0  mm32_it.o(.bss.u16Test6)
    u16Test6                                 0x200006a4   Data           4  mm32_it.o(.bss.u16Test6)
    [Anonymous Symbol]                       0x200006a8   Section        0  statemachine.o(.bss.ucErrorCount)
    ucErrorCount                             0x200006a8   Data           1  statemachine.o(.bss.ucErrorCount)
    STACK                                    0x20001c00   Section     1024  startup_mm32spin0280_keil.o(STACK)

    Global Symbols

    Symbol Name                              Value     Ov Type        Size  Object(Section)

    BuildAttributes$$THM_ISAv3M$S$PE$A:L22$X:L11$S22$IEEE1$IW$~IW$USESV6$~STKCKD$USESV7$~SHL$OTIME$ROPI$EBA8$MICROLIB$REQ8$PRES8$EABIv2 0x00000000   Number         0  anon$$obj.o ABSOLUTE
    __cpp_initialize__aeabi_                  - Undefined Weak Reference
    __cxa_finalize                            - Undefined Weak Reference
    _clock_init                               - Undefined Weak Reference
    _microlib_exit                            - Undefined Weak Reference
    __Vectors_Size                           0x000000c0   Number         0  startup_mm32spin0280_keil.o ABSOLUTE
    Load$$LR$$LR_IROM1$$Base                 0x08000000   Number         0  anon$$obj.o ABSOLUTE
    __Vectors                                0x08000000   Data           4  startup_mm32spin0280_keil.o(RESET)
    __Vectors_End                            0x080000c0   Data           0  startup_mm32spin0280_keil.o(RESET)
    __main                                   0x080000c1   Thumb Code     0  entry.o(.ARM.Collect$$$$00000000)
    _main_stk                                0x080000c1   Thumb Code     0  entry2.o(.ARM.Collect$$$$00000001)
    _main_scatterload                        0x080000c5   Thumb Code     0  entry5.o(.ARM.Collect$$$$00000004)
    __main_after_scatterload                 0x080000c9   Thumb Code     0  entry5.o(.ARM.Collect$$$$00000004)
    _main_clock                              0x080000c9   Thumb Code     0  entry7b.o(.ARM.Collect$$$$00000008)
    _main_cpp_init                           0x080000c9   Thumb Code     0  entry8b.o(.ARM.Collect$$$$0000000A)
    _main_init                               0x080000c9   Thumb Code     0  entry9a.o(.ARM.Collect$$$$0000000B)
    __rt_final_cpp                           0x080000d1   Thumb Code     0  entry10a.o(.ARM.Collect$$$$0000000D)
    __rt_final_exit                          0x080000d1   Thumb Code     0  entry11a.o(.ARM.Collect$$$$0000000F)
    Reset_Handler                            0x080000d5   Thumb Code    14  startup_mm32spin0280_keil.o(.text)
    HardFault_Handler                        0x080000e5   Thumb Code     2  startup_mm32spin0280_keil.o(.text)
    SVC_Handler                              0x080000e7   Thumb Code     2  startup_mm32spin0280_keil.o(.text)
    PendSV_Handler                           0x080000e9   Thumb Code     2  startup_mm32spin0280_keil.o(.text)
    CSM_IRQn_IRQHandler                      0x080000ed   Thumb Code     0  startup_mm32spin0280_keil.o(.text)
    MCF_Svm_7                                0x080000fd   Thumb Code   428  mcflib.o(.text)
    MLIB_Sin                                 0x080002b1   Thumb Code    90  mlib.o(.text)
    MLIB_Cos                                 0x0800030b   Thumb Code    90  mlib.o(.text)
    MLIB_SinCos                              0x08000365   Thumb Code   112  mlib.o(.text)
    MLIB_PIControl_Q15                       0x080003d5   Thumb Code   126  mlib.o(.text)
    MLIB_SMO                                 0x08000453   Thumb Code   190  mlib.o(.text)
    MLIB_PLL                                 0x08000511   Thumb Code    90  mlib.o(.text)
    MLIB_Ramp_Q15                            0x0800056b   Thumb Code    94  mlib.o(.text)
    MLIB_Ramp_Q31                            0x080005c9   Thumb Code    88  mlib.o(.text)
    IEC60730_B_RunTimeCPUTest                0x0800065d   Thumb Code   366  iec60730_b_cpurunkeil.o(.text)
    conAA                                    0x080007e0   Data           4  iec60730_b_cpustartkeil.o(.text)
    con55                                    0x080007e4   Data           4  iec60730_b_cpustartkeil.o(.text)
    IEC60730_B_StartUpCPUTest                0x080007f5   Thumb Code   476  iec60730_b_cpustartkeil.o(.text)
    IEC60730_B_FullRamMarchCVA5              0x08000a39   Thumb Code     0  iec60730_b_ramtestkeil.o(.text)
    IEC60730_B_FullRamMarchC                 0x08000b15   Thumb Code     0  iec60730_b_ramtestkeil.o(.text)
    IEC60730_B_TranspRamMarchCXStep          0x08000beb   Thumb Code     0  iec60730_b_ramtestkeil.o(.text)
    __aeabi_uidiv                            0x08000d15   Thumb Code     0  uidiv.o(.text)
    __aeabi_uidivmod                         0x08000d15   Thumb Code    44  uidiv.o(.text)
    __aeabi_idiv                             0x08000d41   Thumb Code     0  idiv.o(.text)
    __aeabi_idivmod                          0x08000d41   Thumb Code    40  idiv.o(.text)
    abs                                      0x08000d69   Thumb Code     8  siabs.o(.text)
    __aeabi_fmul                             0x08000d71   Thumb Code   122  fmul.o(.text)
    __aeabi_fdiv                             0x08000deb   Thumb Code   124  fdiv.o(.text)
    __aeabi_dadd                             0x08000e69   Thumb Code   328  dadd.o(.text)
    __aeabi_dsub                             0x08000fb1   Thumb Code    12  dadd.o(.text)
    __aeabi_drsub                            0x08000fbd   Thumb Code    12  dadd.o(.text)
    __aeabi_dmul                             0x08000fcd   Thumb Code   202  dmul.o(.text)
    __aeabi_ddiv                             0x0800109d   Thumb Code   234  ddiv.o(.text)
    __aeabi_dcmple                           0x0800118d   Thumb Code    44  dcmple.o(.text)
    __aeabi_dcmplt                           0x080011b9   Thumb Code    44  dcmplt.o(.text)
    __aeabi_dcmpge                           0x080011e5   Thumb Code    44  dcmpge.o(.text)
    __aeabi_ui2f                             0x08001211   Thumb Code    14  ffltui.o(.text)
    __aeabi_i2d                              0x08001221   Thumb Code    34  dflti.o(.text)
    __aeabi_f2uiz                            0x08001249   Thumb Code    40  ffixui.o(.text)
    __aeabi_d2iz                             0x08001271   Thumb Code    62  dfixi.o(.text)
    __aeabi_uldivmod                         0x080012b9   Thumb Code    96  uldiv.o(.text)
    __aeabi_llsl                             0x08001319   Thumb Code    32  llshl.o(.text)
    _ll_shift_l                              0x08001319   Thumb Code     0  llshl.o(.text)
    __aeabi_llsr                             0x08001339   Thumb Code    34  llushr.o(.text)
    _ll_ushift_r                             0x08001339   Thumb Code     0  llushr.o(.text)
    __aeabi_lasr                             0x0800135b   Thumb Code    38  llsshr.o(.text)
    _ll_sshift_r                             0x0800135b   Thumb Code     0  llsshr.o(.text)
    __I$use$fp                               0x08001381   Thumb Code     0  iusefp.o(.text)
    _float_round                             0x08001381   Thumb Code    16  fepilogue.o(.text)
    _float_epilogue                          0x08001391   Thumb Code   114  fepilogue.o(.text)
    _double_round                            0x08001403   Thumb Code    26  depilogue.o(.text)
    _double_epilogue                         0x0800141d   Thumb Code   164  depilogue.o(.text)
    __aeabi_d2ulz                            0x080014c1   Thumb Code    54  dfixul.o(.text)
    __aeabi_cdrcmple                         0x08001501   Thumb Code    38  cdrcmple.o(.text)
    __scatterload                            0x08001529   Thumb Code    28  init.o(.text)
    __scatterload_rt2                        0x08001529   Thumb Code     0  init.o(.text)
    __decompress                             0x0800154d   Thumb Code     0  __dczerorl.o(.text)
    __decompress0                            0x0800154d   Thumb Code    58  __dczerorl.o(.text)
    main                                     0x08001589   Thumb Code    40  iec60730_b_startup.o(.text.$Sub$$main)
    ADC1_IRQHandler                          0x080015b1   Thumb Code     2  mm32_it.o(.text.ADC1_IRQHandler)
    ADC2_IRQHandler                          0x080015b5   Thumb Code   420  mm32_it.o(.text.ADC2_IRQHandler)
    ADC_ANY_CH_Config                        0x08001759   Thumb Code   126  hal_adc.o(.text.ADC_ANY_CH_Config)
    ADC_ANY_Cmd                              0x080017d7   Thumb Code    52  hal_adc.o(.text.ADC_ANY_Cmd)
    ADC_ANY_NUM_Config                       0x0800180b   Thumb Code    44  hal_adc.o(.text.ADC_ANY_NUM_Config)
    ADC_Calibration                          0x08001837   Thumb Code    52  hal_adc.o(.text.ADC_Calibration)
    ADC_ClearITPendingBit                    0x0800186b   Thumb Code    52  hal_adc.o(.text.ADC_ClearITPendingBit)
    ADC_Cmd                                  0x0800189f   Thumb Code    52  hal_adc.o(.text.ADC_Cmd)
    ADC_ExternalTrigConvCmd                  0x080018d3   Thumb Code    52  hal_adc.o(.text.ADC_ExternalTrigConvCmd)
    ADC_ITConfig                             0x08001907   Thumb Code   110  hal_adc.o(.text.ADC_ITConfig)
    ADC_Init                                 0x08001975   Thumb Code    84  hal_adc.o(.text.ADC_Init)
    ADC_RegularChannelConfig                 0x080019c9   Thumb Code   214  hal_adc.o(.text.ADC_RegularChannelConfig)
    ADC_StructInit                           0x08001a9f   Thumb Code    38  hal_adc.o(.text.ADC_StructInit)
    ADC_TempSensorVrefintCmd                 0x08001ac5   Thumb Code    52  hal_adc.o(.text.ADC_TempSensorVrefintCmd)
    AutoCalPllFactor                         0x08001af9   Thumb Code   204  system_mm32spin0280.o(.text.AutoCalPllFactor)
    BSP_vDirectionDetect_Init                0x08001bc5   Thumb Code    60  board.o(.text.BSP_vDirectionDetect_Init)
    BSP_vUARTInit                            0x08001c01   Thumb Code    70  board.o(.text.BSP_vUARTInit)
    Board_ADC_Init                           0x08001c49   Thumb Code   200  board.o(.text.Board_ADC_Init)
    Board_Comp_Init                          0x08001d11   Thumb Code    34  board.o(.text.Board_Comp_Init)
    Bsp_Adc_Init                             0x08001d35   Thumb Code   136  board.o(.text.Bsp_Adc_Init)
    Bsp_Capture_Init                         0x08001db9   Thumb Code    64  board.o(.text.Bsp_Capture_Init)
    Bsp_Comp_Init                            0x08001df9   Thumb Code    56  board.o(.text.Bsp_Comp_Init)
    Bsp_Gpio_Init                            0x08001e31   Thumb Code    40  board.o(.text.Bsp_Gpio_Init)
    Bsp_Led_Init                             0x08001e59   Thumb Code    56  board.o(.text.Bsp_Led_Init)
    Bsp_Op_Init                              0x08001e91   Thumb Code   116  board.o(.text.Bsp_Op_Init)
    Bsp_PWM_Output_Init                      0x08001f01   Thumb Code    72  board.o(.text.Bsp_PWM_Output_Init)
    Bsp_Pwm_Init                             0x08001f45   Thumb Code   200  board.o(.text.Bsp_Pwm_Init)
    CBUart_Init                              0x0800200d   Thumb Code   164  uart_classb.o(.text.CBUart_Init)
    COMP1_2_3_4_5_IRQHandler                 0x080020b1   Thumb Code     2  mm32_it.o(.text.COMP1_2_3_4_5_IRQHandler)
    COMP_Cmd                                 0x080020b5   Thumb Code    68  hal_comp.o(.text.COMP_Cmd)
    COMP_DeInit                              0x080020f5   Thumb Code    28  hal_comp.o(.text.COMP_DeInit)
    COMP_Init                                0x0800210d   Thumb Code    64  hal_comp.o(.text.COMP_Init)
    COMP_SetCrv                              0x0800214d   Thumb Code    68  hal_comp.o(.text.COMP_SetCrv)
    CRC_CalcBlockCRC                         0x08002191   Thumb Code    64  hal_crc.o(.text.CRC_CalcBlockCRC)
    CRC_ResetDR                              0x080021d1   Thumb Code    12  hal_crc.o(.text.CRC_ResetDR)
    CUR_tGetPhaseCurrentCalPointer           0x080021dd   Thumb Code     8  current.o(.text.CUR_tGetPhaseCurrentCalPointer)
    CUR_updatePhaseCurrentBuffer             0x080021e1   Thumb Code   452  current.o(.text.CUR_updatePhaseCurrentBuffer)
    CUR_vGetPhaseCurrentBufferSamples        0x0800239d   Thumb Code   104  current.o(.text.CUR_vGetPhaseCurrentBufferSamples)
    CUR_vGetThreePhaseCur                    0x08002405   Thumb Code    44  current.o(.text.CUR_vGetThreePhaseCur)
    CUR_vSetOffsetMeasState                  0x08002431   Thumb Code    24  current.o(.text.CUR_vSetOffsetMeasState)
    DMA1_Channel1_IRQHandler                 0x08002449   Thumb Code     2  mm32_it.o(.text.DMA1_Channel1_IRQHandler)
    DMA1_Channel2_3_IRQHandler               0x0800244b   Thumb Code     2  mm32_it.o(.text.DMA1_Channel2_3_IRQHandler)
    DMA1_Channel4_5_IRQHandler               0x0800244d   Thumb Code     2  mm32_it.o(.text.DMA1_Channel4_5_IRQHandler)
    DcBus_Ripple_suppress                    0x08002451   Thumb Code   224  foc_pmsm.o(.text.DcBus_Ripple_suppress)
    Division                                 0x08002531   Thumb Code    80  drv_div.o(.text.Division)
    Drv_Adc_Basic_Init                       0x08002581   Thumb Code   148  drv_adc.o(.text.Drv_Adc_Basic_Init)
    Drv_Adc_Channel_Init                     0x08002615   Thumb Code   138  drv_adc.o(.text.Drv_Adc_Channel_Init)
    Drv_Comp_Init                            0x0800269f   Thumb Code   128  drv_comp.o(.text.Drv_Comp_Init)
    Drv_Hwdiv_Init                           0x0800271f   Thumb Code    26  drv_div.o(.text.Drv_Hwdiv_Init)
    Drv_Iwdg_Init                            0x08002739   Thumb Code    76  drv_iwdg.o(.text.Drv_Iwdg_Init)
    Drv_Opamp_Init                           0x08002785   Thumb Code    40  drv_opamp.o(.text.Drv_Opamp_Init)
    Drv_Pwm_Init                             0x080027ad   Thumb Code   296  drv_pwm.o(.text.Drv_Pwm_Init)
    Drv_Sqrt_Init                            0x080028d5   Thumb Code    22  drv_sqrt.o(.text.Drv_Sqrt_Init)
    Drv_Tim16_Counter_Init                   0x080028ed   Thumb Code   112  drv_counter.o(.text.Drv_Tim16_Counter_Init)
    Drv_Tim17_PWM_Out_Init                   0x08002959   Thumb Code   164  drv_output.o(.text.Drv_Tim17_PWM_Out_Init)
    Drv_Tim3_Pwm_In_Init                     0x080029f9   Thumb Code   200  drv_capture.o(.text.Drv_Tim3_Pwm_In_Init)
    Drv_u32GetTim16CountVal                  0x08002ac1   Thumb Code    16  drv_counter.o(.text.Drv_u32GetTim16CountVal)
    Drv_vCaptureInit                         0x08002ad1   Thumb Code    16  drv_capture.o(.text.Drv_vCaptureInit)
    Drv_vPwmOutputInit                       0x08002ae1   Thumb Code    44  drv_output.o(.text.Drv_vPwmOutputInit)
    Drv_vSetOutputFreq                       0x08002b09   Thumb Code    64  drv_output.o(.text.Drv_vSetOutputFreq)
    EXTI0_1_IRQHandler                       0x08002b49   Thumb Code     2  mm32_it.o(.text.EXTI0_1_IRQHandler)
    EXTI2_3_IRQHandler                       0x08002b4b   Thumb Code     2  mm32_it.o(.text.EXTI2_3_IRQHandler)
    EXTI4_15_IRQHandler                      0x08002b4d   Thumb Code   400  mm32_it.o(.text.EXTI4_15_IRQHandler)
    EXTI_ClearFlag                           0x08002cd9   Thumb Code    24  hal_exti.o(.text.EXTI_ClearFlag)
    EXTI_GetFlagStatus                       0x08002ced   Thumb Code    40  hal_exti.o(.text.EXTI_GetFlagStatus)
    FCK_vInitSafeTime                        0x08002d15   Thumb Code    28  fsclock.o(.text.FCK_vInitSafeTime)
    FCN_vGetPhaseVoltage                     0x08002d31   Thumb Code   228  fscommon.o(.text.FCN_vGetPhaseVoltage)
    FCN_vGetThreePhaseVol                    0x08002e11   Thumb Code    36  fscommon.o(.text.FCN_vGetThreePhaseVol)
    FHE_vFunctionSafetyCheck                 0x08002e35   Thumb Code    16  fshandle.o(.text.FHE_vFunctionSafetyCheck)
    FHE_vHandleTask                          0x08002e45   Thumb Code    88  fshandle.o(.text.FHE_vHandleTask)
    FIR_vCalcFilter                          0x08002e9d   Thumb Code    68  filter.o(.text.FIR_vCalcFilter)
    FLASH_IRQHandler                         0x08002ee1   Thumb Code     2  mm32_it.o(.text.FLASH_IRQHandler)
    FMC_u32GetSystickTimerCounter            0x08002ee3   Thumb Code     8  fsmcu.o(.text.FMC_u32GetSystickTimerCounter)
    FMC_vSetSystickTimerRegisters            0x08002eed   Thumb Code    16  fsmcu.o(.text.FMC_vSetSystickTimerRegisters)
    FOC_Current_Controller                   0x08002efd   Thumb Code   332  foc_pmsm.o(.text.FOC_Current_Controller)
    FPL_vPhaseLossCheck                      0x08003535   Thumb Code     8  fsphaseloss.o(.text.FPL_vPhaseLossCheck)
    FPL_vPhaseLossEvaluation                 0x0800353d   Thumb Code    44  fsphaseloss.o(.text.FPL_vPhaseLossEvaluation)
    FPL_vPhaselossprepareSamples             0x08003561   Thumb Code   384  fsphaseloss.o(.text.FPL_vPhaselossprepareSamples)
    FPM_vCart2Pol                            0x080036e1   Thumb Code   264  math.o(.text.FPM_vCart2Pol)
    FRK_vCheckMotorLock                      0x080037e9   Thumb Code     8  fsrotorlock.o(.text.FRK_vCheckMotorLock)
    FRK_vCheckMotorLockComplex               0x080037f1   Thumb Code   384  fsrotorlock.o(.text.FRK_vCheckMotorLockComplex)
    FRK_vLockedRotorEvaluation               0x08003969   Thumb Code     8  fsrotorlock.o(.text.FRK_vLockedRotorEvaluation)
    FRK_vcalcBemf                            0x08003971   Thumb Code   148  fsrotorlock.o(.text.FRK_vcalcBemf)
    FRK_vcalcCurrentVector                   0x08003a01   Thumb Code   192  fsrotorlock.o(.text.FRK_vcalcCurrentVector)
    FRK_vcalcVoltageVector                   0x08003abd   Thumb Code   148  fsrotorlock.o(.text.FRK_vcalcVoltageVector)
    FailSafePOR                              0x08003b51   Thumb Code   152  iec60730_b_aux.o(.text.FailSafePOR)
    Flashtest_config                         0x08003ce1   Thumb Code   336  iec60730_b_startup.o(.text.Flashtest_config)
    GPIO_Init                                0x08003e31   Thumb Code   280  hal_gpio.o(.text.GPIO_Init)
    GPIO_PinAFConfig                         0x08003f49   Thumb Code    94  hal_gpio.o(.text.GPIO_PinAFConfig)
    GPIO_ReadInputDataBit                    0x08003fa7   Thumb Code    44  hal_gpio.o(.text.GPIO_ReadInputDataBit)
    GPIO_StructInit                          0x08003fd5   Thumb Code    36  hal_gpio.o(.text.GPIO_StructInit)
    Get_ADC_Result                           0x08003ff9   Thumb Code   108  foc_pmsm.o(.text.Get_ADC_Result)
    HWDIV_IRQHandler                         0x08004075   Thumb Code     2  mm32_it.o(.text.HWDIV_IRQHandler)
    Hw_Sqrt                                  0x08004079   Thumb Code    60  drv_sqrt.o(.text.Hw_Sqrt)
    I2C1_IRQHandler                          0x080040b5   Thumb Code     2  mm32_it.o(.text.I2C1_IRQHandler)
    IEC60730_B_CRC_StoreclassBData           0x080040b9   Thumb Code    68  iec60730_b_startup.o(.text.IEC60730_B_CRC_StoreclassBData)
    IEC60730_B_CpuRunTime_test               0x080040f5   Thumb Code    64  iec60730_b_runtimetest.o(.text.IEC60730_B_CpuRunTime_test)
    IEC60730_B_FlashRunTime_test             0x0800412d   Thumb Code   392  iec60730_b_runtimetest.o(.text.IEC60730_B_FlashRunTime_test)
    IEC60730_B_FullCpu_test                  0x080042ad   Thumb Code    64  iec60730_b_startup.o(.text.IEC60730_B_FullCpu_test)
    IEC60730_B_FullFlash_test                0x080042e5   Thumb Code   140  iec60730_b_flashtest.o(.text.IEC60730_B_FullFlash_test)
    IEC60730_B_TranspMarch                   0x08004389   Thumb Code   220  iec60730_b_transpram.o(.text.IEC60730_B_TranspMarch)
    IEC60730_B_TranspMarchInit               0x08004469   Thumb Code    28  iec60730_b_transpram.o(.text.IEC60730_B_TranspMarchInit)
    IEC60730_B_WDGSelfTest                   0x08004491   Thumb Code   264  iec60730_b_aux.o(.text.IEC60730_B_WDGSelfTest)
    IEC60730_B_startup                       0x08004599   Thumb Code   352  iec60730_b_startup.o(.text.IEC60730_B_startup)
    IEC60730_CheckStack                      0x080046e1   Thumb Code   140  iec60730_b_runtimetest.o(.text.IEC60730_CheckStack)
    IEC60730_ClockStartUpTest                0x08004765   Thumb Code    92  iec60730_b_clocktest.o(.text.IEC60730_ClockStartUpTest)
    IEC60730_ClockTest_RunTime               0x080047b9   Thumb Code   152  iec60730_b_runtimetest.o(.text.IEC60730_ClockTest_RunTime)
    IEC60730_ClockTest_Startup               0x08004845   Thumb Code    56  iec60730_b_startup.o(.text.IEC60730_ClockTest_Startup)
    IEC60730_DoRunTimeChecks                 0x0800487d   Thumb Code   236  iec60730_b_runtimetest.o(.text.IEC60730_DoRunTimeChecks)
    IEC60730_FlashCrc32Init                  0x08004961   Thumb Code    24  iec60730_b_flashtest.o(.text.IEC60730_FlashCrc32Init)
    IEC60730_InitClock_Xcross_Measurement    0x0800497d   Thumb Code    60  iec60730_b_clocktest.o(.text.IEC60730_InitClock_Xcross_Measurement)
    IEC60730_InitRunTimeChecks               0x080049b9   Thumb Code   324  iec60730_b_runtimetest.o(.text.IEC60730_InitRunTimeChecks)
    IEC60730_MainClockTest                   0x08004aed   Thumb Code   124  iec60730_b_clocktest.o(.text.IEC60730_MainClockTest)
    IEC60730_Stack_Check                     0x08004b65   Thumb Code    64  iec60730_b_runtimetest.o(.text.IEC60730_Stack_Check)
    IEC60730_clockrun_valuecheck             0x08004ba5   Thumb Code    88  iec60730_b_clocktest.o(.text.IEC60730_clockrun_valuecheck)
    IEC60730_crc32Run                        0x08004bfd   Thumb Code   240  iec60730_b_flashtest.o(.text.IEC60730_crc32Run)
    IWDG_Enable                              0x08004d15   Thumb Code    16  hal_iwdg.o(.text.IWDG_Enable)
    IWDG_GetFlagStatus                       0x08004d21   Thumb Code    44  hal_iwdg.o(.text.IWDG_GetFlagStatus)
    IWDG_ReloadCounter                       0x08004d4d   Thumb Code    16  hal_iwdg.o(.text.IWDG_ReloadCounter)
    IWDG_SetPrescaler                        0x08004d59   Thumb Code    32  hal_iwdg.o(.text.IWDG_SetPrescaler)
    IWDG_SetReload                           0x08004d79   Thumb Code    32  hal_iwdg.o(.text.IWDG_SetReload)
    IWDG_WriteAccessCmd                      0x08004d95   Thumb Code    24  hal_iwdg.o(.text.IWDG_WriteAccessCmd)
    Init_Parameter                           0x08004dad   Thumb Code   640  user_function.o(.text.Init_Parameter)
    Interrupt_Init                           0x08005029   Thumb Code   116  mm32_it.o(.text.Interrupt_Init)
    Iwdg_Init                                0x0800509d   Thumb Code   120  iec60730_b_aux.o(.text.Iwdg_Init)
    M1_Fault_Fast                            0x08005211   Thumb Code    24  statemachine.o(.text.M1_Fault_Fast)
    M1_Fault_Slow                            0x08005225   Thumb Code    72  statemachine.o(.text.M1_Fault_Slow)
    M1_Init_Fast                             0x08005269   Thumb Code    36  statemachine.o(.text.M1_Init_Fast)
    M1_Init_Slow                             0x08005285   Thumb Code    16  statemachine.o(.text.M1_Init_Slow)
    M1_Run_Fast                              0x08005925   Thumb Code    60  statemachine.o(.text.M1_Run_Fast)
    M1_Run_Slow                              0x08005959   Thumb Code    40  statemachine.o(.text.M1_Run_Slow)
    M1_Stop_Fast                             0x08005979   Thumb Code    60  statemachine.o(.text.M1_Stop_Fast)
    M1_Stop_Slow                             0x080059b1   Thumb Code    48  statemachine.o(.text.M1_Stop_Slow)
    M1_SwitchRunReadyWindDet                 0x08005ab5   Thumb Code    12  statemachine.o(.text.M1_SwitchRunReadyWindDet)
    M1_SwitchRunWindDetAlign                 0x08005b55   Thumb Code    12  statemachine.o(.text.M1_SwitchRunWindDetAlign)
    M1_SwitchRunWindDetBrake                 0x08005b5d   Thumb Code    12  statemachine.o(.text.M1_SwitchRunWindDetBrake)
    M1_SwitchRunWindDetReady                 0x08005b65   Thumb Code    12  statemachine.o(.text.M1_SwitchRunWindDetReady)
    MIT_ptGetCaptureData                     0x08005e15   Thumb Code     8  mm32_it.o(.text.MIT_ptGetCaptureData)
    MIT_vReadNormalADCValue                  0x08005e1d   Thumb Code   164  mm32_it.o(.text.MIT_vReadNormalADCValue)
    MOS_bGetInitStatus                       0x08006181   Thumb Code    16  modbus.o(.text.MOS_bGetInitStatus)
    MOS_vCallbackInit                        0x08006191   Thumb Code    24  modbus.o(.text.MOS_vCallbackInit)
    MOS_vCheckReadAllDataCommand             0x080061a9   Thumb Code    80  modbus.o(.text.MOS_vCheckReadAllDataCommand)
    MOS_vCheckWriteDataCommand               0x080061f5   Thumb Code    80  modbus.o(.text.MOS_vCheckWriteDataCommand)
    MOS_vConfigureSlaveAddress               0x08006241   Thumb Code    20  modbus.o(.text.MOS_vConfigureSlaveAddress)
    MOS_vDataReceiveInterrupt                0x0800624d   Thumb Code    76  modbus.o(.text.MOS_vDataReceiveInterrupt)
    MOS_vEventHandler                        0x08006295   Thumb Code    96  modbus.o(.text.MOS_vEventHandler)
    MOS_vModBusHandler_2                     0x080062f5   Thumb Code   220  modbus.o(.text.MOS_vModBusHandler_2)
    MOS_vModbudFun6                          0x080063cd   Thumb Code   284  modbus.o(.text.MOS_vModbudFun6)
    MOS_vModbusFun4                          0x080064e1   Thumb Code   304  modbus.o(.text.MOS_vModbusFun4)
    MOS_vModbusInit                          0x0800660d   Thumb Code    36  modbus.o(.text.MOS_vModbusInit)
    MOS_vModbusProtocalConfig                0x08006631   Thumb Code    12  modbus.o(.text.MOS_vModbusProtocalConfig)
    MOS_vReadWriteDataCommon                 0x08006639   Thumb Code    68  modbus.o(.text.MOS_vReadWriteDataCommon)
    MOS_vRegisterHandler                     0x0800667d   Thumb Code    66  modbus.o(.text.MOS_vRegisterHandler)
    MOS_vSlaveAddressUpdate                  0x080066c1   Thumb Code    20  modbus.o(.text.MOS_vSlaveAddressUpdate)
    MOS_vTimeoutInterrupt                    0x080066d5   Thumb Code    56  modbus.o(.text.MOS_vTimeoutInterrupt)
    MOS_vTriggerEvent                        0x0800670d   Thumb Code    44  modbus.o(.text.MOS_vTriggerEvent)
    MOS_vWriteDataIntoEEP                    0x08006739   Thumb Code     2  modbus.o(.text.MOS_vWriteDataIntoEEP)
    MOT_vAngleSmoothSwitch                   0x0800673d   Thumb Code   156  statemachine.o(.text.MOT_vAngleSmoothSwitch)
    NMI_Handler                              0x080067d5   Thumb Code    28  iec60730_b_aux.o(.text.NMI_Handler)
    NVIC_Configure                           0x080067f1   Thumb Code    44  mm32_it.o(.text.NVIC_Configure)
    NVIC_Init                                0x0800681d   Thumb Code   124  hal_misc.o(.text.NVIC_Init)
    OPAMP_Configure                          0x08006899   Thumb Code    56  hal_opamp.o(.text.OPAMP_Configure)
    PMSM_Obs                                 0x080068d1   Thumb Code   176  foc_pmsm.o(.text.PMSM_Obs)
    PVD_IRQHandler                           0x08006981   Thumb Code     2  mm32_it.o(.text.PVD_IRQHandler)
    PVU_CheckStatus                          0x08006983   Thumb Code    20  hal_iwdg.o(.text.PVU_CheckStatus)
    PWM_IRQHandler                           0x08006997   Thumb Code     2  mm32_it.o(.text.PWM_IRQHandler)
    PWM_Update                               0x08006999   Thumb Code   120  statemachine.o(.text.PWM_Update)
    Peripheral_Init                          0x08006a11   Thumb Code    68  board.o(.text.Peripheral_Init)
    RCC_AHBPeriphClockCmd                    0x08006a55   Thumb Code    56  hal_rcc.o(.text.RCC_AHBPeriphClockCmd)
    RCC_APB1PeriphClockCmd                   0x08006a89   Thumb Code    56  hal_rcc.o(.text.RCC_APB1PeriphClockCmd)
    RCC_APB2PeriphClockCmd                   0x08006abd   Thumb Code    56  hal_rcc.o(.text.RCC_APB2PeriphClockCmd)
    RCC_ClearITPendingBit                    0x08006af1   Thumb Code    32  hal_rcc.o(.text.RCC_ClearITPendingBit)
    RCC_ClockSecuritySystemCmd               0x08006b11   Thumb Code    40  hal_rcc.o(.text.RCC_ClockSecuritySystemCmd)
    RCC_GPIO_ClockCmd                        0x08006b35   Thumb Code   244  hal_rcc.o(.text.RCC_GPIO_ClockCmd)
    RCC_GetFlagStatus                        0x08006c29   Thumb Code   112  hal_rcc.o(.text.RCC_GetFlagStatus)
    RCC_GetHCLKFreq                          0x08006c95   Thumb Code    32  hal_rcc.o(.text.RCC_GetHCLKFreq)
    RCC_GetPCLK1Freq                         0x08006cad   Thumb Code    36  hal_rcc.o(.text.RCC_GetPCLK1Freq)
    RCC_GetPCLK2Freq                         0x08006cc9   Thumb Code    36  hal_rcc.o(.text.RCC_GetPCLK2Freq)
    RCC_GetSysClockFreq                      0x08006ce9   Thumb Code   196  hal_rcc.o(.text.RCC_GetSysClockFreq)
    RCC_IRQHandler                           0x08006dad   Thumb Code     2  mm32_it.o(.text.RCC_IRQHandler)
    RCC_LSICmd                               0x08006db1   Thumb Code    36  hal_rcc.o(.text.RCC_LSICmd)
    RCC_UART_ClockCmd                        0x08006dd5   Thumb Code   140  hal_rcc.o(.text.RCC_UART_ClockCmd)
    RMP_vOpenPhaseCheckComplex               0x08006e61   Thumb Code   584  fsphaseloss.o(.text.RMP_vOpenPhaseCheckComplex)
    RVU_CheckStatus                          0x080070a9   Thumb Code    20  hal_iwdg.o(.text.RVU_CheckStatus)
    Ramtest_config                           0x080070bd   Thumb Code    60  iec60730_b_startup.o(.text.Ramtest_config)
    SCL_bDataFilter                          0x080070f9   Thumb Code   112  speedcontrol.o(.text.SCL_bDataFilter)
    SCL_vCalcualteTargetSpeed                0x08007161   Thumb Code   520  speedcontrol.o(.text.SCL_vCalcualteTargetSpeed)
    SCL_vCalculateActualSpeedFromPU          0x08007345   Thumb Code    84  speedcontrol.o(.text.SCL_vCalculateActualSpeedFromPU)
    SCL_vMotorDirectionCheck                 0x0800738d   Thumb Code   200  speedcontrol.o(.text.SCL_vMotorDirectionCheck)
    SCL_vSpeedControlHandle                  0x08007455   Thumb Code   176  speedcontrol.o(.text.SCL_vSpeedControlHandle)
    SCL_vSpeedControlModbusHandle            0x08007501   Thumb Code   344  speedcontrol.o(.text.SCL_vSpeedControlModbusHandle)
    SCL_vSpeedControlPWMHandle               0x08007659   Thumb Code   120  speedcontrol.o(.text.SCL_vSpeedControlPWMHandle)
    SMR_vCheckSpeedMonitor                   0x080076d1   Thumb Code     8  speedmonitor.o(.text.SMR_vCheckSpeedMonitor)
    SMR_vCheckSpeedMonitorImplement          0x080076d9   Thumb Code   304  speedmonitor.o(.text.SMR_vCheckSpeedMonitorImplement)
    SMR_vIndependentMotorModelCalculation    0x080077fd   Thumb Code   588  speedmonitor.o(.text.SMR_vIndependentMotorModelCalculation)
    SMR_vSpeedEvaluation                     0x08007a49   Thumb Code     8  speedmonitor.o(.text.SMR_vSpeedEvaluation)
    SMR_vSpeedEvaluationComplex              0x08007a51   Thumb Code    40  speedmonitor.o(.text.SMR_vSpeedEvaluationComplex)
    SPI1_IRQHandler                          0x08007a79   Thumb Code     2  mm32_it.o(.text.SPI1_IRQHandler)
    SPI2_IRQHandler                          0x08007a7b   Thumb Code     2  mm32_it.o(.text.SPI2_IRQHandler)
    STK_tGetSafeTime                         0x08007a7d   Thumb Code    24  fsclock.o(.text.STK_tGetSafeTime)
    STK_vSetGenericTimerCallbackFunc         0x08007a91   Thumb Code    24  mm32_it.o(.text.STK_vSetGenericTimerCallbackFunc)
    STK_vTriggerSafeTime                     0x08007aa9   Thumb Code   236  fsclock.o(.text.STK_vTriggerSafeTime)
    SysTick_Handler                          0x08007ded   Thumb Code   408  iec60730_b_aux.o(.text.SysTick_Handler)
    SystemCoreClockUpdate                    0x08007f85   Thumb Code   204  system_mm32spin0280.o(.text.SystemCoreClockUpdate)
    SystemInit                               0x08008051   Thumb Code    12  system_mm32spin0280.o(.text.SystemInit)
    TIM14_IRQHandler                         0x080081c3   Thumb Code     2  mm32_it.o(.text.TIM14_IRQHandler)
    TIM16_IRQHandler                         0x080081c5   Thumb Code     2  mm32_it.o(.text.TIM16_IRQHandler)
    TIM17_IRQHandler                         0x080081c7   Thumb Code     2  mm32_it.o(.text.TIM17_IRQHandler)
    TIM1_BRK_UP_TRG_COM_IRQHandler           0x080081c9   Thumb Code    56  mm32_it.o(.text.TIM1_BRK_UP_TRG_COM_IRQHandler)
    TIM1_CC_IRQHandler                       0x08008201   Thumb Code     2  mm32_it.o(.text.TIM1_CC_IRQHandler)
    TIM2_IRQHandler                          0x08008205   Thumb Code   276  iec60730_b_clocktest.o(.text.TIM2_IRQHandler)
    TIM3_IRQHandler                          0x08008319   Thumb Code    76  mm32_it.o(.text.TIM3_IRQHandler)
    TIM8_BRK_UP_TRG_COM_IRQHandler           0x08008361   Thumb Code     2  mm32_it.o(.text.TIM8_BRK_UP_TRG_COM_IRQHandler)
    TIM8_CC_IRQHandler                       0x08008363   Thumb Code     2  mm32_it.o(.text.TIM8_CC_IRQHandler)
    TIM_ARRPreloadConfig                     0x08008365   Thumb Code    52  hal_tim.o(.text.TIM_ARRPreloadConfig)
    TIM_BDTRConfig                           0x08008399   Thumb Code    52  hal_tim.o(.text.TIM_BDTRConfig)
    TIM_CCxCmd                               0x080083cd   Thumb Code    52  hal_tim.o(.text.TIM_CCxCmd)
    TIM_ClearFlag                            0x08008401   Thumb Code    30  hal_tim.o(.text.TIM_ClearFlag)
    TIM_ClearITPendingBit                    0x0800841f   Thumb Code    30  hal_tim.o(.text.TIM_ClearITPendingBit)
    TIM_Cmd                                  0x0800843d   Thumb Code    52  hal_tim.o(.text.TIM_Cmd)
    TIM_CtrlPWMOutputs                       0x08008471   Thumb Code    56  hal_tim.o(.text.TIM_CtrlPWMOutputs)
    TIM_DeInit                               0x080084a9   Thumb Code   180  hal_tim.o(.text.TIM_DeInit)
    TIM_GetCapture1                          0x0800854d   Thumb Code    16  hal_tim.o(.text.TIM_GetCapture1)
    TIM_GetCapture2                          0x0800855d   Thumb Code    16  hal_tim.o(.text.TIM_GetCapture2)
    TIM_GetCapture4                          0x0800856d   Thumb Code    16  hal_tim.o(.text.TIM_GetCapture4)
    TIM_GetCounter                           0x0800857d   Thumb Code    16  hal_tim.o(.text.TIM_GetCounter)
    TIM_GetFlagStatus                        0x0800858d   Thumb Code    42  hal_tim.o(.text.TIM_GetFlagStatus)
    TIM_GetITStatus                          0x080085b7   Thumb Code    70  hal_tim.o(.text.TIM_GetITStatus)
    TIM_ICInit                               0x080085fd   Thumb Code   192  hal_tim.o(.text.TIM_ICInit)
    TIM_ICStructInit                         0x080086bd   Thumb Code    36  hal_tim.o(.text.TIM_ICStructInit)
    TIM_ITConfig                             0x080086e1   Thumb Code    60  hal_tim.o(.text.TIM_ITConfig)
    TIM_OC1Init                              0x0800871d   Thumb Code   172  hal_tim.o(.text.TIM_OC1Init)
    TIM_OC1PreloadConfig                     0x080087c1   Thumb Code    38  hal_tim.o(.text.TIM_OC1PreloadConfig)
    TIM_OC2Init                              0x080087e9   Thumb Code   156  hal_tim.o(.text.TIM_OC2Init)
    TIM_OC2PreloadConfig                     0x08008885   Thumb Code    42  hal_tim.o(.text.TIM_OC2PreloadConfig)
    TIM_OC3Init                              0x080088b1   Thumb Code   152  hal_tim.o(.text.TIM_OC3Init)
    TIM_OC3PreloadConfig                     0x08008941   Thumb Code    38  hal_tim.o(.text.TIM_OC3PreloadConfig)
    TIM_OC4Init                              0x08008969   Thumb Code   128  hal_tim.o(.text.TIM_OC4Init)
    TIM_OCStructInit                         0x080089e9   Thumb Code    46  hal_tim.o(.text.TIM_OCStructInit)
    TIM_PWMIConfig                           0x08008a17   Thumb Code   216  hal_tim.o(.text.TIM_PWMIConfig)
    TIM_SelectInputTrigger                   0x08008aef   Thumb Code    38  hal_tim.o(.text.TIM_SelectInputTrigger)
    TIM_SelectSlaveMode                      0x08008b15   Thumb Code    38  hal_tim.o(.text.TIM_SelectSlaveMode)
    TIM_SetAutoreload                        0x08008b3b   Thumb Code    26  hal_tim.o(.text.TIM_SetAutoreload)
    TIM_SetIC1Prescaler                      0x08008b55   Thumb Code    38  hal_tim.o(.text.TIM_SetIC1Prescaler)
    TIM_SetIC2Prescaler                      0x08008b7b   Thumb Code    42  hal_tim.o(.text.TIM_SetIC2Prescaler)
    TIM_SetIC3Prescaler                      0x08008ba5   Thumb Code    38  hal_tim.o(.text.TIM_SetIC3Prescaler)
    TIM_SetIC4Prescaler                      0x08008bcb   Thumb Code    42  hal_tim.o(.text.TIM_SetIC4Prescaler)
    TIM_TimeBaseInit                         0x08008bf5   Thumb Code   204  hal_tim.o(.text.TIM_TimeBaseInit)
    TIM_TimeBaseStructInit                   0x08008cc1   Thumb Code    36  hal_tim.o(.text.TIM_TimeBaseStructInit)
    TIM_bBrakeUpdate                         0x08008ce5   Thumb Code   120  drv_pwm.o(.text.TIM_bBrakeUpdate)
    TIM_bSetOutputConfig                     0x08008d59   Thumb Code   148  drv_pwm.o(.text.TIM_bSetOutputConfig)
    TIM_vBrakeInit                           0x08008de9   Thumb Code    84  drv_pwm.o(.text.TIM_vBrakeInit)
    TIM_vSetCompareValues                    0x08008e7d   Thumb Code   104  drv_pwm.o(.text.TIM_vSetCompareValues)
    TIM_vSetOutputs                          0x08008ee1   Thumb Code    96  drv_pwm.o(.text.TIM_vSetOutputs)
    TRR_vClarkeTrans                         0x08008f41   Thumb Code    72  transfer.o(.text.TRR_vClarkeTrans)
    TSE_vAdaptInterfaceFromFlag2TaskCall     0x08008f89   Thumb Code    80  timeslice.o(.text.TSE_vAdaptInterfaceFromFlag2TaskCall)
    TSE_vRegisterHandler                     0x08008fd5   Thumb Code    72  timeslice.o(.text.TSE_vRegisterHandler)
    TSE_vSliceTaskHandle                     0x0800901d   Thumb Code   120  timeslice.o(.text.TSE_vSliceTaskHandle)
    Tim2_Init                                0x08009095   Thumb Code   164  iec60730_b_clocktest.o(.text.Tim2_Init)
    UART1_IRQHandler                         0x08009139   Thumb Code     2  mm32_it.o(.text.UART1_IRQHandler)
    UART2_IRQHandler                         0x0800913d   Thumb Code    44  mm32_it.o(.text.UART2_IRQHandler)
    UART3_IRQHandler                         0x08009161   Thumb Code     2  mm32_it.o(.text.UART3_IRQHandler)
    UART_ClearITPendingBit                   0x08009163   Thumb Code    26  hal_uart.o(.text.UART_ClearITPendingBit)
    UART_Cmd                                 0x0800917d   Thumb Code    38  hal_uart.o(.text.UART_Cmd)
    UART_GetFlagStatus                       0x080091a3   Thumb Code    44  hal_uart.o(.text.UART_GetFlagStatus)
    UART_GetITStatus                         0x080091cf   Thumb Code    44  hal_uart.o(.text.UART_GetITStatus)
    UART_ITConfig                            0x080091fb   Thumb Code    66  hal_uart.o(.text.UART_ITConfig)
    UART_Init                                0x0800923d   Thumb Code   180  hal_uart.o(.text.UART_Init)
    UART_ReceiveData                         0x080092f1   Thumb Code    18  hal_uart.o(.text.UART_ReceiveData)
    UART_SendData                            0x08009303   Thumb Code    26  hal_uart.o(.text.UART_SendData)
    UART_StructInit                          0x0800931d   Thumb Code    46  hal_uart.o(.text.UART_StructInit)
    UART_bUARTTXBUFEMPT                      0x0800934d   Thumb Code    40  drv_sci.o(.text.UART_bUARTTXBUFEMPT)
    UART_vCONSOLE_Init                       0x08009371   Thumb Code   148  drv_sci.o(.text.UART_vCONSOLE_Init)
    UART_vGetUARTData                        0x08009401   Thumb Code    36  drv_sci.o(.text.UART_vGetUARTData)
    UART_vModbusTxDisable                    0x08009421   Thumb Code    16  drv_sci.o(.text.UART_vModbusTxDisable)
    UART_vSetUartReceiveCallbackFunc         0x08009465   Thumb Code    24  mm32_it.o(.text.UART_vSetUartReceiveCallbackFunc)
    UART_vWriteData                          0x0800947d   Thumb Code    76  drv_sci.o(.text.UART_vWriteData)
    UFN_vBackwardParamStartupInit            0x080094c9   Thumb Code   192  user_function.o(.text.UFN_vBackwardParamStartupInit)
    UFN_vForwardParamStartupInit             0x08009575   Thumb Code   184  user_function.o(.text.UFN_vForwardParamStartupInit)
    VOL_tGetDclVolRawSampleQ                 0x08009629   Thumb Code    12  voltage.o(.text.VOL_tGetDclVolRawSampleQ)
    Var_Filt                                 0x08009635   Thumb Code    72  user_function.o(.text.Var_Filt)
    WDG_Init                                 0x08009679   Thumb Code    14  main.o(.text.WDG_Init)
    WDG_Refresh                              0x08009687   Thumb Code     8  main.o(.text.WDG_Refresh)
    WDN_AlignInit                            0x0800968f   Thumb Code     8  winddetection.o(.text.WDN_AlignInit)
    WDN_vCalculateBemfPeak                   0x08009699   Thumb Code   460  winddetection.o(.text.WDN_vCalculateBemfPeak)
    WDN_vInitWindDetection                   0x08009861   Thumb Code   220  winddetection.o(.text.WDN_vInitWindDetection)
    WDN_vWindDetection                       0x08009939   Thumb Code   300  winddetection.o(.text.WDN_vWindDetection)
    WWDG_DeInit                              0x08009a65   Thumb Code    12  hal_wwdg.o(.text.WWDG_DeInit)
    WWDG_Enable                              0x08009a71   Thumb Code    28  hal_wwdg.o(.text.WWDG_Enable)
    WWDG_IRQHandler                          0x08009a8d   Thumb Code     2  mm32_it.o(.text.WWDG_IRQHandler)
    WWDG_Init                                0x08009a8f   Thumb Code    70  iec60730_b_aux.o(.text.WWDG_Init)
    WWDG_SetPrescaler                        0x08009ad5   Thumb Code    32  hal_wwdg.o(.text.WWDG_SetPrescaler)
    WWDG_SetWindowValue                      0x08009af1   Thumb Code    36  hal_wwdg.o(.text.WWDG_SetWindowValue)
    control_flow_check_point                 0x08009c45   Thumb Code    68  iec60730_b_startup.o(.text.control_flow_check_point)
    crc16                                    0x08009c89   Thumb Code   108  modbuscrc.o(.text.crc16)
    exNVIC_Init                              0x08009d41   Thumb Code   124  hal_misc.o(.text.exNVIC_Init)
    exRCC_APB1PeriphReset                    0x08009dbd   Thumb Code    36  hal_rcc.o(.text.exRCC_APB1PeriphReset)
    exRCC_APB2PeriphReset                    0x08009de1   Thumb Code    36  hal_rcc.o(.text.exRCC_APB2PeriphReset)
    fputc                                    0x08009e05   Thumb Code    56  uart_classb.o(.text.fputc)
    $Super$$main                             0x08009e3d   Thumb Code   112  main.o(.text.main)
    variable_reset                           0x08009ea9   Thumb Code   180  user_function.o(.text.variable_reset)
    __0printf                                0x08009f5d   Thumb Code    24  printfa.o(i.__0printf)
    __1printf                                0x08009f5d   Thumb Code     0  printfa.o(i.__0printf)
    __2printf                                0x08009f5d   Thumb Code     0  printfa.o(i.__0printf)
    __c89printf                              0x08009f5d   Thumb Code     0  printfa.o(i.__0printf)
    printf                                   0x08009f5d   Thumb Code     0  printfa.o(i.__0printf)
    __ARM_clz                                0x08009f7d   Thumb Code    46  depilogue.o(i.__ARM_clz)
    __scatterload_copy                       0x08009fab   Thumb Code    14  handlers.o(i.__scatterload_copy)
    __scatterload_null                       0x08009fb9   Thumb Code     2  handlers.o(i.__scatterload_null)
    __scatterload_zeroinit                   0x08009fbb   Thumb Code    14  handlers.o(i.__scatterload_zeroinit)
    Sin_Cos_Table                            0x0800a874   Data         512  mlib.o(.constdata)
    FPM_tCordicAngleTabQ15                   0x0800aa7a   Data          32  math.o(.rodata.FPM_tCordicAngleTabQ15)
    auchCRCHi                                0x0800aad8   Data         256  modbuscrc.o(.rodata.auchCRCHi)
    auchCRCLo                                0x0800abd8   Data         256  modbuscrc.o(.rodata.auchCRCLo)
    s_STATE_FAST                             0x0800ad18   Data          16  statemachine.o(.rodata.s_STATE_FAST)
    s_STATE_SLOW                             0x0800ad28   Data          16  statemachine.o(.rodata.s_STATE_SLOW)
    tbPresc                                  0x0800b017   Data          16  hal_rcc.o(.rodata.tbPresc)
    Region$$Table$$Base                      0x0800b028   Number         0  anon$$obj.o(Region$$Table)
    Region$$Table$$Limit                     0x0800b098   Number         0  anon$$obj.o(Region$$Table)
    __Check_Sum                              0x0800b0c0   Data           4  startup_mm32spin0280_keil.o(CHECKSUM)
    Load$$LR$$LR_IROM1$$Limit                0x0800b208   Number         0  anon$$obj.o ABSOLUTE
    aRunTimeRamBuf                           0x20000000   Data          32  iec60730_b_startup.o(RUN_TIME_RAM_BUF)
    pRunTimeRamChk                           0x20000020   Data           4  iec60730_b_startup.o(RUN_TIME_RAM_PNT)
    pRunTimeRamChkInv                        0x20000024   Data           4  iec60730_b_startup.o(RUN_TIME_RAM_PNT)
    aGAP_FOR_RAM_TEST_OVERLAY                0x20000028   Data           8  iec60730_b_startup.o(RUN_TIME_RAM_PNT)
    CtrlFlowCnt                              0x20000030   Data           4  iec60730_b_startup.o(CLASS_B_RAM)
    ISRCtrlFlowCnt                           0x20000034   Data           4  iec60730_b_startup.o(CLASS_B_RAM)
    PeriodValue                              0x20000038   Data           4  iec60730_b_startup.o(CLASS_B_RAM)
    TickCounter                              0x2000003c   Data           4  iec60730_b_startup.o(CLASS_B_RAM)
    TimeBaseFlag                             0x20000040   Data           4  iec60730_b_startup.o(CLASS_B_RAM)
    LSIPeriodFlag                            0x20000044   Data           4  iec60730_b_startup.o(CLASS_B_RAM)
    LastCtrlFlowCnt                          0x20000048   Data           4  iec60730_b_startup.o(CLASS_B_RAM)
    pRunCrc32Chk                             0x2000004c   Data           4  iec60730_b_startup.o(CLASS_B_RAM)
    RefCrc32                                 0x20000050   Data           4  iec60730_b_startup.o(CLASS_B_RAM)
    Incap_Freq                               0x20000054   Data           4  iec60730_b_startup.o(CLASS_B_RAM)
    CtrlFlowCntInv                           0x20000058   Data           4  iec60730_b_startup.o(CLASS_B_RAM_REV)
    ISRCtrlFlowCntInv                        0x2000005c   Data           4  iec60730_b_startup.o(CLASS_B_RAM_REV)
    PeriodValueInv                           0x20000060   Data           4  iec60730_b_startup.o(CLASS_B_RAM_REV)
    TickCounterInv                           0x20000064   Data           4  iec60730_b_startup.o(CLASS_B_RAM_REV)
    TimeBaseFlagInv                          0x20000068   Data           4  iec60730_b_startup.o(CLASS_B_RAM_REV)
    LSIPeriodFlagInv                         0x2000006c   Data           4  iec60730_b_startup.o(CLASS_B_RAM_REV)
    LastCtrlFlowCntInv                       0x20000070   Data           4  iec60730_b_startup.o(CLASS_B_RAM_REV)
    pRunCrc32ChkInv                          0x20000074   Data           4  iec60730_b_startup.o(CLASS_B_RAM_REV)
    RefCrc32Inv                              0x20000078   Data           4  iec60730_b_startup.o(CLASS_B_RAM_REV)
    __stdout                                 0x20000080   Data           4  stdout.o(.data)
    MOS_aucReadAllData                       0x200000a4   Data           8  modbus.o(.data.MOS_aucReadAllData)
    MOS_aucWriteData                         0x200000ac   Data           8  modbus.o(.data.MOS_aucWriteData)
    RegData                                  0x200000b6   Data          24  modbus.o(.data.RegData)
    SystemCoreClock                          0x20000128   Data           4  system_mm32spin0280.o(.data.SystemCoreClock)
    WDN_tWindDetectionPara                   0x2000012e   Data           2  winddetection.o(.data.WDN_tWindDetectionPara)
    eM1_MainState                            0x20000130   Data           1  statemachine.o(.data.eM1_MainState)
    App_FLASH_BLOCK_WORDS                    0x20000148   Data           4  iec60730_b_startup.o(.bss.App_FLASH_BLOCK_WORDS)
    App_REF_CRC32                            0x2000014c   Data           4  iec60730_b_startup.o(.bss.App_REF_CRC32)
    App_ROM_END                              0x20000150   Data           4  iec60730_b_startup.o(.bss.App_ROM_END)
    App_ROM_SIZE                             0x20000154   Data           4  iec60730_b_startup.o(.bss.App_ROM_SIZE)
    App_ROM_SIZEinWORDS                      0x20000158   Data           4  iec60730_b_startup.o(.bss.App_ROM_SIZEinWORDS)
    App_ROM_START                            0x2000015c   Data           4  iec60730_b_startup.o(.bss.App_ROM_START)
    App_STEPS_NUMBER                         0x20000160   Data           4  iec60730_b_startup.o(.bss.App_STEPS_NUMBER)
    Error_word                               0x20000230   Data           4  iec60730_b_startup.o(.bss.Error_word)
    FHE_eCurrentCallId                       0x200002a4   Data           1  fshandle.o(.bss.FHE_eCurrentCallId)
    FULL_FLASH_CHECKED                       0x20000388   Data           4  iec60730_b_runtimetest.o(.bss.FULL_FLASH_CHECKED)
    FlashFulltestcall                        0x20000394   Data           4  iec60730_b_startup.o(.bss.FlashFulltestcall)
    FlashRuntestcall                         0x20000398   Data           4  iec60730_b_runtimetest.o(.bss.FlashRuntestcall)
    M1FaultID                                0x2000039c   Data           2  main.o(.bss.M1FaultID)
    M1FaultID_Record                         0x2000039e   Data           2  main.o(.bss.M1FaultID_Record)
    MOS_tModbusData                          0x200003d9   Data          45  modbus.o(.bss.MOS_tModbusData)
    Motor_1st                                0x20000418   Data         340  main.o(.bss.Motor_1st)
    RAMBuffertest_end                        0x2000057c   Data           4  iec60730_b_startup.o(.bss.RAMBuffertest_end)
    RAMRunTimetest_end                       0x20000580   Data           4  iec60730_b_startup.o(.bss.RAMRunTimetest_end)
    RAMRunTimetest_start                     0x20000584   Data           4  iec60730_b_startup.o(.bss.RAMRunTimetest_start)
    RAM_endadd_run                           0x20000588   Data           4  iec60730_b_startup.o(.bss.RAM_endadd_run)
    STK_pfGeneralTimerCallback               0x20000638   Data           4  mm32_it.o(.bss.STK_pfGeneralTimerCallback)
    WDN_tWindDetectionData                   0x20000660   Data           8  winddetection.o(.bss.WDN_tWindDetectionData)
    eM1_RunSubState                          0x2000066d   Data           1  statemachine.o(.bss.eM1_RunSubState)
    rom_test                                 0x20000670   Data           4  iec60730_b_runtimetest.o(.bss.rom_test)
    runtime_checkindx                        0x20000674   Data           1  iec60730_b_runtimetest.o(.bss.runtime_checkindx)
    runtime_flash_CtrlFlow_indx              0x20000675   Data           1  iec60730_b_runtimetest.o(.bss.runtime_flash_CtrlFlow_indx)
    s16PosElEst_SMO                          0x20000676   Data           2  statemachine.o(.bss.s16PosElEst_SMO)
    temp                                     0x20000678   Data           4  iec60730_b_clocktest.o(.bss.temp)
    uwTick                                   0x200006ac   Data           4  iec60730_b_aux.o(.bss.uwTick)
    aStackOverFlowPtrn                       0x20001bf0   Data          16  iec60730_b_startup.o(STACK_BOTTOM)
    __initial_sp                             0x20002000   Data           0  startup_mm32spin0280_keil.o(STACK)



==============================================================================

Memory Map of the image

  Image Entry point : 0x080000c1

  Load Region LR_IROM1 (Base: 0x08000000, Size: 0x0000b208, Max: 0x00020000, ABSOLUTE)

    Execution Region ER_IROM1 (Exec base: 0x08000000, Load base: 0x08000000, Size: 0x0000b0c4, Max: 0x00020000, ABSOLUTE)

    Exec Addr    Load Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x08000000   0x08000000   0x000000c0   Data   RO         2385    RESET               startup_mm32spin0280_keil.o
    0x080000c0   0x080000c0   0x00000000   Code   RO         2643  * .ARM.Collect$$$$00000000  mc_p.l(entry.o)
    0x080000c0   0x080000c0   0x00000004   Code   RO         2712    .ARM.Collect$$$$00000001  mc_p.l(entry2.o)
    0x080000c4   0x080000c4   0x00000004   Code   RO         2715    .ARM.Collect$$$$00000004  mc_p.l(entry5.o)
    0x080000c8   0x080000c8   0x00000000   Code   RO         2717    .ARM.Collect$$$$00000008  mc_p.l(entry7b.o)
    0x080000c8   0x080000c8   0x00000000   Code   RO         2719    .ARM.Collect$$$$0000000A  mc_p.l(entry8b.o)
    0x080000c8   0x080000c8   0x00000008   Code   RO         2720    .ARM.Collect$$$$0000000B  mc_p.l(entry9a.o)
    0x080000d0   0x080000d0   0x00000000   Code   RO         2722    .ARM.Collect$$$$0000000D  mc_p.l(entry10a.o)
    0x080000d0   0x080000d0   0x00000000   Code   RO         2724    .ARM.Collect$$$$0000000F  mc_p.l(entry11a.o)
    0x080000d0   0x080000d0   0x00000004   Code   RO         2713    .ARM.Collect$$$$00002712  mc_p.l(entry2.o)
    0x080000d4   0x080000d4   0x00000028   Code   RO         2386    .text               startup_mm32spin0280_keil.o
    0x080000fc   0x080000fc   0x000001b4   Code   RO         2577    .text               MCFLIB.lib(mcflib.o)
    0x080002b0   0x080002b0   0x000003ac   Code   RO         2579    .text               MLIB.lib(mlib.o)
    0x0800065c   0x0800065c   0x00000184   Code   RO         2604    .text               IEC60730B_M0_COM_KEIL_v1_0.lib(iec60730_b_cpurunkeil.o)
    0x080007e0   0x080007e0   0x00000210   Code   RO         2608    .text               IEC60730B_M0_COM_KEIL_v1_0.lib(iec60730_b_cpustartkeil.o)
    0x080009f0   0x080009f0   0x00000324   Code   RO         2612    .text               IEC60730B_M0_COM_KEIL_v1_0.lib(iec60730_b_ramtestkeil.o)
    0x08000d14   0x08000d14   0x0000002c   Code   RO         2646    .text               mc_p.l(uidiv.o)
    0x08000d40   0x08000d40   0x00000028   Code   RO         2648    .text               mc_p.l(idiv.o)
    0x08000d68   0x08000d68   0x00000008   Code   RO         2650    .text               mc_p.l(siabs.o)
    0x08000d70   0x08000d70   0x0000007a   Code   RO         2686    .text               mf_p.l(fmul.o)
    0x08000dea   0x08000dea   0x0000007c   Code   RO         2688    .text               mf_p.l(fdiv.o)
    0x08000e66   0x08000e66   0x00000002   PAD
    0x08000e68   0x08000e68   0x00000164   Code   RO         2690    .text               mf_p.l(dadd.o)
    0x08000fcc   0x08000fcc   0x000000d0   Code   RO         2692    .text               mf_p.l(dmul.o)
    0x0800109c   0x0800109c   0x000000f0   Code   RO         2694    .text               mf_p.l(ddiv.o)
    0x0800118c   0x0800118c   0x0000002c   Code   RO         2696    .text               mf_p.l(dcmple.o)
    0x080011b8   0x080011b8   0x0000002c   Code   RO         2698    .text               mf_p.l(dcmplt.o)
    0x080011e4   0x080011e4   0x0000002c   Code   RO         2700    .text               mf_p.l(dcmpge.o)
    0x08001210   0x08001210   0x0000000e   Code   RO         2702    .text               mf_p.l(ffltui.o)
    0x0800121e   0x0800121e   0x00000002   PAD
    0x08001220   0x08001220   0x00000028   Code   RO         2704    .text               mf_p.l(dflti.o)
    0x08001248   0x08001248   0x00000028   Code   RO         2706    .text               mf_p.l(ffixui.o)
    0x08001270   0x08001270   0x00000048   Code   RO         2708    .text               mf_p.l(dfixi.o)
    0x080012b8   0x080012b8   0x00000060   Code   RO         2727    .text               mc_p.l(uldiv.o)
    0x08001318   0x08001318   0x00000020   Code   RO         2729    .text               mc_p.l(llshl.o)
    0x08001338   0x08001338   0x00000022   Code   RO         2731    .text               mc_p.l(llushr.o)
    0x0800135a   0x0800135a   0x00000026   Code   RO         2733    .text               mc_p.l(llsshr.o)
    0x08001380   0x08001380   0x00000000   Code   RO         2735    .text               mc_p.l(iusefp.o)
    0x08001380   0x08001380   0x00000082   Code   RO         2736    .text               mf_p.l(fepilogue.o)
    0x08001402   0x08001402   0x000000be   Code   RO         2738    .text               mf_p.l(depilogue.o)
    0x080014c0   0x080014c0   0x00000040   Code   RO         2742    .text               mf_p.l(dfixul.o)
    0x08001500   0x08001500   0x00000028   Code   RO         2744    .text               mf_p.l(cdrcmple.o)
    0x08001528   0x08001528   0x00000024   Code   RO         2746    .text               mc_p.l(init.o)
    0x0800154c   0x0800154c   0x0000003a   Code   RO         2756    .text               mc_p.l(__dczerorl.o)
    0x08001586   0x08001586   0x00000002   PAD
    0x08001588   0x08001588   0x00000028   Code   RO         2541    .text.$Sub$$main    iec60730_b_startup.o
    0x080015b0   0x080015b0   0x00000002   Code   RO          151    .text.ADC1_IRQHandler  mm32_it.o
    0x080015b2   0x080015b2   0x00000002   PAD
    0x080015b4   0x080015b4   0x000001a4   Code   RO          165    .text.ADC2_IRQHandler  mm32_it.o
    0x08001758   0x08001758   0x0000007e   Code   RO         1287    .text.ADC_ANY_CH_Config  hal_adc.o
    0x080017d6   0x080017d6   0x00000034   Code   RO         1291    .text.ADC_ANY_Cmd   hal_adc.o
    0x0800180a   0x0800180a   0x0000002c   Code   RO         1289    .text.ADC_ANY_NUM_Config  hal_adc.o
    0x08001836   0x08001836   0x00000034   Code   RO         1317    .text.ADC_Calibration  hal_adc.o
    0x0800186a   0x0800186a   0x00000034   Code   RO         1285    .text.ADC_ClearITPendingBit  hal_adc.o
    0x0800189e   0x0800189e   0x00000034   Code   RO         1245    .text.ADC_Cmd       hal_adc.o
    0x080018d2   0x080018d2   0x00000034   Code   RO         1259    .text.ADC_ExternalTrigConvCmd  hal_adc.o
    0x08001906   0x08001906   0x0000006e   Code   RO         1249    .text.ADC_ITConfig  hal_adc.o
    0x08001974   0x08001974   0x00000054   Code   RO         1241    .text.ADC_Init      hal_adc.o
    0x080019c8   0x080019c8   0x000000d6   Code   RO         1255    .text.ADC_RegularChannelConfig  hal_adc.o
    0x08001a9e   0x08001a9e   0x00000026   Code   RO         1243    .text.ADC_StructInit  hal_adc.o
    0x08001ac4   0x08001ac4   0x00000034   Code   RO         1257    .text.ADC_TempSensorVrefintCmd  hal_adc.o
    0x08001af8   0x08001af8   0x000000cc   Code   RO         2400    .text.AutoCalPllFactor  system_mm32spin0280.o
    0x08001bc4   0x08001bc4   0x0000003c   Code   RO           89    .text.BSP_vDirectionDetect_Init  board.o
    0x08001c00   0x08001c00   0x00000046   Code   RO           83    .text.BSP_vUARTInit  board.o
    0x08001c46   0x08001c46   0x00000002   PAD
    0x08001c48   0x08001c48   0x000000c8   Code   RO           93    .text.Board_ADC_Init  board.o
    0x08001d10   0x08001d10   0x00000022   Code   RO           95    .text.Board_Comp_Init  board.o
    0x08001d32   0x08001d32   0x00000002   PAD
    0x08001d34   0x08001d34   0x00000084   Code   RO           67    .text.Bsp_Adc_Init  board.o
    0x08001db8   0x08001db8   0x00000040   Code   RO           85    .text.Bsp_Capture_Init  board.o
    0x08001df8   0x08001df8   0x00000038   Code   RO           69    .text.Bsp_Comp_Init  board.o
    0x08001e30   0x08001e30   0x00000028   Code   RO           91    .text.Bsp_Gpio_Init  board.o
    0x08001e58   0x08001e58   0x00000038   Code   RO           71    .text.Bsp_Led_Init  board.o
    0x08001e90   0x08001e90   0x00000070   Code   RO           65    .text.Bsp_Op_Init   board.o
    0x08001f00   0x08001f00   0x00000044   Code   RO           87    .text.Bsp_PWM_Output_Init  board.o
    0x08001f44   0x08001f44   0x000000c8   Code   RO           73    .text.Bsp_Pwm_Init  board.o
    0x0800200c   0x0800200c   0x000000a4   Code   RO         2424    .text.CBUart_Init   uart_classb.o
    0x080020b0   0x080020b0   0x00000002   Code   RO          175    .text.COMP1_2_3_4_5_IRQHandler  mm32_it.o
    0x080020b2   0x080020b2   0x00000002   PAD
    0x080020b4   0x080020b4   0x00000040   Code   RO         1355    .text.COMP_Cmd      hal_comp.o
    0x080020f4   0x080020f4   0x00000018   Code   RO         1349    .text.COMP_DeInit   hal_comp.o
    0x0800210c   0x0800210c   0x00000040   Code   RO         1351    .text.COMP_Init     hal_comp.o
    0x0800214c   0x0800214c   0x00000044   Code   RO         1357    .text.COMP_SetCrv   hal_comp.o
    0x08002190   0x08002190   0x00000040   Code   RO         1387    .text.CRC_CalcBlockCRC  hal_crc.o
    0x080021d0   0x080021d0   0x0000000c   Code   RO         1383    .text.CRC_ResetDR   hal_crc.o
    0x080021dc   0x080021dc   0x00000004   Code   RO          846    .text.CUR_tGetPhaseCurrentCalPointer  current.o
    0x080021e0   0x080021e0   0x000001bc   Code   RO          842    .text.CUR_updatePhaseCurrentBuffer  current.o
    0x0800239c   0x0800239c   0x00000068   Code   RO          844    .text.CUR_vGetPhaseCurrentBufferSamples  current.o
    0x08002404   0x08002404   0x0000002c   Code   RO          826    .text.CUR_vGetThreePhaseCur  current.o
    0x08002430   0x08002430   0x00000018   Code   RO          828    .text.CUR_vSetOffsetMeasState  current.o
    0x08002448   0x08002448   0x00000002   Code   RO          145    .text.DMA1_Channel1_IRQHandler  mm32_it.o
    0x0800244a   0x0800244a   0x00000002   Code   RO          147    .text.DMA1_Channel2_3_IRQHandler  mm32_it.o
    0x0800244c   0x0800244c   0x00000002   Code   RO          149    .text.DMA1_Channel4_5_IRQHandler  mm32_it.o
    0x0800244e   0x0800244e   0x00000002   PAD
    0x08002450   0x08002450   0x000000e0   Code   RO          380    .text.DcBus_Ripple_suppress  foc_pmsm.o
    0x08002530   0x08002530   0x00000050   Code   RO         1040    .text.Division      drv_div.o
    0x08002580   0x08002580   0x00000094   Code   RO         1010    .text.Drv_Adc_Basic_Init  drv_adc.o
    0x08002614   0x08002614   0x0000008a   Code   RO         1012    .text.Drv_Adc_Channel_Init  drv_adc.o
    0x0800269e   0x0800269e   0x00000080   Code   RO         1024    .text.Drv_Comp_Init  drv_comp.o
    0x0800271e   0x0800271e   0x0000001a   Code   RO         1036    .text.Drv_Hwdiv_Init  drv_div.o
    0x08002738   0x08002738   0x0000004c   Code   RO         1064    .text.Drv_Iwdg_Init  drv_iwdg.o
    0x08002784   0x08002784   0x00000028   Code   RO         1092    .text.Drv_Opamp_Init  drv_opamp.o
    0x080027ac   0x080027ac   0x00000128   Code   RO         1104    .text.Drv_Pwm_Init  drv_pwm.o
    0x080028d4   0x080028d4   0x00000016   Code   RO         1165    .text.Drv_Sqrt_Init  drv_sqrt.o
    0x080028ea   0x080028ea   0x00000002   PAD
    0x080028ec   0x080028ec   0x0000006c   Code   RO         1179    .text.Drv_Tim16_Counter_Init  drv_counter.o
    0x08002958   0x08002958   0x000000a0   Code   RO         1195    .text.Drv_Tim17_PWM_Out_Init  drv_output.o
    0x080029f8   0x080029f8   0x000000c8   Code   RO         1213    .text.Drv_Tim3_Pwm_In_Init  drv_capture.o
    0x08002ac0   0x08002ac0   0x00000010   Code   RO         1183    .text.Drv_u32GetTim16CountVal  drv_counter.o
    0x08002ad0   0x08002ad0   0x00000010   Code   RO         1215    .text.Drv_vCaptureInit  drv_capture.o
    0x08002ae0   0x08002ae0   0x00000028   Code   RO         1197    .text.Drv_vPwmOutputInit  drv_output.o
    0x08002b08   0x08002b08   0x00000040   Code   RO         1199    .text.Drv_vSetOutputFreq  drv_output.o
    0x08002b48   0x08002b48   0x00000002   Code   RO          137    .text.EXTI0_1_IRQHandler  mm32_it.o
    0x08002b4a   0x08002b4a   0x00000002   Code   RO          139    .text.EXTI2_3_IRQHandler  mm32_it.o
    0x08002b4c   0x08002b4c   0x0000018c   Code   RO          141    .text.EXTI4_15_IRQHandler  mm32_it.o
    0x08002cd8   0x08002cd8   0x00000014   Code   RO         1528    .text.EXTI_ClearFlag  hal_exti.o
    0x08002cec   0x08002cec   0x00000028   Code   RO         1526    .text.EXTI_GetFlagStatus  hal_exti.o
    0x08002d14   0x08002d14   0x0000001c   Code   RO          764    .text.FCK_vInitSafeTime  fsclock.o
    0x08002d30   0x08002d30   0x000000e0   Code   RO          782    .text.FCN_vGetPhaseVoltage  fscommon.o
    0x08002e10   0x08002e10   0x00000024   Code   RO          786    .text.FCN_vGetThreePhaseVol  fscommon.o
    0x08002e34   0x08002e34   0x00000010   Code   RO          604    .text.FHE_vFunctionSafetyCheck  fshandle.o
    0x08002e44   0x08002e44   0x00000058   Code   RO          602    .text.FHE_vHandleTask  fshandle.o
    0x08002e9c   0x08002e9c   0x00000044   Code   RO          980    .text.FIR_vCalcFilter  filter.o
    0x08002ee0   0x08002ee0   0x00000002   Code   RO          133    .text.FLASH_IRQHandler  mm32_it.o
    0x08002ee2   0x08002ee2   0x00000008   Code   RO          621    .text.FMC_u32GetSystickTimerCounter  fsmcu.o
    0x08002eea   0x08002eea   0x00000002   PAD
    0x08002eec   0x08002eec   0x00000010   Code   RO          617    .text.FMC_vSetSystickTimerRegisters  fsmcu.o
    0x08002efc   0x08002efc   0x0000014c   Code   RO          388    .text.FOC_Current_Controller  foc_pmsm.o
    0x08003048   0x08003048   0x00000200   Code   RO          645    .text.FPL_vEvaluateCurrentAsymmetry  fsphaseloss.o
    0x08003248   0x08003248   0x00000164   Code   RO          643    .text.FPL_vEvaluateStaticVector  fsphaseloss.o
    0x080033ac   0x080033ac   0x00000188   Code   RO          647    .text.FPL_vEvaluateVoltageAsymmetry  fsphaseloss.o
    0x08003534   0x08003534   0x00000008   Code   RO          649    .text.FPL_vPhaseLossCheck  fsphaseloss.o
    0x0800353c   0x0800353c   0x00000024   Code   RO          635    .text.FPL_vPhaseLossEvaluation  fsphaseloss.o
    0x08003560   0x08003560   0x00000180   Code   RO          633    .text.FPL_vPhaselossprepareSamples  fsphaseloss.o
    0x080036e0   0x080036e0   0x00000108   Code   RO          958    .text.FPM_vCart2Pol  math.o
    0x080037e8   0x080037e8   0x00000008   Code   RO          681    .text.FRK_vCheckMotorLock  fsrotorlock.o
    0x080037f0   0x080037f0   0x00000178   Code   RO          677    .text.FRK_vCheckMotorLockComplex  fsrotorlock.o
    0x08003968   0x08003968   0x00000008   Code   RO          675    .text.FRK_vLockedRotorEvaluation  fsrotorlock.o
    0x08003970   0x08003970   0x00000090   Code   RO          671    .text.FRK_vcalcBemf  fsrotorlock.o
    0x08003a00   0x08003a00   0x000000bc   Code   RO          667    .text.FRK_vcalcCurrentVector  fsrotorlock.o
    0x08003abc   0x08003abc   0x00000094   Code   RO          669    .text.FRK_vcalcVoltageVector  fsrotorlock.o
    0x08003b50   0x08003b50   0x00000098   Code   RO         2436    .text.FailSafePOR   iec60730_b_aux.o
    0x08003be8   0x08003be8   0x000000f8   Code   RO          460    .text.Fault_LED_Disp  statemachine.o
    0x08003ce0   0x08003ce0   0x00000150   Code   RO         2533    .text.Flashtest_config  iec60730_b_startup.o
    0x08003e30   0x08003e30   0x00000118   Code   RO         1614    .text.GPIO_Init     hal_gpio.o
    0x08003f48   0x08003f48   0x0000005e   Code   RO         1638    .text.GPIO_PinAFConfig  hal_gpio.o
    0x08003fa6   0x08003fa6   0x0000002c   Code   RO         1618    .text.GPIO_ReadInputDataBit  hal_gpio.o
    0x08003fd2   0x08003fd2   0x00000002   PAD
    0x08003fd4   0x08003fd4   0x00000024   Code   RO         1616    .text.GPIO_StructInit  hal_gpio.o
    0x08003ff8   0x08003ff8   0x0000006c   Code   RO          382    .text.Get_ADC_Result  foc_pmsm.o
    0x08004064   0x08004064   0x00000010   Code   RO         1038    .text.HDIV_SignInit  drv_div.o
    0x08004074   0x08004074   0x00000002   Code   RO          143    .text.HWDIV_IRQHandler  mm32_it.o
    0x08004076   0x08004076   0x00000002   PAD
    0x08004078   0x08004078   0x0000003c   Code   RO         1167    .text.Hw_Sqrt       drv_sqrt.o
    0x080040b4   0x080040b4   0x00000002   Code   RO          173    .text.I2C1_IRQHandler  mm32_it.o
    0x080040b6   0x080040b6   0x00000002   PAD
    0x080040b8   0x080040b8   0x0000003c   Code   RO         2547    .text.IEC60730_B_CRC_StoreclassBData  iec60730_b_startup.o
    0x080040f4   0x080040f4   0x00000038   Code   RO         2503    .text.IEC60730_B_CpuRunTime_test  iec60730_b_runtimetest.o
    0x0800412c   0x0800412c   0x00000180   Code   RO         2513    .text.IEC60730_B_FlashRunTime_test  iec60730_b_runtimetest.o
    0x080042ac   0x080042ac   0x00000038   Code   RO         2537    .text.IEC60730_B_FullCpu_test  iec60730_b_startup.o
    0x080042e4   0x080042e4   0x000000a4   Code   RO         2618    .text.IEC60730_B_FullFlash_test  IEC60730B_M0_COM_KEIL_v1_0.lib(iec60730_b_flashtest.o)
    0x08004388   0x08004388   0x000000e0   Code   RO         2631    .text.IEC60730_B_TranspMarch  IEC60730B_M0_COM_KEIL_v1_0.lib(iec60730_b_transpram.o)
    0x08004468   0x08004468   0x00000028   Code   RO         2629    .text.IEC60730_B_TranspMarchInit  IEC60730B_M0_COM_KEIL_v1_0.lib(iec60730_b_transpram.o)
    0x08004490   0x08004490   0x00000108   Code   RO         2442    .text.IEC60730_B_WDGSelfTest  iec60730_b_aux.o
    0x08004598   0x08004598   0x00000148   Code   RO         2543    .text.IEC60730_B_startup  iec60730_b_startup.o
    0x080046e0   0x080046e0   0x00000084   Code   RO         2507    .text.IEC60730_CheckStack  iec60730_b_runtimetest.o
    0x08004764   0x08004764   0x00000054   Code   RO         2469    .text.IEC60730_ClockStartUpTest  iec60730_b_clocktest.o
    0x080047b8   0x080047b8   0x0000008c   Code   RO         2509    .text.IEC60730_ClockTest_RunTime  iec60730_b_runtimetest.o
    0x08004844   0x08004844   0x00000038   Code   RO         2539    .text.IEC60730_ClockTest_Startup  iec60730_b_startup.o
    0x0800487c   0x0800487c   0x000000e4   Code   RO         2511    .text.IEC60730_DoRunTimeChecks  iec60730_b_runtimetest.o
    0x08004960   0x08004960   0x0000001c   Code   RO         2616    .text.IEC60730_FlashCrc32Init  IEC60730B_M0_COM_KEIL_v1_0.lib(iec60730_b_flashtest.o)
    0x0800497c   0x0800497c   0x0000003c   Code   RO         2471    .text.IEC60730_InitClock_Xcross_Measurement  iec60730_b_clocktest.o
    0x080049b8   0x080049b8   0x00000134   Code   RO         2499    .text.IEC60730_InitRunTimeChecks  iec60730_b_runtimetest.o
    0x08004aec   0x08004aec   0x00000078   Code   RO         2465    .text.IEC60730_MainClockTest  iec60730_b_clocktest.o
    0x08004b64   0x08004b64   0x00000040   Code   RO         2505    .text.IEC60730_Stack_Check  iec60730_b_runtimetest.o
    0x08004ba4   0x08004ba4   0x00000058   Code   RO         2467    .text.IEC60730_clockrun_valuecheck  iec60730_b_clocktest.o
    0x08004bfc   0x08004bfc   0x00000118   Code   RO         2620    .text.IEC60730_crc32Run  IEC60730B_M0_COM_KEIL_v1_0.lib(iec60730_b_flashtest.o)
    0x08004d14   0x08004d14   0x0000000c   Code   RO         1732    .text.IWDG_Enable   hal_iwdg.o
    0x08004d20   0x08004d20   0x0000002c   Code   RO         1734    .text.IWDG_GetFlagStatus  hal_iwdg.o
    0x08004d4c   0x08004d4c   0x0000000c   Code   RO         1730    .text.IWDG_ReloadCounter  hal_iwdg.o
    0x08004d58   0x08004d58   0x00000020   Code   RO         1720    .text.IWDG_SetPrescaler  hal_iwdg.o
    0x08004d78   0x08004d78   0x0000001c   Code   RO         1724    .text.IWDG_SetReload  hal_iwdg.o
    0x08004d94   0x08004d94   0x00000018   Code   RO         1718    .text.IWDG_WriteAccessCmd  hal_iwdg.o
    0x08004dac   0x08004dac   0x0000027c   Code   RO          225    .text.Init_Parameter  user_function.o
    0x08005028   0x08005028   0x00000074   Code   RO          123    .text.Interrupt_Init  mm32_it.o
    0x0800509c   0x0800509c   0x00000078   Code   RO         2438    .text.Iwdg_Init     iec60730_b_aux.o
    0x08005114   0x08005114   0x000000fc   Code   RO          452    .text.M1_FaultDetection  statemachine.o
    0x08005210   0x08005210   0x00000014   Code   RO          436    .text.M1_Fault_Fast  statemachine.o
    0x08005224   0x08005224   0x00000044   Code   RO          444    .text.M1_Fault_Slow  statemachine.o
    0x08005268   0x08005268   0x0000001c   Code   RO          438    .text.M1_Init_Fast  statemachine.o
    0x08005284   0x08005284   0x0000000c   Code   RO          446    .text.M1_Init_Slow  statemachine.o
    0x08005290   0x08005290   0x00000050   Code   RO          492    .text.M1_RunAlignFast  statemachine.o
    0x080052e0   0x080052e0   0x000000c0   Code   RO          512    .text.M1_RunAlignSlow  statemachine.o
    0x080053a0   0x080053a0   0x0000002c   Code   RO          490    .text.M1_RunBrakeFast  statemachine.o
    0x080053cc   0x080053cc   0x00000002   Code   RO          510    .text.M1_RunBrakeSlow  statemachine.o
    0x080053ce   0x080053ce   0x00000008   Code   RO          484    .text.M1_RunCalibFast  statemachine.o
    0x080053d6   0x080053d6   0x00000002   PAD
    0x080053d8   0x080053d8   0x0000000c   Code   RO          504    .text.M1_RunCalibSlow  statemachine.o
    0x080053e4   0x080053e4   0x00000050   Code   RO          498    .text.M1_RunFreewheelFast  statemachine.o
    0x08005434   0x08005434   0x00000060   Code   RO          518    .text.M1_RunFreewheelSlow  statemachine.o
    0x08005494   0x08005494   0x0000008c   Code   RO          486    .text.M1_RunReadyFast  statemachine.o
    0x08005520   0x08005520   0x00000010   Code   RO          506    .text.M1_RunReadySlow  statemachine.o
    0x08005530   0x08005530   0x00000050   Code   RO          496    .text.M1_RunSpinFast  statemachine.o
    0x08005580   0x08005580   0x0000006c   Code   RO          516    .text.M1_RunSpinSlow  statemachine.o
    0x080055ec   0x080055ec   0x00000178   Code   RO          494    .text.M1_RunStartupFast  statemachine.o
    0x08005764   0x08005764   0x0000017c   Code   RO          514    .text.M1_RunStartupSlow  statemachine.o
    0x080058e0   0x080058e0   0x00000034   Code   RO          488    .text.M1_RunWindDetFast  statemachine.o
    0x08005914   0x08005914   0x00000010   Code   RO          508    .text.M1_RunWindDetSlow  statemachine.o
    0x08005924   0x08005924   0x00000034   Code   RO          442    .text.M1_Run_Fast   statemachine.o
    0x08005958   0x08005958   0x00000020   Code   RO          450    .text.M1_Run_Slow   statemachine.o
    0x08005978   0x08005978   0x00000038   Code   RO          440    .text.M1_Stop_Fast  statemachine.o
    0x080059b0   0x080059b0   0x0000002c   Code   RO          448    .text.M1_Stop_Slow  statemachine.o
    0x080059dc   0x080059dc   0x00000008   Code   RO          462    .text.M1_SwitchFaultStop  statemachine.o
    0x080059e4   0x080059e4   0x00000008   Code   RO          454    .text.M1_SwitchInitStop  statemachine.o
    0x080059ec   0x080059ec   0x00000020   Code   RO          520    .text.M1_SwitchRunAlignReady  statemachine.o
    0x08005a0c   0x08005a0c   0x00000054   Code   RO          522    .text.M1_SwitchRunAlignStartup  statemachine.o
    0x08005a60   0x08005a60   0x00000010   Code   RO          500    .text.M1_SwitchRunCalibReady  statemachine.o
    0x08005a70   0x08005a70   0x00000020   Code   RO          458    .text.M1_SwitchRunFault  statemachine.o
    0x08005a90   0x08005a90   0x00000024   Code   RO          534    .text.M1_SwitchRunFreewheelReady  statemachine.o
    0x08005ab4   0x08005ab4   0x00000008   Code   RO          466    .text.M1_SwitchRunReadyWindDet  statemachine.o
    0x08005abc   0x08005abc   0x00000018   Code   RO          532    .text.M1_SwitchRunSpinFreewheel  statemachine.o
    0x08005ad4   0x08005ad4   0x00000008   Code   RO          528    .text.M1_SwitchRunStartupFreewheel  statemachine.o
    0x08005adc   0x08005adc   0x00000078   Code   RO          530    .text.M1_SwitchRunStartupSpin  statemachine.o
    0x08005b54   0x08005b54   0x00000008   Code   RO          470    .text.M1_SwitchRunWindDetAlign  statemachine.o
    0x08005b5c   0x08005b5c   0x00000008   Code   RO          468    .text.M1_SwitchRunWindDetBrake  statemachine.o
    0x08005b64   0x08005b64   0x00000008   Code   RO          474    .text.M1_SwitchRunWindDetReady  statemachine.o
    0x08005b6c   0x08005b6c   0x00000008   Code   RO          456    .text.M1_SwitchStopFault  statemachine.o
    0x08005b74   0x08005b74   0x00000018   Code   RO          464    .text.M1_SwitchStopRun  statemachine.o
    0x08005b8c   0x08005b8c   0x0000006c   Code   RO          502    .text.MCFLIB_Clark_Sat_S16  statemachine.o
    0x08005bf8   0x08005bf8   0x0000007c   Code   RO          571    .text.MCFLIB_Clark_Sat_S16  winddetection.o
    0x08005c74   0x08005c74   0x00000068   Code   RO          394    .text.MCFLIB_InvPark_S16  foc_pmsm.o
    0x08005cdc   0x08005cdc   0x00000068   Code   RO          575    .text.MCFLIB_InvPark_S16  winddetection.o
    0x08005d44   0x08005d44   0x00000068   Code   RO          390    .text.MCFLIB_Park_S16  foc_pmsm.o
    0x08005dac   0x08005dac   0x00000068   Code   RO          573    .text.MCFLIB_Park_S16  winddetection.o
    0x08005e14   0x08005e14   0x00000008   Code   RO          193    .text.MIT_ptGetCaptureData  mm32_it.o
    0x08005e1c   0x08005e1c   0x000000a4   Code   RO          167    .text.MIT_vReadNormalADCValue  mm32_it.o
    0x08005ec0   0x08005ec0   0x00000068   Code   RO          239    .text.MLIB_AddSat_Q31  user_function.o
    0x08005f28   0x08005f28   0x00000010   Code   RO          526    .text.MLIB_Conv_Q15l  statemachine.o
    0x08005f38   0x08005f38   0x00000012   Code   RO          524    .text.MLIB_Conv_Q31s  statemachine.o
    0x08005f4a   0x08005f4a   0x00000046   Code   RO          233    .text.MLIB_FilterMA_Q15  user_function.o
    0x08005f90   0x08005f90   0x00000026   Code   RO          356    .text.MLIB_Mul_Q15  speedcontrol.o
    0x08005fb6   0x08005fb6   0x00000026   Code   RO          386    .text.MLIB_Mul_Q15  foc_pmsm.o
    0x08005fdc   0x08005fdc   0x00000026   Code   RO          480    .text.MLIB_Mul_Q15  statemachine.o
    0x08006002   0x08006002   0x00000026   Code   RO          673    .text.MLIB_Mul_Q15  fsrotorlock.o
    0x08006028   0x08006028   0x00000026   Code   RO          706    .text.MLIB_Mul_Q15  speedmonitor.o
    0x0800604e   0x0800604e   0x00000026   Code   RO          784    .text.MLIB_Mul_Q15  fscommon.o
    0x08006074   0x08006074   0x00000014   Code   RO          227    .text.MLIB_Neg_Q15  user_function.o
    0x08006088   0x08006088   0x00000014   Code   RO          392    .text.MLIB_Neg_Q15  foc_pmsm.o
    0x0800609c   0x0800609c   0x00000058   Code   RO          245    .text.MLIB_Sat_Q15  user_function.o
    0x080060f4   0x080060f4   0x0000001c   Code   RO          241    .text.MLIB_ShR_Q31  user_function.o
    0x08006110   0x08006110   0x00000070   Code   RO          243    .text.MLIB_SubSat_Q31  user_function.o
    0x08006180   0x08006180   0x00000010   Code   RO          293    .text.MOS_bGetInitStatus  modbus.o
    0x08006190   0x08006190   0x00000018   Code   RO          267    .text.MOS_vCallbackInit  modbus.o
    0x080061a8   0x080061a8   0x0000004c   Code   RO          285    .text.MOS_vCheckReadAllDataCommand  modbus.o
    0x080061f4   0x080061f4   0x0000004c   Code   RO          281    .text.MOS_vCheckWriteDataCommand  modbus.o
    0x08006240   0x08006240   0x0000000c   Code   RO          277    .text.MOS_vConfigureSlaveAddress  modbus.o
    0x0800624c   0x0800624c   0x00000048   Code   RO          271    .text.MOS_vDataReceiveInterrupt  modbus.o
    0x08006294   0x08006294   0x00000060   Code   RO          259    .text.MOS_vEventHandler  modbus.o
    0x080062f4   0x080062f4   0x000000d8   Code   RO          291    .text.MOS_vModBusHandler_2  modbus.o
    0x080063cc   0x080063cc   0x00000114   Code   RO          283    .text.MOS_vModbudFun6  modbus.o
    0x080064e0   0x080064e0   0x0000012c   Code   RO          287    .text.MOS_vModbusFun4  modbus.o
    0x0800660c   0x0800660c   0x00000024   Code   RO          273    .text.MOS_vModbusInit  modbus.o
    0x08006630   0x08006630   0x00000008   Code   RO          275    .text.MOS_vModbusProtocalConfig  modbus.o
    0x08006638   0x08006638   0x00000044   Code   RO          289    .text.MOS_vReadWriteDataCommon  modbus.o
    0x0800667c   0x0800667c   0x00000042   Code   RO          261    .text.MOS_vRegisterHandler  modbus.o
    0x080066be   0x080066be   0x00000002   PAD
    0x080066c0   0x080066c0   0x00000014   Code   RO          265    .text.MOS_vSlaveAddressUpdate  modbus.o
    0x080066d4   0x080066d4   0x00000038   Code   RO          269    .text.MOS_vTimeoutInterrupt  modbus.o
    0x0800670c   0x0800670c   0x0000002c   Code   RO          257    .text.MOS_vTriggerEvent  modbus.o
    0x08006738   0x08006738   0x00000002   Code   RO          263    .text.MOS_vWriteDataIntoEEP  modbus.o
    0x0800673a   0x0800673a   0x00000002   PAD
    0x0800673c   0x0800673c   0x00000098   Code   RO          482    .text.MOT_vAngleSmoothSwitch  statemachine.o
    0x080067d4   0x080067d4   0x0000001c   Code   RO         2448    .text.NMI_Handler   iec60730_b_aux.o
    0x080067f0   0x080067f0   0x0000002c   Code   RO          121    .text.NVIC_Configure  mm32_it.o
    0x0800681c   0x0800681c   0x0000007c   Code   RO         1764    .text.NVIC_Init     hal_misc.o
    0x08006898   0x08006898   0x00000038   Code   RO         1782    .text.OPAMP_Configure  hal_opamp.o
    0x080068d0   0x080068d0   0x000000b0   Code   RO          384    .text.PMSM_Obs      foc_pmsm.o
    0x08006980   0x08006980   0x00000002   Code   RO          129    .text.PVD_IRQHandler  mm32_it.o
    0x08006982   0x08006982   0x00000014   Code   RO         1722    .text.PVU_CheckStatus  hal_iwdg.o
    0x08006996   0x08006996   0x00000002   Code   RO          131    .text.PWM_IRQHandler  mm32_it.o
    0x08006998   0x08006998   0x00000078   Code   RO          478    .text.PWM_Update    statemachine.o
    0x08006a10   0x08006a10   0x00000044   Code   RO          109    .text.Peripheral_Init  board.o
    0x08006a54   0x08006a54   0x00000034   Code   RO         1866    .text.RCC_AHBPeriphClockCmd  hal_rcc.o
    0x08006a88   0x08006a88   0x00000034   Code   RO         1870    .text.RCC_APB1PeriphClockCmd  hal_rcc.o
    0x08006abc   0x08006abc   0x00000034   Code   RO         1868    .text.RCC_APB2PeriphClockCmd  hal_rcc.o
    0x08006af0   0x08006af0   0x00000020   Code   RO         1890    .text.RCC_ClearITPendingBit  hal_rcc.o
    0x08006b10   0x08006b10   0x00000024   Code   RO         1880    .text.RCC_ClockSecuritySystemCmd  hal_rcc.o
    0x08006b34   0x08006b34   0x000000f4   Code   RO         1922    .text.RCC_GPIO_ClockCmd  hal_rcc.o
    0x08006c28   0x08006c28   0x0000006c   Code   RO         1828    .text.RCC_GetFlagStatus  hal_rcc.o
    0x08006c94   0x08006c94   0x00000018   Code   RO         1858    .text.RCC_GetHCLKFreq  hal_rcc.o
    0x08006cac   0x08006cac   0x0000001c   Code   RO         1860    .text.RCC_GetPCLK1Freq  hal_rcc.o
    0x08006cc8   0x08006cc8   0x00000020   Code   RO         1862    .text.RCC_GetPCLK2Freq  hal_rcc.o
    0x08006ce8   0x08006ce8   0x000000c4   Code   RO         1856    .text.RCC_GetSysClockFreq  hal_rcc.o
    0x08006dac   0x08006dac   0x00000002   Code   RO          135    .text.RCC_IRQHandler  mm32_it.o
    0x08006dae   0x08006dae   0x00000002   PAD
    0x08006db0   0x08006db0   0x00000024   Code   RO         1854    .text.RCC_LSICmd    hal_rcc.o
    0x08006dd4   0x08006dd4   0x0000008c   Code   RO         1928    .text.RCC_UART_ClockCmd  hal_rcc.o
    0x08006e60   0x08006e60   0x00000248   Code   RO          641    .text.RMP_vOpenPhaseCheckComplex  fsphaseloss.o
    0x080070a8   0x080070a8   0x00000014   Code   RO         1726    .text.RVU_CheckStatus  hal_iwdg.o
    0x080070bc   0x080070bc   0x0000003c   Code   RO         2535    .text.Ramtest_config  iec60730_b_startup.o
    0x080070f8   0x080070f8   0x00000068   Code   RO          350    .text.SCL_bDataFilter  speedcontrol.o
    0x08007160   0x08007160   0x000001e4   Code   RO          354    .text.SCL_vCalcualteTargetSpeed  speedcontrol.o
    0x08007344   0x08007344   0x00000048   Code   RO          352    .text.SCL_vCalculateActualSpeedFromPU  speedcontrol.o
    0x0800738c   0x0800738c   0x000000c8   Code   RO          348    .text.SCL_vMotorDirectionCheck  speedcontrol.o
    0x08007454   0x08007454   0x000000ac   Code   RO          362    .text.SCL_vSpeedControlHandle  speedcontrol.o
    0x08007500   0x08007500   0x00000158   Code   RO          360    .text.SCL_vSpeedControlModbusHandle  speedcontrol.o
    0x08007658   0x08007658   0x00000078   Code   RO          358    .text.SCL_vSpeedControlPWMHandle  speedcontrol.o
    0x080076d0   0x080076d0   0x00000008   Code   RO          720    .text.SMR_vCheckSpeedMonitor  speedmonitor.o
    0x080076d8   0x080076d8   0x00000124   Code   RO          718    .text.SMR_vCheckSpeedMonitorImplement  speedmonitor.o
    0x080077fc   0x080077fc   0x0000024c   Code   RO          708    .text.SMR_vIndependentMotorModelCalculation  speedmonitor.o
    0x08007a48   0x08007a48   0x00000008   Code   RO          716    .text.SMR_vSpeedEvaluation  speedmonitor.o
    0x08007a50   0x08007a50   0x00000028   Code   RO          714    .text.SMR_vSpeedEvaluationComplex  speedmonitor.o
    0x08007a78   0x08007a78   0x00000002   Code   RO          177    .text.SPI1_IRQHandler  mm32_it.o
    0x08007a7a   0x08007a7a   0x00000002   Code   RO          179    .text.SPI2_IRQHandler  mm32_it.o
    0x08007a7c   0x08007a7c   0x00000014   Code   RO          762    .text.STK_tGetSafeTime  fsclock.o
    0x08007a90   0x08007a90   0x00000018   Code   RO          189    .text.STK_vSetGenericTimerCallbackFunc  mm32_it.o
    0x08007aa8   0x08007aa8   0x000000ec   Code   RO          760    .text.STK_vTriggerSafeTime  fsclock.o
    0x08007b94   0x08007b94   0x0000000e   Code   RO         2398    .text.SetSysClock   system_mm32spin0280.o
    0x08007ba2   0x08007ba2   0x00000002   PAD
    0x08007ba4   0x08007ba4   0x00000060   Code   RO         2396    .text.SetSysClockToDefaultHSI  system_mm32spin0280.o
    0x08007c04   0x08007c04   0x00000190   Code   RO         2404    .text.SetSysClockWithHsiPLL  system_mm32spin0280.o
    0x08007d94   0x08007d94   0x00000058   Code   RO         2501    .text.SysTick_Config  iec60730_b_runtimetest.o
    0x08007dec   0x08007dec   0x00000198   Code   RO         2450    .text.SysTick_Handler  iec60730_b_aux.o
    0x08007f84   0x08007f84   0x000000cc   Code   RO         2402    .text.SystemCoreClockUpdate  system_mm32spin0280.o
    0x08008050   0x08008050   0x0000000c   Code   RO         2394    .text.SystemInit    system_mm32spin0280.o
    0x0800805c   0x0800805c   0x00000054   Code   RO         2035    .text.TI1_Configure  hal_tim.o
    0x080080b0   0x080080b0   0x0000005a   Code   RO         2039    .text.TI2_Configure  hal_tim.o
    0x0800810a   0x0800810a   0x0000005a   Code   RO         2043    .text.TI3_Configure  hal_tim.o
    0x08008164   0x08008164   0x0000005e   Code   RO         2047    .text.TI4_Configure  hal_tim.o
    0x080081c2   0x080081c2   0x00000002   Code   RO          163    .text.TIM14_IRQHandler  mm32_it.o
    0x080081c4   0x080081c4   0x00000002   Code   RO          169    .text.TIM16_IRQHandler  mm32_it.o
    0x080081c6   0x080081c6   0x00000002   Code   RO          171    .text.TIM17_IRQHandler  mm32_it.o
    0x080081c8   0x080081c8   0x00000038   Code   RO          153    .text.TIM1_BRK_UP_TRG_COM_IRQHandler  mm32_it.o
    0x08008200   0x08008200   0x00000002   Code   RO          155    .text.TIM1_CC_IRQHandler  mm32_it.o
    0x08008202   0x08008202   0x00000002   PAD
    0x08008204   0x08008204   0x00000114   Code   RO         2479    .text.TIM2_IRQHandler  iec60730_b_clocktest.o
    0x08008318   0x08008318   0x00000048   Code   RO          157    .text.TIM3_IRQHandler  mm32_it.o
    0x08008360   0x08008360   0x00000002   Code   RO          159    .text.TIM8_BRK_UP_TRG_COM_IRQHandler  mm32_it.o
    0x08008362   0x08008362   0x00000002   Code   RO          161    .text.TIM8_CC_IRQHandler  mm32_it.o
    0x08008364   0x08008364   0x00000034   Code   RO         2103    .text.TIM_ARRPreloadConfig  hal_tim.o
    0x08008398   0x08008398   0x00000034   Code   RO         2053    .text.TIM_BDTRConfig  hal_tim.o
    0x080083cc   0x080083cc   0x00000034   Code   RO         2149    .text.TIM_CCxCmd    hal_tim.o
    0x08008400   0x08008400   0x0000001e   Code   RO         2197    .text.TIM_ClearFlag  hal_tim.o
    0x0800841e   0x0800841e   0x0000001e   Code   RO         2201    .text.TIM_ClearITPendingBit  hal_tim.o
    0x0800843c   0x0800843c   0x00000034   Code   RO         2063    .text.TIM_Cmd       hal_tim.o
    0x08008470   0x08008470   0x00000038   Code   RO         2065    .text.TIM_CtrlPWMOutputs  hal_tim.o
    0x080084a8   0x080084a8   0x000000a4   Code   RO         2021    .text.TIM_DeInit    hal_tim.o
    0x0800854c   0x0800854c   0x00000010   Code   RO         2183    .text.TIM_GetCapture1  hal_tim.o
    0x0800855c   0x0800855c   0x00000010   Code   RO         2185    .text.TIM_GetCapture2  hal_tim.o
    0x0800856c   0x0800856c   0x00000010   Code   RO         2189    .text.TIM_GetCapture4  hal_tim.o
    0x0800857c   0x0800857c   0x00000010   Code   RO         2191    .text.TIM_GetCounter  hal_tim.o
    0x0800858c   0x0800858c   0x0000002a   Code   RO         2195    .text.TIM_GetFlagStatus  hal_tim.o
    0x080085b6   0x080085b6   0x00000046   Code   RO         2199    .text.TIM_GetITStatus  hal_tim.o
    0x080085fc   0x080085fc   0x000000c0   Code   RO         2033    .text.TIM_ICInit    hal_tim.o
    0x080086bc   0x080086bc   0x00000024   Code   RO         2059    .text.TIM_ICStructInit  hal_tim.o
    0x080086e0   0x080086e0   0x0000003c   Code   RO         2067    .text.TIM_ITConfig  hal_tim.o
    0x0800871c   0x0800871c   0x000000a4   Code   RO         2025    .text.TIM_OC1Init   hal_tim.o
    0x080087c0   0x080087c0   0x00000026   Code   RO         2111    .text.TIM_OC1PreloadConfig  hal_tim.o
    0x080087e6   0x080087e6   0x00000002   PAD
    0x080087e8   0x080087e8   0x0000009c   Code   RO         2027    .text.TIM_OC2Init   hal_tim.o
    0x08008884   0x08008884   0x0000002a   Code   RO         2113    .text.TIM_OC2PreloadConfig  hal_tim.o
    0x080088ae   0x080088ae   0x00000002   PAD
    0x080088b0   0x080088b0   0x00000090   Code   RO         2029    .text.TIM_OC3Init   hal_tim.o
    0x08008940   0x08008940   0x00000026   Code   RO         2115    .text.TIM_OC3PreloadConfig  hal_tim.o
    0x08008966   0x08008966   0x00000002   PAD
    0x08008968   0x08008968   0x00000080   Code   RO         2031    .text.TIM_OC4Init   hal_tim.o
    0x080089e8   0x080089e8   0x0000002e   Code   RO         2057    .text.TIM_OCStructInit  hal_tim.o
    0x08008a16   0x08008a16   0x000000d8   Code   RO         2051    .text.TIM_PWMIConfig  hal_tim.o
    0x08008aee   0x08008aee   0x00000026   Code   RO         2079    .text.TIM_SelectInputTrigger  hal_tim.o
    0x08008b14   0x08008b14   0x00000026   Code   RO         2165    .text.TIM_SelectSlaveMode  hal_tim.o
    0x08008b3a   0x08008b3a   0x0000001a   Code   RO         2169    .text.TIM_SetAutoreload  hal_tim.o
    0x08008b54   0x08008b54   0x00000026   Code   RO         2037    .text.TIM_SetIC1Prescaler  hal_tim.o
    0x08008b7a   0x08008b7a   0x0000002a   Code   RO         2041    .text.TIM_SetIC2Prescaler  hal_tim.o
    0x08008ba4   0x08008ba4   0x00000026   Code   RO         2045    .text.TIM_SetIC3Prescaler  hal_tim.o
    0x08008bca   0x08008bca   0x0000002a   Code   RO         2049    .text.TIM_SetIC4Prescaler  hal_tim.o
    0x08008bf4   0x08008bf4   0x000000cc   Code   RO         2023    .text.TIM_TimeBaseInit  hal_tim.o
    0x08008cc0   0x08008cc0   0x00000024   Code   RO         2055    .text.TIM_TimeBaseStructInit  hal_tim.o
    0x08008ce4   0x08008ce4   0x00000074   Code   RO         1116    .text.TIM_bBrakeUpdate  drv_pwm.o
    0x08008d58   0x08008d58   0x00000090   Code   RO         1110    .text.TIM_bSetOutputConfig  drv_pwm.o
    0x08008de8   0x08008de8   0x00000054   Code   RO         1114    .text.TIM_vBrakeInit  drv_pwm.o
    0x08008e3c   0x08008e3c   0x00000040   Code   RO         1112    .text.TIM_vDutyCycleToCompare  drv_pwm.o
    0x08008e7c   0x08008e7c   0x00000064   Code   RO         1106    .text.TIM_vSetCompareValues  drv_pwm.o
    0x08008ee0   0x08008ee0   0x00000060   Code   RO         1108    .text.TIM_vSetOutputs  drv_pwm.o
    0x08008f40   0x08008f40   0x00000048   Code   RO          994    .text.TRR_vClarkeTrans  transfer.o
    0x08008f88   0x08008f88   0x0000004c   Code   RO          331    .text.TSE_vAdaptInterfaceFromFlag2TaskCall  timeslice.o
    0x08008fd4   0x08008fd4   0x00000048   Code   RO          333    .text.TSE_vRegisterHandler  timeslice.o
    0x0800901c   0x0800901c   0x00000078   Code   RO          335    .text.TSE_vSliceTaskHandle  timeslice.o
    0x08009094   0x08009094   0x000000a4   Code   RO         2477    .text.Tim2_Init     iec60730_b_clocktest.o
    0x08009138   0x08009138   0x00000002   Code   RO          181    .text.UART1_IRQHandler  mm32_it.o
    0x0800913a   0x0800913a   0x00000002   PAD
    0x0800913c   0x0800913c   0x00000024   Code   RO          183    .text.UART2_IRQHandler  mm32_it.o
    0x08009160   0x08009160   0x00000002   Code   RO          187    .text.UART3_IRQHandler  mm32_it.o
    0x08009162   0x08009162   0x0000001a   Code   RO         2265    .text.UART_ClearITPendingBit  hal_uart.o
    0x0800917c   0x0800917c   0x00000026   Code   RO         2251    .text.UART_Cmd      hal_uart.o
    0x080091a2   0x080091a2   0x0000002c   Code   RO         2261    .text.UART_GetFlagStatus  hal_uart.o
    0x080091ce   0x080091ce   0x0000002c   Code   RO         2263    .text.UART_GetITStatus  hal_uart.o
    0x080091fa   0x080091fa   0x00000042   Code   RO         2253    .text.UART_ITConfig  hal_uart.o
    0x0800923c   0x0800923c   0x000000b4   Code   RO         2247    .text.UART_Init     hal_uart.o
    0x080092f0   0x080092f0   0x00000012   Code   RO         2259    .text.UART_ReceiveData  hal_uart.o
    0x08009302   0x08009302   0x0000001a   Code   RO         2257    .text.UART_SendData  hal_uart.o
    0x0800931c   0x0800931c   0x0000002e   Code   RO         2249    .text.UART_StructInit  hal_uart.o
    0x0800934a   0x0800934a   0x00000002   PAD
    0x0800934c   0x0800934c   0x00000024   Code   RO         1151    .text.UART_bUARTTXBUFEMPT  drv_sci.o
    0x08009370   0x08009370   0x00000090   Code   RO         1135    .text.UART_vCONSOLE_Init  drv_sci.o
    0x08009400   0x08009400   0x00000020   Code   RO         1141    .text.UART_vGetUARTData  drv_sci.o
    0x08009420   0x08009420   0x0000000c   Code   RO         1149    .text.UART_vModbusTxDisable  drv_sci.o
    0x0800942c   0x0800942c   0x00000038   Code   RO         1137    .text.UART_vNVICConfigure  drv_sci.o
    0x08009464   0x08009464   0x00000018   Code   RO          191    .text.UART_vSetUartReceiveCallbackFunc  mm32_it.o
    0x0800947c   0x0800947c   0x0000004c   Code   RO         1139    .text.UART_vWriteData  drv_sci.o
    0x080094c8   0x080094c8   0x000000ac   Code   RO          235    .text.UFN_vBackwardParamStartupInit  user_function.o
    0x08009574   0x08009574   0x000000b4   Code   RO          237    .text.UFN_vForwardParamStartupInit  user_function.o
    0x08009628   0x08009628   0x0000000c   Code   RO          890    .text.VOL_tGetDclVolRawSampleQ  voltage.o
    0x08009634   0x08009634   0x00000044   Code   RO          231    .text.Var_Filt      user_function.o
    0x08009678   0x08009678   0x0000000e   Code   RO           21    .text.WDG_Init      main.o
    0x08009686   0x08009686   0x00000008   Code   RO           23    .text.WDG_Refresh   main.o
    0x0800968e   0x0800968e   0x00000008   Code   RO          579    .text.WDN_AlignInit  winddetection.o
    0x08009696   0x08009696   0x00000002   PAD
    0x08009698   0x08009698   0x000001c8   Code   RO          581    .text.WDN_vCalculateBemfPeak  winddetection.o
    0x08009860   0x08009860   0x000000d8   Code   RO          569    .text.WDN_vInitWindDetection  winddetection.o
    0x08009938   0x08009938   0x0000012c   Code   RO          577    .text.WDN_vWindDetection  winddetection.o
    0x08009a64   0x08009a64   0x0000000c   Code   RO         2356    .text.WWDG_DeInit   hal_wwdg.o
    0x08009a70   0x08009a70   0x0000001c   Code   RO         2368    .text.WWDG_Enable   hal_wwdg.o
    0x08009a8c   0x08009a8c   0x00000002   Code   RO          127    .text.WWDG_IRQHandler  mm32_it.o
    0x08009a8e   0x08009a8e   0x00000046   Code   RO         2440    .text.WWDG_Init     iec60730_b_aux.o
    0x08009ad4   0x08009ad4   0x0000001c   Code   RO         2358    .text.WWDG_SetPrescaler  hal_wwdg.o
    0x08009af0   0x08009af0   0x00000024   Code   RO         2360    .text.WWDG_SetWindowValue  hal_wwdg.o
    0x08009b14   0x08009b14   0x00000088   Code   RO          125    .text.__NVIC_SetPriority  mm32_it.o
    0x08009b9c   0x08009b9c   0x0000008c   Code   RO         2515    .text.__NVIC_SetPriority  iec60730_b_runtimetest.o
    0x08009c28   0x08009c28   0x0000001c   Code   RO         2444    .text.__NVIC_SystemReset  iec60730_b_aux.o
    0x08009c44   0x08009c44   0x00000044   Code   RO         2545    .text.control_flow_check_point  iec60730_b_startup.o
    0x08009c88   0x08009c88   0x0000006c   Code   RO          317    .text.crc16         modbuscrc.o
    0x08009cf4   0x08009cf4   0x0000004a   Code   RO         2406    .text.delay_x_cycle  system_mm32spin0280.o
    0x08009d3e   0x08009d3e   0x00000002   PAD
    0x08009d40   0x08009d40   0x0000007c   Code   RO         1766    .text.exNVIC_Init   hal_misc.o
    0x08009dbc   0x08009dbc   0x00000024   Code   RO         1898    .text.exRCC_APB1PeriphReset  hal_rcc.o
    0x08009de0   0x08009de0   0x00000024   Code   RO         1902    .text.exRCC_APB2PeriphReset  hal_rcc.o
    0x08009e04   0x08009e04   0x00000038   Code   RO         2422    .text.fputc         uart_classb.o
    0x08009e3c   0x08009e3c   0x0000006c   Code   RO           25    .text.main          main.o
    0x08009ea8   0x08009ea8   0x000000b4   Code   RO          229    .text.variable_reset  user_function.o
    0x08009f5c   0x08009f5c   0x00000020   Code   RO         2659    i.__0printf         mc_p.l(printfa.o)
    0x08009f7c   0x08009f7c   0x0000002e   Code   RO         2740    i.__ARM_clz         mf_p.l(depilogue.o)
    0x08009faa   0x08009faa   0x0000000e   Code   RO         2750    i.__scatterload_copy  mc_p.l(handlers.o)
    0x08009fb8   0x08009fb8   0x00000002   Code   RO         2751    i.__scatterload_null  mc_p.l(handlers.o)
    0x08009fba   0x08009fba   0x0000000e   Code   RO         2752    i.__scatterload_zeroinit  mc_p.l(handlers.o)
    0x08009fc8   0x08009fc8   0x00000174   Code   RO         2666    i._fp_digits        mc_p.l(printfa.o)
    0x0800a13c   0x0800a13c   0x000006ec   Code   RO         2667    i._printf_core      mc_p.l(printfa.o)
    0x0800a828   0x0800a828   0x00000020   Code   RO         2668    i._printf_post_padding  mc_p.l(printfa.o)
    0x0800a848   0x0800a848   0x0000002c   Code   RO         2669    i._printf_pre_padding  mc_p.l(printfa.o)
    0x0800a874   0x0800a874   0x00000200   Data   RO         2580    .constdata          MLIB.lib(mlib.o)
    0x0800aa74   0x0800aa74   0x00000006   Data   RO         1119    .rodata..LTIM_vBrakeInit.TIM_tBrakeDutyCycle  drv_pwm.o
    0x0800aa7a   0x0800aa7a   0x00000020   Data   RO          968    .rodata.FPM_tCordicAngleTabQ15  math.o
    0x0800aa9a   0x0800aa9a   0x00000002   PAD
    0x0800aa9c   0x0800aa9c   0x0000003c   Data   RO         1118    .rodata.PWM_ucChannelConfig  drv_pwm.o
    0x0800aad8   0x0800aad8   0x00000100   Data   RO          319    .rodata.auchCRCHi   modbuscrc.o
    0x0800abd8   0x0800abd8   0x00000100   Data   RO          320    .rodata.auchCRCLo   modbuscrc.o
    0x0800acd8   0x0800acd8   0x00000020   Data   RO          540    .rodata.s_M1_STATE_RUN_TABLE_FAST  statemachine.o
    0x0800acf8   0x0800acf8   0x00000020   Data   RO          543    .rodata.s_M1_STATE_RUN_TABLE_SLOW  statemachine.o
    0x0800ad18   0x0800ad18   0x00000010   Data   RO          538    .rodata.s_STATE_FAST  statemachine.o
    0x0800ad28   0x0800ad28   0x00000010   Data   RO          539    .rodata.s_STATE_SLOW  statemachine.o
    0x0800ad38   0x0800ad38   0x00000025   Data   RO           27    .rodata.str1.1      main.o
    0x0800ad5d   0x0800ad5d   0x00000142   Data   RO         2452    .rodata.str1.1      iec60730_b_aux.o
    0x0800ae9f   0x0800ae9f   0x00000178   Data   RO         2519    .rodata.str1.1      iec60730_b_runtimetest.o
    0x0800b017   0x0800b017   0x00000010   Data   RO         1932    .rodata.tbPresc     hal_rcc.o
    0x0800b027   0x0800b027   0x00000001   PAD
    0x0800b028   0x0800b028   0x00000070   Data   RO         2748    Region$$Table       anon$$obj.o
    0x0800b098   0x0800b098   0x00000028   PAD
    0x0800b0c0   0x0800b0c0   0x00000004   Data   RO         2387    CHECKSUM            startup_mm32spin0280_keil.o


    Execution Region RAM_BUF (Exec base: 0x20000000, Load base: 0x0800b0c4, Size: 0x00000020, Max: 0x00000020, ABSOLUTE, UNINIT)

    Exec Addr    Load Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x20000000   0x0800b0c4   0x00000020   Data   RW         2564    RUN_TIME_RAM_BUF    iec60730_b_startup.o


    Execution Region RAM_PNT (Exec base: 0x20000020, Load base: 0x0800b0e4, Size: 0x00000010, Max: 0x00000010, ABSOLUTE, UNINIT)

    Exec Addr    Load Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x20000020   0x0800b0e4   0x00000010   Data   RW         2565    RUN_TIME_RAM_PNT    iec60730_b_startup.o


    Execution Region CLASSB (Exec base: 0x20000030, Load base: 0x0800b0f4, Size: 0x00000028, Max: 0x00000028, ABSOLUTE, UNINIT)

    Exec Addr    Load Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x20000030   0x0800b0f4   0x00000028   Data   RW         2549    CLASS_B_RAM         iec60730_b_startup.o


    Execution Region CLASSB_INV (Exec base: 0x20000058, Load base: 0x0800b11c, Size: 0x00000024, Max: 0x00000028, ABSOLUTE, UNINIT)

    Exec Addr    Load Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x20000058   0x0800b11c   0x00000024   Data   RW         2550    CLASS_B_RAM_REV     iec60730_b_startup.o


    Execution Region RW_IRAM1 (Exec base: 0x20000080, Load base: 0x0800b140, Size: 0x00000630, Max: 0x00001b70, ABSOLUTE)

    Exec Addr    Load Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x20000080   0x0800b140   0x00000004   Data   RW         2726    .data               mc_p.l(stdout.o)
    0x20000084   0x0800b144   0x00000014   Data   RW          652    .data.FPL_tPhaseLossPara  fsphaseloss.o
    0x20000098   0x0800b158   0x00000008   Data   RW          687    .data.FRK_tParaRotorLock  fsrotorlock.o
    0x200000a0   0x0800b160   0x00000004   Data   RW          686    .data.FRK_u32CurrentImpedance  fsrotorlock.o
    0x200000a4   0x0800b164   0x00000008   Data   RW          296    .data.MOS_aucReadAllData  modbus.o
    0x200000ac   0x0800b16c   0x00000008   Data   RW          297    .data.MOS_aucWriteData  modbus.o
    0x200000b4   0x0800b174   0x00000001   Data   RW          306    .data.MOS_u8IntervalTime  modbus.o
    0x200000b5   0x0800b175   0x00000001   Data   RW          551    .data.Motor_bStartClose  statemachine.o
    0x200000b6   0x0800b176   0x00000018   Data   RW          299    .data.RegData       modbus.o
    0x200000ce   0x0800b18e   0x00000002   PAD
    0x200000d0   0x0800b190   0x0000002c   Data   RW          366    .data.SCL_tSpeedControlData  speedcontrol.o
    0x200000fc   0x0800b1bc   0x00000008   Data   RW          367    .data.SCL_tSpeedControlPara  speedcontrol.o
    0x20000104   0x0800b1c4   0x00000014   Data   RW          749    .data.SMR_tFSVParaSecond  speedmonitor.o
    0x20000118   0x0800b1d8   0x00000004   Data   RW          743    .data.SMR_tFilterCoeEmf  speedmonitor.o
    0x2000011c   0x0800b1dc   0x00000004   Data   RW          746    .data.SMR_tFilterCoeSpd  speedmonitor.o
    0x20000120   0x0800b1e0   0x00000004   Data   RW          770    .data.STK_u32NbrOfTicksErrorCheck  fsclock.o
    0x20000124   0x0800b1e4   0x00000004   Data   RW          768    .data.STK_u32WaitSystemInit  fsclock.o
    0x20000128   0x0800b1e8   0x00000004   Data   RW         2408    .data.SystemCoreClock  system_mm32spin0280.o
    0x2000012c   0x0800b1ec   0x00000002   Data   RW         1122    .data.TIM_u16BrakeDutyCycle  drv_pwm.o
    0x2000012e   0x0800b1ee   0x00000002   Data   RW          586    .data.WDN_tWindDetectionPara  winddetection.o
    0x20000130   0x0800b1f0   0x00000001   Data   RW          536    .data.eM1_MainState  statemachine.o
    0x20000131   0x0800b1f1   0x00000007   PAD
    0x20000138        -       0x00000002   Zero   RW          207    .bss.ADC2_IRQHandler.u16Cnt  mm32_it.o
    0x2000013a   0x0800b1f1   0x00000002   PAD
    0x2000013c        -       0x00000004   Zero   RW          205    .bss.ADC2_IRQHandler.u32IaSum  mm32_it.o
    0x20000140        -       0x00000004   Zero   RW          206    .bss.ADC2_IRQHandler.u32IbSum  mm32_it.o
    0x20000144        -       0x00000001   Zero   RW          203    .bss.ADC2_IRQHandler.u8ADCTimeCnt  mm32_it.o
    0x20000145        -       0x00000001   Zero   RW          204    .bss.ADC2_IRQHandler.u8ADCTimeCnt2  mm32_it.o
    0x20000146   0x0800b1f1   0x00000002   PAD
    0x20000148        -       0x00000004   Zero   RW         2557    .bss.App_FLASH_BLOCK_WORDS  iec60730_b_startup.o
    0x2000014c        -       0x00000004   Zero   RW         2558    .bss.App_REF_CRC32  iec60730_b_startup.o
    0x20000150        -       0x00000004   Zero   RW         2553    .bss.App_ROM_END    iec60730_b_startup.o
    0x20000154        -       0x00000004   Zero   RW         2554    .bss.App_ROM_SIZE   iec60730_b_startup.o
    0x20000158        -       0x00000004   Zero   RW         2555    .bss.App_ROM_SIZEinWORDS  iec60730_b_startup.o
    0x2000015c        -       0x00000004   Zero   RW         2552    .bss.App_ROM_START  iec60730_b_startup.o
    0x20000160        -       0x00000004   Zero   RW         2556    .bss.App_STEPS_NUMBER  iec60730_b_startup.o
    0x20000164   0x0800b1f1   0x00000004   PAD
    0x20000168        -       0x00000060   Zero   RW          862    .bss.CUR_tCurBufferCal  current.o
    0x200001c8        -       0x00000068   Zero   RW          856    .bss.CUR_tDataBrd1  current.o
    0x20000230        -       0x00000004   Zero   RW         2566    .bss.Error_word     iec60730_b_startup.o
    0x20000234        -       0x0000000c   Zero   RW          789    .bss.FCN_tThreePhaseVol  fscommon.o
    0x20000240        -       0x00000064   Zero   RW          788    .bss.FCN_tThreePhaseVolCal  fscommon.o
    0x200002a4        -       0x00000001   Zero   RW          606    .bss.FHE_eCurrentCallId  fshandle.o
    0x200002a5   0x0800b1f1   0x00000003   PAD
    0x200002a8        -       0x00000004   Zero   RW          656    .bss.FPL_ptCurBufferCal  fsphaseloss.o
    0x200002ac   0x0800b1f1   0x00000004   PAD
    0x200002b0        -       0x00000080   Zero   RW          651    .bss.FPL_tPhaseLossData  fsphaseloss.o
    0x20000330        -       0x00000058   Zero   RW          685    .bss.FRK_tDataRotorLock  fsrotorlock.o
    0x20000388        -       0x00000004   Zero   RW         2520    .bss.FULL_FLASH_CHECKED  iec60730_b_runtimetest.o
    0x2000038c        -       0x00000002   Zero   RW          558    .bss.Fault_LED_Disp.u16FalultNumber  statemachine.o
    0x2000038e        -       0x00000002   Zero   RW          557    .bss.Fault_LED_Disp.u16FaultCnt  statemachine.o
    0x20000390        -       0x00000002   Zero   RW          556    .bss.Fault_LED_Disp.u16FaultTimeCnt  statemachine.o
    0x20000392   0x0800b1f1   0x00000002   PAD
    0x20000394        -       0x00000004   Zero   RW         2559    .bss.FlashFulltestcall  iec60730_b_startup.o
    0x20000398        -       0x00000004   Zero   RW         2521    .bss.FlashRuntestcall  iec60730_b_runtimetest.o
    0x2000039c        -       0x00000002   Zero   RW           29    .bss.M1FaultID      main.o
    0x2000039e        -       0x00000002   Zero   RW           30    .bss.M1FaultID_Record  main.o
    0x200003a0        -       0x00000002   Zero   RW          553    .bss.M1_FaultDetection.u16OvCntr  statemachine.o
    0x200003a2        -       0x00000002   Zero   RW          554    .bss.M1_FaultDetection.u16UvCntr  statemachine.o
    0x200003a4        -       0x00000002   Zero   RW          542    .bss.M1_Fault_Slow.u16FaultTimeCnt  statemachine.o
    0x200003a6        -       0x00000002   Zero   RW          552    .bss.M1_RunFreewheelSlow.u16FreeWheelTimeCnt  statemachine.o
    0x200003a8        -       0x00000002   Zero   RW          546    .bss.M1_RunStartupFast.s16PosElEst  statemachine.o
    0x200003aa        -       0x00000002   Zero   RW          547    .bss.M1_RunStartupFast.s16ThetaErr  statemachine.o
    0x200003ac        -       0x00000004   Zero   RW          548    .bss.M1_RunStartupFast.sAngle_temp  statemachine.o
    0x200003b0        -       0x00000002   Zero   RW          211    .bss.MIT_Dure_Time  mm32_it.o
    0x200003b2        -       0x00000002   Zero   RW          209    .bss.MIT_Start_time  mm32_it.o
    0x200003b4        -       0x00000002   Zero   RW          210    .bss.MIT_Stop_time  mm32_it.o
    0x200003b6        -       0x00000001   Zero   RW          208    .bss.MIT_TEST       mm32_it.o
    0x200003b7        -       0x00000001   Zero   RW          213    .bss.MIT_eADCReadId  mm32_it.o
    0x200003b8        -       0x00000014   Zero   RW          196    .bss.MIT_tInputCapture  mm32_it.o
    0x200003cc        -       0x0000000c   Zero   RW          214    .bss.MIT_u16NormalAdcValueArray  mm32_it.o
    0x200003d8        -       0x00000001   Zero   RW          302    .bss.MOS_bInitFinished  modbus.o
    0x200003d9        -       0x0000002d   Zero   RW          295    .bss.MOS_tModbusData  modbus.o
    0x20000406        -       0x00000008   Zero   RW          303    .bss.MOS_tModbusPara  modbus.o
    0x2000040e        -       0x00000002   Zero   RW          301    .bss.MOS_u8EventRegister  modbus.o
    0x20000410        -       0x00000002   Zero   RW          304    .bss.MOS_vModBusHandler_2.u16CalculateCRC  modbus.o
    0x20000412        -       0x00000002   Zero   RW          305    .bss.MOS_vModBusHandler_2.u16ReceivedCRC  modbus.o
    0x20000414        -       0x00000002   Zero   RW         1121    .bss.MOT_tBrakeData  drv_pwm.o
    0x20000416        -       0x00000002   Zero   RW         1120    .bss.MOT_tBrakePara  drv_pwm.o
    0x20000418        -       0x00000154   Zero   RW           28    .bss.Motor_1st      main.o
    0x2000056c        -       0x00000002   Zero   RW          544    .bss.Motor_s16DeltaAngle  statemachine.o
    0x2000056e   0x0800b1f1   0x00000002   PAD
    0x20000570        -       0x00000004   Zero   RW          549    .bss.Motor_s32DebugAngle1  statemachine.o
    0x20000574        -       0x00000004   Zero   RW          550    .bss.Motor_s32DebugAngle2  statemachine.o
    0x20000578        -       0x00000001   Zero   RW          555    .bss.Motor_u8UnderErrorTest  statemachine.o
    0x20000579   0x0800b1f1   0x00000003   PAD
    0x2000057c        -       0x00000004   Zero   RW         2560    .bss.RAMBuffertest_end  iec60730_b_startup.o
    0x20000580        -       0x00000004   Zero   RW         2562    .bss.RAMRunTimetest_end  iec60730_b_startup.o
    0x20000584        -       0x00000004   Zero   RW         2561    .bss.RAMRunTimetest_start  iec60730_b_startup.o
    0x20000588        -       0x00000004   Zero   RW         2563    .bss.RAM_endadd_run  iec60730_b_startup.o
    0x2000058c        -       0x00000001   Zero   RW          369    .bss.SCL_bDirectionDetAvailable  speedcontrol.o
    0x2000058d   0x0800b1f1   0x00000003   PAD
    0x20000590        -       0x00000004   Zero   RW          368    .bss.SCL_tInputCaptureData  speedcontrol.o
    0x20000594        -       0x00000004   Zero   RW          748    .bss.SMR_s32DeltaTime  speedmonitor.o
    0x20000598        -       0x00000004   Zero   RW          745    .bss.SMR_s32Im      speedmonitor.o
    0x2000059c        -       0x00000004   Zero   RW          744    .bss.SMR_s32Re      speedmonitor.o
    0x200005a0        -       0x00000098   Zero   RW          741    .bss.SMR_tFSVDataSecond  speedmonitor.o
    0x20000638        -       0x00000004   Zero   RW          195    .bss.STK_pfGeneralTimerCallback  mm32_it.o
    0x2000063c   0x0800b1f1   0x00000004   PAD
    0x20000640        -       0x00000008   Zero   RW          771    .bss.STK_tSafeTime  fsclock.o
    0x20000648        -       0x00000004   Zero   RW          767    .bss.STK_u32SystickDifference  fsclock.o
    0x2000064c        -       0x00000004   Zero   RW          766    .bss.STK_u32SystickOld  fsclock.o
    0x20000650        -       0x00000004   Zero   RW          769    .bss.STK_u32TickTimeErrorCounter  fsclock.o
    0x20000654        -       0x00000002   Zero   RW          337    .bss.TSE_u16EventFlag  timeslice.o
    0x20000656   0x0800b1f1   0x00000002   PAD
    0x20000658        -       0x00000004   Zero   RW          212    .bss.UART_pfReceivedCallback  mm32_it.o
    0x2000065c        -       0x00000004   Zero   RW          918    .bss.VOL_tDclVolSampleQ  voltage.o
    0x20000660        -       0x00000008   Zero   RW          585    .bss.WDN_tWindDetectionData  winddetection.o
    0x20000668        -       0x00000001   Zero   RW          587    .bss.WDN_u8TestSec_1  winddetection.o
    0x20000669        -       0x00000001   Zero   RW          588    .bss.WDN_u8TestSec_2  winddetection.o
    0x2000066a        -       0x00000001   Zero   RW          589    .bss.WDN_u8TestSec_3  winddetection.o
    0x2000066b        -       0x00000001   Zero   RW          590    .bss.WDN_u8TestSec_4  winddetection.o
    0x2000066c        -       0x00000001   Zero   RW          591    .bss.WDN_u8TestSec_5  winddetection.o
    0x2000066d        -       0x00000001   Zero   RW          537    .bss.eM1_RunSubState  statemachine.o
    0x2000066e   0x0800b1f1   0x00000002   PAD
    0x20000670        -       0x00000004   Zero   RW         2522    .bss.rom_test       iec60730_b_runtimetest.o
    0x20000674        -       0x00000001   Zero   RW         2517    .bss.runtime_checkindx  iec60730_b_runtimetest.o
    0x20000675        -       0x00000001   Zero   RW         2518    .bss.runtime_flash_CtrlFlow_indx  iec60730_b_runtimetest.o
    0x20000676        -       0x00000002   Zero   RW          545    .bss.s16PosElEst_SMO  statemachine.o
    0x20000678        -       0x00000004   Zero   RW         2487    .bss.temp           iec60730_b_clocktest.o
    0x2000067c        -       0x00000002   Zero   RW          863    .bss.testA_N        current.o
    0x2000067e        -       0x00000002   Zero   RW          864    .bss.testA_P        current.o
    0x20000680        -       0x00000002   Zero   RW          865    .bss.testB_N        current.o
    0x20000682        -       0x00000002   Zero   RW          866    .bss.testB_P        current.o
    0x20000684        -       0x00000002   Zero   RW          867    .bss.testC_N        current.o
    0x20000686        -       0x00000002   Zero   RW          868    .bss.testC_P        current.o
    0x20000688        -       0x00000004   Zero   RW         2454    .bss.tmp0           iec60730_b_aux.o
    0x2000068c        -       0x00000004   Zero   RW         2488    .bss.tmpIC1         iec60730_b_clocktest.o
    0x20000690        -       0x00000004   Zero   RW          197    .bss.u16Test1       mm32_it.o
    0x20000694        -       0x00000004   Zero   RW          198    .bss.u16Test2       mm32_it.o
    0x20000698        -       0x00000004   Zero   RW          199    .bss.u16Test3       mm32_it.o
    0x2000069c        -       0x00000004   Zero   RW          200    .bss.u16Test4       mm32_it.o
    0x200006a0        -       0x00000004   Zero   RW          201    .bss.u16Test5       mm32_it.o
    0x200006a4        -       0x00000004   Zero   RW          202    .bss.u16Test6       mm32_it.o
    0x200006a8        -       0x00000001   Zero   RW          541    .bss.ucErrorCount   statemachine.o
    0x200006a9   0x0800b1f1   0x00000003   PAD
    0x200006ac        -       0x00000004   Zero   RW         2453    .bss.uwTick         iec60730_b_aux.o


    Execution Region STACK_NO_HEAP (Exec base: 0x20001bf0, Load base: 0x0800b1f8, Size: 0x00000410, Max: 0x00000410, ABSOLUTE, UNINIT)

    Exec Addr    Load Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x20001bf0   0x0800b1f8   0x00000010   Data   RW         2551    STACK_BOTTOM        iec60730_b_startup.o
    0x20001c00        -       0x00000400   Zero   RW         2383    STACK               startup_mm32spin0280_keil.o


==============================================================================

Image component sizes


      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Object Name

      1160         28          0          0          0      12118   board.o
       620         36          0          0        212      11980   current.o
       286          8          0          0          0       6158   drv_adc.o
       216          8          0          0          0       4865   drv_capture.o
       128          0          0          0          0       3151   drv_comp.o
       124          4          0          0          0       3977   drv_counter.o
       122         16          0          0          0       1528   drv_div.o
        76          4          0          0          0       1086   drv_iwdg.o
        40          0          0          0          0        746   drv_opamp.o
       264         12          0          0          0       4155   drv_output.o
       900         40         66          2          4       7963   drv_pwm.o
       356         12          0          0          0       5542   drv_sci.o
        82          8          0          0          0       1215   drv_sqrt.o
        68          0          0          0          0       1222   filter.o
      1106         40          0          0          0      10144   foc_pmsm.o
       284         40          0          8         20       1532   fsclock.o
       298         12          0          0        112       3293   fscommon.o
       104          4          0          0          1        940   fshandle.o
        24          4          0          0          0       1006   fsmcu.o
      2272         48          0         20        132       8791   fsphaseloss.o
       910         44          0         12         88       5418   fsrotorlock.o
       928         12          0          0          0      14686   hal_adc.o
       220          8          0          0          0       5589   hal_comp.o
        76          8          0          0          0       1802   hal_crc.o
        60          4          0          0          0       4100   hal_exti.o
       454          4          0          0          0       5225   hal_gpio.o
       192         20          0          0          0       3601   hal_iwdg.o
       248         32          0          0          0       2870   hal_misc.o
        56          4          0          0          0       1301   hal_opamp.o
      1104         80         16          0          0      21337   hal_rcc.o
      2784         66          0          0          0      27966   hal_tim.o
       488          4          0          0          0       8659   hal_uart.o
       104          8          0          0          0       2089   hal_wwdg.o
      1070        130        322          0          8       4685   iec60730_b_aux.o
       792         84          0          0          8       9191   iec60730_b_clocktest.o
      1540        226        376          0         14       5344   iec60730_b_runtimetest.o
      1004        132          0        140         52       5381   iec60730_b_startup.o
       130          8         37          0        344       8391   main.o
       264          8         32          0          0       2613   math.o
      1544        164          0          0         84      13538   mm32_it.o
      1464         86          0         41         60       6716   modbus.o
       108          8        512          0          0       1143   modbuscrc.o
      1534        132          0         52          5       6244   speedcontrol.o
       974         72          0         28        164      11224   speedmonitor.o
        40         14        196          0       1024        720   startup_mm32spin0280_keil.o
      3378        228         96          2         37      18251   statemachine.o
      1004         76          0          4          0       3719   system_mm32spin0280.o
       268         16          0          0          2       1352   timeslice.o
        72          4          0          0          0       2073   transfer.o
       220          8          0          0          0       3911   uart_classb.o
      1658        196          0          0          0      10365   user_function.o
        12          4          0          0          4       8620   voltage.o
      1312        116          0          2         13       4525   winddetection.o

    ----------------------------------------------------------------------
     34588       2330       1808        316       2428     324061   Object Totals
         0          0        112          0          0          0   (incl. Generated)
        46          0         43          5         40          0   (incl. Padding)

    ----------------------------------------------------------------------

      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Library Member Name

       388         20          0          0          0        548   iec60730_b_cpurunkeil.o
       528         52          0          0          0        592   iec60730_b_cpustartkeil.o
       472         68          0          0          0       1799   iec60730_b_flashtest.o
       804         92          0          0          0        644   iec60730_b_ramtestkeil.o
       264         16          0          0          0       2215   iec60730_b_transpram.o
       436          8          0          0          0         76   mcflib.o
       940         14        512          0          0      17321   mlib.o
        58          0          0          0          0          0   __dczerorl.o
         0          0          0          0          0          0   entry.o
         0          0          0          0          0          0   entry10a.o
         0          0          0          0          0          0   entry11a.o
         8          4          0          0          0          0   entry2.o
         4          0          0          0          0          0   entry5.o
         0          0          0          0          0          0   entry7b.o
         0          0          0          0          0          0   entry8b.o
         8          4          0          0          0          0   entry9a.o
        30          0          0          0          0          0   handlers.o
        40          0          0          0          0         72   idiv.o
        36          8          0          0          0         68   init.o
         0          0          0          0          0          0   iusefp.o
        32          0          0          0          0         68   llshl.o
        38          0          0          0          0         68   llsshr.o
        34          0          0          0          0         68   llushr.o
      2252         98          0          0          0        412   printfa.o
         8          0          0          0          0         60   siabs.o
         0          0          0          4          0          0   stdout.o
        44          0          0          0          0         72   uidiv.o
        96          0          0          0          0         84   uldiv.o
        40          2          0          0          0         68   cdrcmple.o
       356          4          0          0          0        140   dadd.o
        44          0          0          0          0         68   dcmpge.o
        44          0          0          0          0         68   dcmple.o
        44          0          0          0          0         68   dcmplt.o
       240          6          0          0          0         84   ddiv.o
       236          0          0          0          0        216   depilogue.o
        72         10          0          0          0         72   dfixi.o
        64         10          0          0          0         68   dfixul.o
        40          6          0          0          0         68   dflti.o
       208          6          0          0          0         88   dmul.o
       124          0          0          0          0         72   fdiv.o
       130          0          0          0          0        144   fepilogue.o
        40          0          0          0          0         60   ffixui.o
        14          0          0          0          0         68   ffltui.o
       122          0          0          0          0         72   fmul.o

    ----------------------------------------------------------------------
      8344        428        512          4          0      25591   Library Totals
         6          0          0          0          0          0   (incl. Padding)

    ----------------------------------------------------------------------

      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Library Name

      2456        248          0          0          0       5798   IEC60730B_M0_COM_KEIL_v1_0.lib
       436          8          0          0          0         76   MCFLIB.lib
       940         14        512          0          0      17321   MLIB.lib
      2688        114          0          4          0        972   mc_p.l
      1818         44          0          0          0       1424   mf_p.l

    ----------------------------------------------------------------------
      8344        428        512          4          0      25591   Library Totals

    ----------------------------------------------------------------------

==============================================================================


      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   

     42932       2758       2320        320       2428     347652   Grand Totals
     42932       2758       2320        320       2428     347652   ELF Image Totals
     42932       2758       2320        320          0          0   ROM Totals

==============================================================================

    Total RO  Size (Code + RO Data)                45252 (  44.19kB)
    Total RW  Size (RW Data + ZI Data)              2748 (   2.68kB)
    Total ROM Size (Code + RO Data + RW Data)      45572 (  44.50kB)

==============================================================================

